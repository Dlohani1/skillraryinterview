-- phpMyAdmin SQL Dump
-- version 4.6.6deb5
-- https://www.phpmyadmin.net/
--
-- Host: localhost:3306
-- Generation Time: Feb 28, 2020 at 12:05 PM
-- Server version: 5.7.29-0ubuntu0.18.04.1
-- PHP Version: 7.2.24-0ubuntu0.18.04.3

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `skillrary_assessment`
--

-- --------------------------------------------------------

--
-- Table structure for table `answers`
--

CREATE TABLE `answers` (
  `id` int(11) NOT NULL,
  `question_id` int(11) NOT NULL,
  `answer` text NOT NULL,
  `is_correct` int(11) NOT NULL DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `answers`
--

INSERT INTO `answers` (`id`, `question_id`, `answer`, `is_correct`) VALUES
(5, 4, 'a', 0),
(6, 4, 'b', 0),
(7, 4, 'c', 0),
(8, 4, 'd', 1),
(9, 5, 'a', 0),
(10, 5, 'b', 1),
(11, 5, 'c', 0),
(12, 5, 'd', 0),
(13, 6, 'd', 0),
(14, 6, 'e', 1),
(15, 6, 'f', 0),
(16, 6, 'g', 0),
(17, 7, '35', 0),
(18, 7, '36', 0),
(19, 7, '45', 0),
(20, 7, '54', 1),
(21, 8, '20M', 1),
(22, 8, '25M', 0),
(23, 8, '22.5M', 0),
(24, 8, '9M', 0),
(25, 9, '48', 0),
(26, 9, '60', 1),
(27, 9, '54', 0),
(28, 9, '90', 0),
(29, 10, '4 years', 1),
(30, 10, '8 years', 0),
(31, 10, '10 years', 0),
(32, 10, 'None of these', 0),
(33, 11, '12', 1),
(34, 11, '9', 0),
(35, 11, '1', 0),
(36, 11, '3', 0),
(37, 12, 'RQPS', 1),
(38, 12, 'QSPR', 0),
(39, 12, 'SQPR', 0),
(40, 12, 'PQRS', 0),
(41, 13, 'SRPQ', 0),
(42, 13, 'QPRS', 1),
(43, 13, 'QPSR', 0),
(44, 13, 'RQPS', 0),
(45, 14, 'SPQR', 0),
(46, 14, 'QSRP', 0),
(47, 14, 'PSRQ', 1),
(48, 14, 'QPSR', 0),
(49, 15, 'PQRS', 0),
(50, 15, 'PSRQ', 1),
(51, 15, 'PSQR', 0),
(52, 15, 'SRPQ', 0),
(53, 16, 'QRPS', 0),
(54, 16, 'SQPR', 0),
(55, 16, 'SQRP', 0),
(56, 16, 'QPSR', 1),
(57, 17, 'Hindmost', 0),
(58, 17, 'Unimportant', 1),
(59, 17, 'Disposed', 0),
(60, 17, 'Premature', 0),
(61, 18, 'Defends', 0),
(62, 18, 'Deprives', 0),
(63, 18, 'Deserts', 1),
(64, 18, 'Devises', 0),
(65, 19, 'Wonderful', 0),
(66, 19, 'Graceful', 0),
(67, 19, 'Ugly', 1),
(68, 19, 'Handsome', 0),
(69, 20, 'Safeguarding', 0),
(70, 20, 'Neglecting', 0),
(71, 20, 'Ignoring', 0),
(72, 20, 'Nurturing', 1),
(73, 21, 'Drive', 1),
(74, 21, 'Jettison', 0),
(75, 21, 'Burst', 0),
(76, 21, 'Acclimatize', 0),
(77, 23, 'a', 0),
(78, 23, 'b', 0),
(79, 23, 'c', 0),
(80, 23, 'd', 0),
(81, 24, 'a', 0),
(82, 24, 'b', 0),
(83, 24, 'c', 0),
(84, 24, 'd', 1),
(85, 25, 'true', 1),
(86, 26, 'Writing a query with parameters', 0),
(87, 26, 'Using sp_executesql', 0),
(88, 26, 'Using EXEC', 0),
(89, 26, 'All of the mentioned', 1),
(90, 27, 'geometry', 0),
(91, 27, 'sql_variant', 1),
(92, 27, 'cursor', 0),
(93, 27, 'all of the mentioned', 0),
(94, 28, 'DELETE', 0),
(95, 28, 'REMOVE', 0),
(96, 28, 'DROP', 0),
(97, 28, 'TRUNCATE', 1),
(98, 29, 'DELETE does not free the space containing the table and TRUNCATE free the space containing the table', 1),
(99, 29, 'Both DELETE and TRUNCATE free the space containing the table', 0),
(100, 29, 'Both DELETE and TRUNCATE does not free the space containing the table', 0),
(101, 29, 'DELETE free the space containing the table and TRUNCATE does not free the space containing the table', 0),
(102, 30, 'SELECT * FROM Persons WHERE FirstName=?a?', 0),
(103, 30, 'SELECT * FROM Persons WHERE FirstName LIKE ?a%?', 0),
(104, 30, 'SELECT * FROM Persons WHERE FirstName LIKE ?%a?', 1),
(105, 30, 'SELECT * FROM Persons WHERE FirstName=?%a%?', 0),
(106, 31, 'SELECT clause only', 1),
(107, 31, 'DELETE and UPDATE clauses', 0),
(108, 31, 'UPDATE clause only', 0),
(109, 31, 'All of the mentioned', 0),
(110, 32, 'UPDATE Persons SET LastName=?Hansen? INTO LastName=?Nilsen?', 0),
(111, 32, 'MODIFY Persons SET LastName=?Nilsen? WHERE LastName=?Hansen?', 0),
(112, 32, 'MODIFY Persons SET LastName=?Hansen? INTO LastName=?Nilsen?', 0),
(113, 32, 'UPDATE Persons SET LastName=?Nilsen? WHERE LastName=?Hansen?', 1),
(114, 33, 'SELECT city, temperature, condition FROM weather WHERE condition NOT IN (?sunny?, ?cloudy?)', 1),
(115, 33, 'SELECT city, temperature, condition FROM weather WHERE condition NOT BETWEEN (?sunny?, ?cloudy?)', 0),
(116, 33, 'SELECT city, temperature, condition FROM weather WHERE condition IN (?sunny?, ?cloudy?)', 0),
(117, 33, 'SELECT city, temperature, condition FROM weather WHERE condition BETWEEN (?sunny?, ?cloudy?);', 0),
(118, 34, 'Equi-join', 0),
(119, 34, 'Natural join', 0),
(120, 34, 'Outer join', 1),
(121, 34, 'All of the Mentioned', 0),
(122, 35, 'Equi-join', 0),
(123, 35, 'Natural join', 0),
(124, 35, 'Outer join', 0),
(125, 35, 'All of the Mentioned', 1),
(126, 36, 'Uses the result of an inner query to determine the processing of an outer query', 1),
(127, 36, 'Uses the result of an outer query to determine the processing of an inner query', 0),
(128, 36, 'Uses the result of an inner query to determine the processing of an inner query', 0),
(129, 36, 'Uses the result of an outer query to determine the processing of an outer query', 0),
(130, 37, 'ORDER BY Does Not Work', 0),
(131, 37, 'Index Created on View Used Often', 1),
(132, 37, 'Cross Database Queries Not Allowed in Indexed View', 0),
(133, 37, 'Adding Column is Expensive by Joining Table Outside View', 0),
(134, 38, 'Views could be looked as an additional layer on the table which enables us to protect intricate or sensitive data based upon our needs', 0),
(135, 38, 'Views are virtual tables that are compiled at run time', 0),
(136, 38, 'Creating views can improve query response time', 0),
(137, 38, 'All of the Mentioned', 1),
(138, 39, 'CREATE VIEW AS SELECT', 1),
(139, 39, 'CREATE VIEW AS UPDATE', 0),
(140, 39, 'DROP VIEW AS SELECT', 0),
(141, 39, 'CREATE VIEW AS UPDATE', 0),
(142, 40, 'Database-scoped Dynamic Management View', 0),
(143, 40, 'Complex View', 0),
(144, 40, 'Catalog View', 0),
(145, 40, 'None of the mentioned', 1),
(146, 41, 'ORDER BY Does Not Work', 0),
(147, 41, 'Index Created on View Used Often', 1),
(148, 41, 'Cross Database Queries Not Allowed in Indexed View', 0),
(149, 41, 'Adding Column is Expensive by Joining Table Outside View', 0),
(150, 42, 'DROP VIEW', 1),
(151, 42, 'DELETE VIEW', 0),
(152, 42, 'REMOVE VIEW', 0),
(153, 42, 'TRUNCATE VIEW', 0),
(154, 43, 'Collection of values', 1),
(155, 43, 'Single value', 0),
(156, 43, 'Double value', 0),
(157, 43, 'All of the mentioned', 0),
(158, 44, 'Avg', 0),
(159, 44, 'Sum', 0),
(160, 44, 'With', 1),
(161, 44, 'Min', 0),
(162, 45, 'MODIFY PERSONS SET LASTNAME= ?Hansen? INTO LASTNAME=  ?Nilsen?', 0),
(163, 45, 'MODIFY PERSONS SET LASTNAME= ?Nilsen? WHERE LASTNAME=  ?Hansen?', 0),
(164, 45, 'UPDATE PERSONS SET LASTNAME= ?Nilsen? WHERE LASTNAME= ?Hansen?', 1),
(165, 45, 'UPDATE PERSONS SET LASTNAME= ?Hansen? INTO LASTNAME=  ?Nilsen?', 0),
(166, 46, 'Grant select on SCOTT.EMP to USER;', 1),
(167, 46, 'Grant select to SCOTT.EMP to USER;', 0),
(168, 46, 'Grant select from SCOTT.EMP to USER;', 0),
(169, 46, 'None of above.', 0),
(170, 47, 'SELECT * FROM Emp WHERE Emp_Add LIKE \'%er%\';', 1),
(171, 47, 'SELECT * FROM Emp WHERE Emp_Add LIKE \'_er_\';', 0),
(172, 47, 'SELECT * FROM Emp WHERE Emp_Add LIKE \'er%\';', 0),
(173, 47, 'SELECT * FROM Emp WHERE Emp_Add LIKE \'%er\';', 0),
(174, 48, '12300 ; 1235 ; 123.45', 0),
(175, 48, '12300 ; 1235 ; 1.2345', 0),
(176, 48, '123 ; 34 ;  45', 0),
(177, 48, '12300 ; 12.35 ; 12.345', 1),
(178, 49, 'Outer Join', 0),
(179, 49, 'Inner Join', 0),
(180, 49, 'Natural Join', 0),
(181, 49, 'Self Join', 1),
(182, 50, 'The operating system periodically deletes all of the java files available on the system.', 0),
(183, 50, 'Any package imported in a program and not used is automatically deleted.', 0),
(184, 50, 'When all references to an object are gone, the memory used by the object is automatically reclaimed.', 1),
(185, 50, 'The JVM checks the output of any Java program and deletes anything that doesn?t make sense.', 0),
(186, 51, 'private final static int answer = 42;', 0),
(187, 51, 'public static int answer = 42;', 1),
(188, 51, 'final static answer = 42;', 0),
(189, 51, 'int answer;', 0),
(190, 52, '25', 0),
(191, 52, '24', 0),
(192, 52, '32', 1),
(193, 52, '33', 0),
(194, 53, '3', 0),
(195, 53, '0', 0),
(196, 53, '6', 0),
(197, 53, '1', 1),
(198, 54, '0 2 4 6 8', 1),
(199, 54, '1 3 5 7 9', 0),
(200, 54, '0 1 2 3 4 5 6 7 8 9', 0),
(201, 54, '1 2 3 4 5 6 7 8 9 10', 0),
(202, 55, 'Hello java', 0),
(203, 55, 'Hellojava', 0),
(204, 55, 'HJavalo', 1),
(205, 55, 'Hjava', 0),
(206, 56, 'get()', 0),
(207, 56, 'Sizeof()', 0),
(208, 56, 'lengthof()', 0),
(209, 56, 'length()', 1),
(210, 57, 'Error', 0),
(211, 57, 'Exception', 1),
(212, 57, 'RuntimeExecption', 0),
(213, 57, 'All of the mentioned', 0),
(214, 58, 'Method overloading', 0),
(215, 58, 'Method overriding', 1),
(216, 58, 'Method hiding', 0),
(217, 58, 'None of the mentioned', 0),
(218, 59, 'static', 0),
(219, 59, 'constant', 0),
(220, 59, 'protected', 0),
(221, 59, 'final', 1),
(222, 60, 'super();', 1),
(223, 60, 'superclass.();', 0),
(224, 60, 'super(void);', 0),
(225, 60, 'super.A();', 0),
(226, 61, 'concrete class', 0),
(227, 61, 'abstract class', 1),
(228, 61, 'final class', 0),
(229, 61, 'None', 0),
(230, 62, 'Method Name, Return Type and Number Of Arguments', 0),
(231, 62, 'Access Modifier, Method Name and Types Of Arguments', 0),
(232, 62, 'Method Name, Number Of Arguments, Types Of Arguments and Order Of Arguments', 1),
(233, 62, 'Return Type, Access Modifier and Order Of Arguments', 0),
(234, 63, 'only sum(10)', 0),
(235, 63, 'only sum(10,20)', 0),
(236, 63, 'only sum(10) & sum(10,20)', 0),
(237, 63, 'all of the methods mentioned', 1),
(238, 64, 'TRUE', 1),
(239, 64, 'FALSE', 0),
(240, 64, 'Exception', 0),
(241, 64, 'None', 0),
(242, 65, 'Its name must be same as that of class', 0),
(243, 65, 'It must not have any return type', 0),
(244, 65, 'It must contain a definition body', 1),
(245, 65, 'It can contains arguments', 0),
(246, 66, 'All classes are converted as abstract class', 0),
(247, 66, 'Derived class must be of abstract type', 0),
(248, 66, 'All the derived classes must implement the undefined functions', 1),
(249, 66, 'Derived classes can?t redefine the function', 0),
(250, 67, 'It is a way of combining various data members into a single unit', 0),
(251, 67, 'It is a way of combining various member functions into a single unit', 0),
(252, 67, 'It is a way of combining various data members and member functions into a single unit which can operate on any data', 0),
(253, 67, 'It is a way of combining various data members and member functions that operate on those data members into a single unit', 1),
(254, 68, 'Create public member functions to access those data members', 1),
(255, 68, 'Create private member functions to access those data members', 0),
(256, 68, 'Create protected member functions to access those data members', 0),
(257, 68, 'Private data members can never be accessed from outside the class', 0),
(258, 69, 'Binding and Hiding respectively', 1),
(259, 69, 'Hiding and Binding respectively', 0),
(260, 69, 'Can be used any way', 0),
(261, 69, 'Hiding and hiding respectively', 0),
(262, 70, 'Only 7 levels of inheritance', 0),
(263, 70, 'At least 7 levels of inheritance', 0),
(264, 70, 'At most 16 levels of inheritance', 0),
(265, 70, 'As many levels of inheritance as required', 1),
(266, 71, 'public String getMessage()', 0),
(267, 71, 'public Throwable getCause()', 0),
(268, 71, 'public String toString()', 1),
(269, 71, 'public void printStackTrace()', 0),
(270, 72, 'stop()', 0),
(271, 72, 'sleep()', 1),
(272, 72, 'join()', 0),
(273, 72, 'call()', 0),
(274, 73, 'run()', 0),
(275, 73, 'Alive()', 0),
(276, 73, 'isAlive()', 1),
(277, 73, 'checkRun()', 0),
(278, 74, 'sleep()', 0),
(279, 74, 'isAlive()', 0),
(280, 74, 'stop()', 0),
(281, 74, 'join()', 1),
(282, 75, 'A thread can be formed by implementing Runnable interface only.', 0),
(283, 75, 'A thread can be formed by a class that extends Thread class.', 0),
(284, 75, 'start() method is used to begin execution of the thread.', 0),
(285, 75, 'run() method is used to begin execution of a thread before start() method in special cases.', 1),
(286, 76, 'It?s a process in which two different processes run simultaneously.', 0),
(287, 76, 'It?s a process in which two or more parts of same process run simultaneously.', 1),
(288, 76, 'Its a process in which many different process are able to access same information.', 0),
(289, 76, 'Its a process in which a single process can access information from many sources.', 0),
(290, 77, 'clear()', 1),
(291, 77, 'reset()', 0),
(292, 77, 'delete()', 0),
(293, 77, 'refresh()', 0),
(294, 78, 'A group of classes', 1),
(295, 78, 'A group of objects', 0),
(296, 78, 'A group of interfaces', 0),
(297, 78, 'None of the mentioned', 0),
(298, 79, 'Set', 1),
(299, 79, 'List', 0),
(300, 79, 'Runnable', 0),
(301, 79, 'Collection', 0),
(302, 80, 'The value ?4? is printed at the command line', 0),
(303, 80, 'Compilation fails because of an error in line', 0),
(304, 80, 'NullPointerException occurs at runtime', 1),
(305, 80, 'IllegalStateException occurs at runtime', 0),
(306, 81, 'regionMatch()', 0),
(307, 81, 'match()', 0),
(308, 81, 'RegionMatches()', 0),
(309, 81, 'regionMatches()', 1),
(310, 82, 'String', 0),
(311, 82, 'StringBuffer', 1),
(312, 82, 'StringBuffer & String', 0),
(313, 82, 'None', 0),
(314, 83, 'wakeAll()', 0),
(315, 83, 'notify()', 0),
(316, 83, 'start()', 0),
(317, 83, 'notifyAll()', 1),
(318, 84, ' implements', 0),
(319, 84, 'inherited', 0),
(320, 84, 'using', 0),
(321, 84, 'extends', 1),
(322, 85, '3 4 4 1', 1),
(323, 85, '3 2 3 4', 0),
(324, 85, '2 3 4 3', 0),
(325, 85, '3 2 4 2', 0),
(326, 86, 'boolean b1 = 1;', 0),
(327, 86, 'boolean b2 = \"false\";', 0),
(328, 86, 'boolean b3 = false;', 1),
(329, 86, 'boolean b4 = ?true?;', 0),
(330, 87, '0', 0),
(331, 87, 'java.lang.NullPointerException', 0),
(332, 87, 'Compile Error', 0),
(333, 87, 'java.lang.ArrayIndexOutOfBoundsException', 1),
(334, 88, 'Encapsulation?', 1),
(335, 88, 'Abstraction', 0),
(336, 88, 'Data Hiding?', 0),
(337, 88, '?Polymorphism', 0),
(338, 89, 'signed', 1),
(339, 89, 'unsigned', 0),
(340, 89, 'Both of the above', 0),
(341, 89, 'none', 0),
(342, 90, 'Two type are compatible and size of destination type is shorter than source type.', 0),
(343, 90, 'Two type are compatible and size of destination type is equal of source type.', 0),
(344, 90, 'Two type are compatible and size of destination type is larger than source type.', 1),
(345, 90, 'All of the above', 0),
(346, 91, 'float', 0),
(347, 91, 'double ?', 1),
(348, 91, 'Compilation Error', 0),
(349, 91, 'Exception is thrown at runtime', 0),
(350, 92, '8, 7 ?', 1),
(351, 92, '10, 7', 0),
(352, 92, 'Compilation fails with an error.', 0),
(353, 92, 'none', 0),
(354, 93, '-1', 0),
(355, 93, '0', 0),
(356, 93, '1', 0),
(357, 93, '2', 1),
(358, 94, 'char[] c = new char();', 0),
(359, 94, 'char[] c = new char[5]; ?', 1),
(360, 94, 'char[] c = new char(4);', 0),
(361, 94, 'char[] c = new char[0]; ?', 0),
(362, 95, '120, 200, 16, 21', 0),
(363, 95, '120, 200, 016, 021', 0),
(364, 95, '120, 200, 14, 17', 1),
(365, 95, '016 and 021 are compile error. It should be written as 16 and 21.', 0),
(366, 96, 'String()', 1),
(367, 96, 'String(void)', 0),
(368, 96, 'String(0)', 0),
(369, 96, 'None of the mentioned', 0),
(370, 97, 'Aggregation', 0),
(371, 97, 'Composition', 0),
(372, 97, 'Encapsulation', 0),
(373, 97, 'Association', 1),
(374, 98, 'Integer', 1),
(375, 98, 'Float', 0),
(376, 98, 'double', 0),
(377, 98, 'long', 0),
(378, 99, 'for-each loop', 0),
(379, 99, 'Iterator', 0),
(380, 99, 'ListIterator', 0),
(381, 99, 'a and B', 1),
(382, 100, 'Compile Time Error', 1),
(383, 100, 'Exception', 0),
(384, 100, '5', 0),
(385, 100, '6', 0),
(386, 101, 'Exception at runtime', 0),
(387, 101, 'Prod is 20', 1),
(388, 101, 'Compile time error', 0),
(389, 101, 'None of the mentioned', 0),
(390, 102, 'wait()', 0),
(391, 102, 'finally()', 1),
(392, 102, 'getClass()', 0),
(393, 102, 'clone()', 0),
(394, 103, 'equal()', 0),
(395, 103, 'hashCode() and equals()', 1),
(396, 103, 'toString() and equals()', 0),
(397, 103, 'toString() and hashCode()', 0),
(398, 104, 'java.lang', 1),
(399, 104, 'java.io', 0),
(400, 104, 'java.util', 0),
(401, 104, 'java.parent', 0),
(402, 105, 'We can override the String class methods', 1),
(403, 105, 'We cannot inherit the String class', 0),
(404, 105, 'String class is present in java.lang package', 0),
(405, 105, 'String class objects are immutable', 0),
(406, 106, 'TRUE', 1),
(407, 106, 'Compile time error', 0),
(408, 106, 'Exception', 0),
(409, 106, 'FALSE', 0),
(410, 107, '0', 1),
(411, 107, 'Exception', 0),
(412, 107, 'Compile time error', 0),
(413, 107, 'Garbage Value', 0),
(414, 108, 'At run time', 0),
(415, 108, 'At compile time', 1),
(416, 108, 'At coding time', 0),
(417, 108, 'At execution time', 0),
(418, 109, 'Compile error', 0),
(419, 109, 'a = 0\nDivide by zero error\ninside the finally block', 1),
(420, 109, 'A = 0', 0),
(421, 109, 'inside the finally block', 0),
(422, 110, '5%', 0),
(423, 110, '10%', 0),
(424, 110, '16%', 0),
(425, 110, '22%', 1),
(426, 111, '1/321/32', 0),
(427, 111, '1/41/4', 1),
(428, 111, '11', 0),
(429, 111, '4', 0),
(430, 112, '06:05', 0),
(431, 112, '08:07', 1),
(432, 112, '03:07', 0),
(433, 112, '06:01', 0),
(434, 113, '32', 0),
(435, 113, '43', 0),
(436, 113, '52', 0),
(437, 113, '53', 1),
(438, 114, '5880', 1),
(439, 114, '6880', 0),
(440, 114, '7880', 0),
(441, 114, '8880', 0),
(442, 115, 'Jan-63', 0),
(443, 115, 'Feb-35', 0),
(444, 115, 'Feb-63', 1),
(445, 115, 'Sep-14', 0),
(446, 116, '02:05', 0),
(447, 116, '03:05', 0),
(448, 116, '04:05', 1),
(449, 116, '05:04', 0),
(450, 117, '1.091076389', 1),
(451, 117, '07:37:03', 0),
(452, 117, '1.040324', 0),
(453, 117, 'None of these', 0),
(454, 118, '01:21:02', 0),
(455, 118, '02:12:01', 1),
(456, 118, '03:13:01', 0),
(457, 118, '03:04', 0),
(458, 119, '0', 0),
(459, 119, '9900', 0),
(460, 119, '10000', 1),
(461, 119, '11000', 0),
(462, 120, '60 kg', 0),
(463, 120, '63 kg', 1),
(464, 120, '50 kg', 0),
(465, 120, '77 kg', 0),
(466, 121, '57', 1),
(467, 121, '56.8', 0),
(468, 121, '58.2', 0),
(469, 121, '52.2', 0),
(470, 122, '176', 0),
(471, 122, '187', 1),
(472, 122, '540', 0),
(473, 122, '748', 0),
(474, 123, '17', 0),
(475, 123, '23', 1),
(476, 123, '77', 0),
(477, 123, 'None of these', 0),
(478, 124, '20', 0),
(479, 124, '30', 0),
(480, 124, '25', 1),
(481, 124, '600', 0),
(482, 125, '07-Nov', 0),
(483, 125, 'Jul-30', 0),
(484, 125, '05-Nov', 0),
(485, 125, 'Jul-15', 1),
(486, 126, '120 men', 0),
(487, 126, '122 men', 1),
(488, 126, '128 men', 0),
(489, 126, '134 men', 0),
(490, 127, '31.25 cm', 1),
(491, 127, '37.75 cm', 0),
(492, 127, '35.15 cm', 0),
(493, 127, '11.25 cm', 0),
(494, 128, '88', 0),
(495, 128, '96', 1),
(496, 128, '102', 0),
(497, 128, '112', 0),
(498, 129, 'x>yx>y', 1),
(499, 129, 'y>xy>x', 0),
(500, 129, 'x=yx=y', 0),
(501, 129, 'Cannot be determined', 0),
(502, 130, '1000', 0),
(503, 130, '500', 1),
(504, 130, '625', 0),
(505, 130, '400', 0),
(506, 131, '5%', 0),
(507, 131, '10%', 0),
(508, 131, '16%', 0),
(509, 131, '22%', 1),
(510, 132, '1/321/32', 0),
(511, 132, '1/41/4', 1),
(512, 132, '11', 0),
(513, 132, '4', 0),
(514, 133, '06:05', 0),
(515, 133, '08:07', 1),
(516, 133, '03:07', 0),
(517, 133, '06:01', 0),
(518, 134, '32', 0),
(519, 134, '43', 0),
(520, 134, '52', 0),
(521, 134, '53', 1),
(522, 135, '5880', 1),
(523, 135, '6880', 0),
(524, 135, '7880', 0),
(525, 135, '8880', 0),
(526, 136, 'Jan-63', 0),
(527, 136, 'Feb-35', 0),
(528, 136, 'Feb-63', 1),
(529, 136, 'Sep-14', 0),
(530, 137, '02:05', 0),
(531, 137, '03:05', 0),
(532, 137, '04:05', 1),
(533, 137, '05:04', 0),
(534, 138, '1.091076389', 1),
(535, 138, '07:37:03', 0),
(536, 138, '1.040324', 0),
(537, 138, 'None of these', 0),
(538, 139, '01:21:02', 0),
(539, 139, '02:12:01', 1),
(540, 139, '03:13:01', 0),
(541, 139, '03:04', 0),
(542, 140, '0', 0),
(543, 140, '9900', 0),
(544, 140, '10000', 1),
(545, 140, '11000', 0),
(546, 141, '60 kg', 0),
(547, 141, '63 kg', 1),
(548, 141, '50 kg', 0),
(549, 141, '77 kg', 0),
(550, 142, '57', 1),
(551, 142, '56.8', 0),
(552, 142, '58.2', 0),
(553, 142, '52.2', 0),
(554, 143, '176', 0),
(555, 143, '187', 1),
(556, 143, '540', 0),
(557, 143, '748', 0),
(558, 144, '17', 0),
(559, 144, '23', 1),
(560, 144, '77', 0),
(561, 144, 'None of these', 0),
(562, 145, '20', 0),
(563, 145, '30', 0),
(564, 145, '25', 1),
(565, 145, '600', 0),
(566, 146, '07-Nov', 0),
(567, 146, 'Jul-30', 0),
(568, 146, '05-Nov', 0),
(569, 146, 'Jul-15', 1),
(570, 147, '120 men', 0),
(571, 147, '122 men', 1),
(572, 147, '128 men', 0),
(573, 147, '134 men', 0),
(574, 148, '31.25 cm', 1),
(575, 148, '37.75 cm', 0),
(576, 148, '35.15 cm', 0),
(577, 148, '11.25 cm', 0),
(578, 149, '88', 0),
(579, 149, '96', 1),
(580, 149, '102', 0),
(581, 149, '112', 0),
(582, 150, 'x>yx>y', 1),
(583, 150, 'y>xy>x', 0),
(584, 150, 'x=yx=y', 0),
(585, 150, 'Cannot be determined', 0),
(586, 151, '1000', 0),
(587, 151, '500', 1),
(588, 151, '625', 0),
(589, 151, '400', 0),
(590, 152, 'The operating system periodically deletes all of the java files available on the system.', 0),
(591, 152, 'Any package imported in a program and not used is automatically deleted.', 0),
(592, 152, 'When all references to an object are gone, the memory used by the object is automatically reclaimed.', 1),
(593, 152, 'The JVM checks the output of any Java program and deletes anything that doesn?t make sense.', 0),
(594, 153, 'private final static int answer = 42;', 0),
(595, 153, 'public static int answer = 42;', 1),
(596, 153, 'final static answer = 42;', 0),
(597, 153, 'int answer;', 0),
(598, 154, '25', 0),
(599, 154, '24', 0),
(600, 154, '32', 1),
(601, 154, '33', 0),
(602, 155, '3', 0),
(603, 155, '0', 0),
(604, 155, '6', 0),
(605, 155, '1', 1),
(606, 156, '0 2 4 6 8', 1),
(607, 156, '1 3 5 7 9', 0),
(608, 156, '0 1 2 3 4 5 6 7 8 9', 0),
(609, 156, '1 2 3 4 5 6 7 8 9 10', 0),
(610, 157, 'Hello java', 0),
(611, 157, 'Hellojava', 0),
(612, 157, 'HJavalo', 1),
(613, 157, 'Hjava', 0),
(614, 158, 'get()', 0),
(615, 158, 'Sizeof()', 0),
(616, 158, 'lengthof()', 0),
(617, 158, 'length()', 1),
(618, 159, 'Error', 0),
(619, 159, 'Exception', 1),
(620, 159, 'RuntimeExecption', 0),
(621, 159, 'All of the mentioned', 0),
(622, 160, 'Method overloading', 0),
(623, 160, 'Method overriding', 1),
(624, 160, 'Method hiding', 0),
(625, 160, 'None of the mentioned', 0),
(626, 161, 'static', 0),
(627, 161, 'constant', 0),
(628, 161, 'protected', 0),
(629, 161, 'final', 1),
(630, 162, 'super();', 1),
(631, 162, 'superclass.();', 0),
(632, 162, 'super(void);', 0),
(633, 162, 'super.A();', 0),
(634, 163, 'concrete class', 0),
(635, 163, 'abstract class', 1),
(636, 163, 'final class', 0),
(637, 163, 'None', 0),
(638, 164, 'Method Name, Return Type and Number Of Arguments', 0),
(639, 164, 'Access Modifier, Method Name and Types Of Arguments', 0),
(640, 164, 'Method Name, Number Of Arguments, Types Of Arguments and Order Of Arguments', 1),
(641, 164, 'Return Type, Access Modifier and Order Of Arguments', 0),
(642, 165, 'only sum(10)', 0),
(643, 165, 'only sum(10,20)', 0),
(644, 165, 'only sum(10) & sum(10,20)', 0),
(645, 165, 'all of the methods mentioned', 1),
(646, 166, 'TRUE', 1),
(647, 166, 'FALSE', 0),
(648, 166, 'Exception', 0),
(649, 166, 'None', 0),
(650, 167, 'Its name must be same as that of class', 0),
(651, 167, 'It must not have any return type', 0),
(652, 167, 'It must contain a definition body', 1),
(653, 167, 'It can contains arguments', 0),
(654, 168, 'All classes are converted as abstract class', 0),
(655, 168, 'Derived class must be of abstract type', 0),
(656, 168, 'All the derived classes must implement the undefined functions', 1),
(657, 168, 'Derived classes can?t redefine the function', 0),
(658, 169, 'It is a way of combining various data members into a single unit', 0),
(659, 169, 'It is a way of combining various member functions into a single unit', 0),
(660, 169, 'It is a way of combining various data members and member functions into a single unit which can operate on any data', 0),
(661, 169, 'It is a way of combining various data members and member functions that operate on those data members into a single unit', 1),
(662, 170, 'Create public member functions to access those data members', 1),
(663, 170, 'Create private member functions to access those data members', 0),
(664, 170, 'Create protected member functions to access those data members', 0),
(665, 170, 'Private data members can never be accessed from outside the class', 0),
(666, 171, 'Binding and Hiding respectively', 1),
(667, 171, 'Hiding and Binding respectively', 0),
(668, 171, 'Can be used any way', 0),
(669, 171, 'Hiding and hiding respectively', 0),
(670, 172, 'Only 7 levels of inheritance', 0),
(671, 172, 'At least 7 levels of inheritance', 0),
(672, 172, 'At most 16 levels of inheritance', 0),
(673, 172, 'As many levels of inheritance as required', 1),
(674, 173, 'public String getMessage()', 0),
(675, 173, 'public Throwable getCause()', 0),
(676, 173, 'public String toString()', 1),
(677, 173, 'public void printStackTrace()', 0),
(678, 174, 'stop()', 0),
(679, 174, 'sleep()', 1),
(680, 174, 'join()', 0),
(681, 174, 'call()', 0),
(682, 175, 'run()', 0),
(683, 175, 'Alive()', 0),
(684, 175, 'isAlive()', 1),
(685, 175, 'checkRun()', 0),
(686, 176, 'sleep()', 0),
(687, 176, 'isAlive()', 0),
(688, 176, 'stop()', 0),
(689, 176, 'join()', 1),
(690, 177, 'A thread can be formed by implementing Runnable interface only.', 0),
(691, 177, 'A thread can be formed by a class that extends Thread class.', 0),
(692, 177, 'start() method is used to begin execution of the thread.', 0),
(693, 177, 'run() method is used to begin execution of a thread before start() method in special cases.', 1),
(694, 178, 'It?s a process in which two different processes run simultaneously.', 0),
(695, 178, 'It?s a process in which two or more parts of same process run simultaneously.', 1),
(696, 178, 'Its a process in which many different process are able to access same information.', 0),
(697, 178, 'Its a process in which a single process can access information from many sources.', 0),
(698, 179, 'clear()', 1),
(699, 179, 'reset()', 0),
(700, 179, 'delete()', 0),
(701, 179, 'refresh()', 0),
(702, 180, 'A group of classes', 1),
(703, 180, 'A group of objects', 0),
(704, 180, 'A group of interfaces', 0),
(705, 180, 'None of the mentioned', 0),
(706, 181, 'Set', 1),
(707, 181, 'List', 0),
(708, 181, 'Runnable', 0),
(709, 181, 'Collection', 0),
(710, 182, 'The value ?4? is printed at the command line', 0),
(711, 182, 'Compilation fails because of an error in line', 0),
(712, 182, 'NullPointerException occurs at runtime', 1),
(713, 182, 'IllegalStateException occurs at runtime', 0),
(714, 183, 'regionMatch()', 0),
(715, 183, 'match()', 0),
(716, 183, 'RegionMatches()', 0),
(717, 183, 'regionMatches()', 1),
(718, 184, 'String', 0),
(719, 184, 'StringBuffer', 1),
(720, 184, 'StringBuffer & String', 0),
(721, 184, 'None', 0),
(722, 185, 'wakeAll()', 0),
(723, 185, 'notify()', 0),
(724, 185, 'start()', 0),
(725, 185, 'notifyAll()', 1),
(726, 186, ' implements', 0),
(727, 186, 'inherited', 0),
(728, 186, 'using', 0),
(729, 186, 'extends', 1),
(730, 187, '3 4 4 1', 1),
(731, 187, '3 2 3 4', 0),
(732, 187, '2 3 4 3', 0),
(733, 187, '3 2 4 2', 0),
(734, 188, 'boolean b1 = 1;', 0),
(735, 188, 'boolean b2 = \"false\";', 0),
(736, 188, 'boolean b3 = false;', 1),
(737, 188, 'boolean b4 = ?true?;', 0),
(738, 189, '0', 0),
(739, 189, 'java.lang.NullPointerException', 0),
(740, 189, 'Compile Error', 0),
(741, 189, 'java.lang.ArrayIndexOutOfBoundsException', 1),
(742, 190, 'Encapsulation?', 1),
(743, 190, 'Abstraction', 0),
(744, 190, 'Data Hiding?', 0),
(745, 190, '?Polymorphism', 0),
(746, 191, 'signed', 1),
(747, 191, 'unsigned', 0),
(748, 191, 'Both of the above', 0),
(749, 191, 'none', 0),
(750, 192, 'Two type are compatible and size of destination type is shorter than source type.', 0),
(751, 192, 'Two type are compatible and size of destination type is equal of source type.', 0),
(752, 192, 'Two type are compatible and size of destination type is larger than source type.', 1),
(753, 192, 'All of the above', 0),
(754, 193, 'float', 0),
(755, 193, 'double ?', 1),
(756, 193, 'Compilation Error', 0),
(757, 193, 'Exception is thrown at runtime', 0),
(758, 194, '8, 7 ?', 1),
(759, 194, '10, 7', 0),
(760, 194, 'Compilation fails with an error.', 0),
(761, 194, 'none', 0),
(762, 195, '-1', 0),
(763, 195, '0', 0),
(764, 195, '1', 0),
(765, 195, '2', 1),
(766, 196, 'char[] c = new char();', 0),
(767, 196, 'char[] c = new char[5]; ?', 1),
(768, 196, 'char[] c = new char(4);', 0),
(769, 196, 'char[] c = new char[0]; ?', 0),
(770, 197, '120, 200, 16, 21', 0),
(771, 197, '120, 200, 016, 021', 0),
(772, 197, '120, 200, 14, 17', 1),
(773, 197, '016 and 021 are compile error. It should be written as 16 and 21.', 0),
(774, 198, 'String()', 1),
(775, 198, 'String(void)', 0),
(776, 198, 'String(0)', 0),
(777, 198, 'None of the mentioned', 0),
(778, 199, 'Aggregation', 0),
(779, 199, 'Composition', 0),
(780, 199, 'Encapsulation', 0),
(781, 199, 'Association', 1),
(782, 200, 'Integer', 1),
(783, 200, 'Float', 0),
(784, 200, 'double', 0),
(785, 200, 'long', 0),
(786, 201, 'for-each loop', 0),
(787, 201, 'Iterator', 0),
(788, 201, 'ListIterator', 0),
(789, 201, 'a and B', 1),
(790, 202, 'Compile Time Error', 1),
(791, 202, 'Exception', 0),
(792, 202, '5', 0),
(793, 202, '6', 0),
(794, 203, 'Exception at runtime', 0),
(795, 203, 'Prod is 20', 1),
(796, 203, 'Compile time error', 0),
(797, 203, 'None of the mentioned', 0),
(798, 204, 'wait()', 0),
(799, 204, 'finally()', 1),
(800, 204, 'getClass()', 0),
(801, 204, 'clone()', 0),
(802, 205, 'equal()', 0),
(803, 205, 'hashCode() and equals()', 1),
(804, 205, 'toString() and equals()', 0),
(805, 205, 'toString() and hashCode()', 0),
(806, 206, 'java.lang', 1),
(807, 206, 'java.io', 0),
(808, 206, 'java.util', 0),
(809, 206, 'java.parent', 0),
(810, 207, 'We can override the String class methods', 1),
(811, 207, 'We cannot inherit the String class', 0),
(812, 207, 'String class is present in java.lang package', 0),
(813, 207, 'String class objects are immutable', 0),
(814, 208, 'TRUE', 1),
(815, 208, 'Compile time error', 0),
(816, 208, 'Exception', 0),
(817, 208, 'FALSE', 0),
(818, 209, '0', 1),
(819, 209, 'Exception', 0),
(820, 209, 'Compile time error', 0),
(821, 209, 'Garbage Value', 0),
(822, 210, 'At run time', 0),
(823, 210, 'At compile time', 1),
(824, 210, 'At coding time', 0),
(825, 210, 'At execution time', 0),
(826, 211, 'Compile error', 0),
(827, 211, 'a = 0\nDivide by zero error\ninside the finally block', 1),
(828, 211, 'A = 0', 0),
(829, 211, 'inside the finally block', 0),
(830, 212, 'Writing a query with parameters', 0),
(831, 212, 'Using sp_executesql', 0),
(832, 212, 'Using EXEC', 0),
(833, 212, 'All of the mentioned', 1),
(834, 213, 'geometry', 0),
(835, 213, 'sql_variant', 1),
(836, 213, 'cursor', 0),
(837, 213, 'all of the mentioned', 0),
(838, 214, 'DELETE', 0),
(839, 214, 'REMOVE', 0),
(840, 214, 'DROP', 0),
(841, 214, 'TRUNCATE', 1),
(842, 215, 'DELETE does not free the space containing the table and TRUNCATE free the space containing the table', 1),
(843, 215, 'Both DELETE and TRUNCATE free the space containing the table', 0),
(844, 215, 'Both DELETE and TRUNCATE does not free the space containing the table', 0),
(845, 215, 'DELETE free the space containing the table and TRUNCATE does not free the space containing the table', 0),
(846, 216, 'SELECT * FROM Persons WHERE FirstName=?a?', 0),
(847, 216, 'SELECT * FROM Persons WHERE FirstName LIKE ?a%?', 0),
(848, 216, 'SELECT * FROM Persons WHERE FirstName LIKE ?%a?', 1),
(849, 216, 'SELECT * FROM Persons WHERE FirstName=?%a%?', 0),
(850, 217, 'SELECT clause only', 1),
(851, 217, 'DELETE and UPDATE clauses', 0),
(852, 217, 'UPDATE clause only', 0),
(853, 217, 'All of the mentioned', 0),
(854, 218, 'UPDATE Persons SET LastName=?Hansen? INTO LastName=?Nilsen?', 0),
(855, 218, 'MODIFY Persons SET LastName=?Nilsen? WHERE LastName=?Hansen?', 0),
(856, 218, 'MODIFY Persons SET LastName=?Hansen? INTO LastName=?Nilsen?', 0),
(857, 218, 'UPDATE Persons SET LastName=?Nilsen? WHERE LastName=?Hansen?', 1),
(858, 219, 'SELECT city, temperature, condition FROM weather WHERE condition NOT IN (?sunny?, ?cloudy?)', 1),
(859, 219, 'SELECT city, temperature, condition FROM weather WHERE condition NOT BETWEEN (?sunny?, ?cloudy?)', 0),
(860, 219, 'SELECT city, temperature, condition FROM weather WHERE condition IN (?sunny?, ?cloudy?)', 0),
(861, 219, 'SELECT city, temperature, condition FROM weather WHERE condition BETWEEN (?sunny?, ?cloudy?);', 0),
(862, 220, 'Equi-join', 0),
(863, 220, 'Natural join', 0),
(864, 220, 'Outer join', 1),
(865, 220, 'All of the Mentioned', 0),
(866, 221, 'Equi-join', 0),
(867, 221, 'Natural join', 0),
(868, 221, 'Outer join', 0),
(869, 221, 'All of the Mentioned', 1),
(870, 222, 'Uses the result of an inner query to determine the processing of an outer query', 1),
(871, 222, 'Uses the result of an outer query to determine the processing of an inner query', 0),
(872, 222, 'Uses the result of an inner query to determine the processing of an inner query', 0),
(873, 222, 'Uses the result of an outer query to determine the processing of an outer query', 0),
(874, 223, 'ORDER BY Does Not Work', 0),
(875, 223, 'Index Created on View Used Often', 1),
(876, 223, 'Cross Database Queries Not Allowed in Indexed View', 0),
(877, 223, 'Adding Column is Expensive by Joining Table Outside View', 0),
(878, 224, 'Views could be looked as an additional layer on the table which enables us to protect intricate or sensitive data based upon our needs', 0),
(879, 224, 'Views are virtual tables that are compiled at run time', 0),
(880, 224, 'Creating views can improve query response time', 0),
(881, 224, 'All of the Mentioned', 1),
(882, 225, 'CREATE VIEW AS SELECT', 1),
(883, 225, 'CREATE VIEW AS UPDATE', 0),
(884, 225, 'DROP VIEW AS SELECT', 0),
(885, 225, 'CREATE VIEW AS UPDATE', 0),
(886, 226, 'Database-scoped Dynamic Management View', 0),
(887, 226, 'Complex View', 0),
(888, 226, 'Catalog View', 0),
(889, 226, 'None of the mentioned', 1),
(890, 227, 'ORDER BY Does Not Work', 0),
(891, 227, 'Index Created on View Used Often', 1),
(892, 227, 'Cross Database Queries Not Allowed in Indexed View', 0),
(893, 227, 'Adding Column is Expensive by Joining Table Outside View', 0),
(894, 228, 'DROP VIEW', 1),
(895, 228, 'DELETE VIEW', 0),
(896, 228, 'REMOVE VIEW', 0),
(897, 228, 'TRUNCATE VIEW', 0),
(898, 229, 'Collection of values', 1),
(899, 229, 'Single value', 0),
(900, 229, 'Double value', 0),
(901, 229, 'All of the mentioned', 0),
(902, 230, 'Avg', 0),
(903, 230, 'Sum', 0),
(904, 230, 'With', 1),
(905, 230, 'Min', 0),
(906, 231, 'MODIFY PERSONS SET LASTNAME= ?Hansen? INTO LASTNAME=  ?Nilsen?', 0),
(907, 231, 'MODIFY PERSONS SET LASTNAME= ?Nilsen? WHERE LASTNAME=  ?Hansen?', 0),
(908, 231, 'UPDATE PERSONS SET LASTNAME= ?Nilsen? WHERE LASTNAME= ?Hansen?', 1),
(909, 231, 'UPDATE PERSONS SET LASTNAME= ?Hansen? INTO LASTNAME=  ?Nilsen?', 0),
(910, 232, 'Grant select on SCOTT.EMP to USER;', 1),
(911, 232, 'Grant select to SCOTT.EMP to USER;', 0),
(912, 232, 'Grant select from SCOTT.EMP to USER;', 0),
(913, 232, 'None of above.', 0),
(914, 233, 'SELECT * FROM Emp WHERE Emp_Add LIKE \'%er%\';', 1),
(915, 233, 'SELECT * FROM Emp WHERE Emp_Add LIKE \'_er_\';', 0),
(916, 233, 'SELECT * FROM Emp WHERE Emp_Add LIKE \'er%\';', 0),
(917, 233, 'SELECT * FROM Emp WHERE Emp_Add LIKE \'%er\';', 0),
(918, 234, '12300 ; 1235 ; 123.45', 0),
(919, 234, '12300 ; 1235 ; 1.2345', 0),
(920, 234, '123 ; 34 ;  45', 0),
(921, 234, '12300 ; 12.35 ; 12.345', 1),
(922, 235, 'Outer Join', 0),
(923, 235, 'Inner Join', 0),
(924, 235, 'Natural Join', 0),
(925, 235, 'Self Join', 1);

-- --------------------------------------------------------

--
-- Table structure for table `answers_test`
--

CREATE TABLE `answers_test` (
  `id` int(11) NOT NULL,
  `question_id` int(11) NOT NULL,
  `answer` text NOT NULL,
  `username` text,
  `is_correct` int(11) NOT NULL DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `answers_test`
--

INSERT INTO `answers_test` (`id`, `question_id`, `answer`, `username`, `is_correct`) VALUES
(9, 9, 'Interpreted', NULL, 1),
(10, 9, 'compiled', NULL, 0),
(11, 9, '', NULL, 0),
(12, 9, '', NULL, 0),
(13, 10, 'Application', NULL, 0),
(14, 10, 'Programming', NULL, 0),
(15, 10, 'Scripting', NULL, 1),
(16, 10, 'None of These', NULL, 0),
(17, 11, 'Browser', NULL, 1),
(18, 11, 'ISP', NULL, 0),
(19, 11, 'Server', NULL, 0),
(20, 11, 'None of These', NULL, 0),
(21, 12, 'To add interactivity to HTML Pages', NULL, 1),
(22, 12, 'To Execute Query Related to DB on Server', NULL, 0),
(23, 12, 'To Style HTML Pages', NULL, 0),
(24, 12, 'To Perform Server Side Scripting Operation', NULL, 0),
(25, 13, 'directly into HTML pages', NULL, 0),
(26, 13, 'directly on the Server Script', NULL, 0),
(27, 13, 'directly into JS file and included into HTML', NULL, 1),
(28, 13, 'None of These', NULL, 0),
(29, 14, '.jsc', NULL, 0),
(30, 14, '.js', NULL, 1),
(31, 14, '.jvs', NULL, 0),
(32, 14, '.javascript', NULL, 0),
(33, 15, 'Server Side Scripting Language', NULL, 0),
(34, 15, 'Server Side Programming Language', NULL, 0),
(35, 15, 'Client Side Scripting Language', NULL, 1),
(36, 15, 'None of These', NULL, 0),
(37, 16, 'TRUE', NULL, 1),
(38, 16, 'FALSE', NULL, 0),
(39, 16, '', NULL, 0),
(40, 16, '', NULL, 0),
(41, 17, 'Preprocessor', NULL, 0),
(42, 17, 'RMI', NULL, 0),
(43, 17, 'Triggering Event', NULL, 0),
(44, 17, 'Function / Method', NULL, 1),
(45, 18, 'Inside Head', NULL, 0),
(46, 18, 'Inside Body', NULL, 0),
(47, 18, 'Inside Single JavaScript File', NULL, 0),
(48, 18, 'All of theses', NULL, 1),
(49, 19, 'TRUE', NULL, 1),
(50, 19, 'FALSE', NULL, 0),
(51, 19, '', NULL, 0),
(52, 19, '', NULL, 0),
(53, 20, 'TRUE', NULL, 1),
(54, 20, 'FALSE', NULL, 0),
(55, 20, '', NULL, 0),
(56, 20, '', NULL, 0),
(57, 21, 'YES', NULL, 1),
(58, 21, 'NO', NULL, 0),
(59, 21, '', NULL, 0),
(60, 21, '', NULL, 0),
(61, 22, 'Script', NULL, 0),
(62, 22, 'Link', NULL, 0),
(63, 22, 'ext', NULL, 0),
(64, 22, 'src', NULL, 1),
(65, 23, 'parse', NULL, 0),
(66, 23, 'async', NULL, 0),
(67, 23, 'type', NULL, 0),
(68, 23, 'defer', NULL, 1),
(69, 24, 'Type', NULL, 0),
(70, 24, 'Charset', NULL, 1),
(71, 24, 'Character', NULL, 0),
(72, 24, 'None of These', NULL, 0),
(73, 25, '<Script async=\"async\">', NULL, 0),
(74, 25, '<Script async>', NULL, 0),
(75, 25, '<Script async=\"\">', NULL, 0),
(76, 25, 'All of These', NULL, 1),
(77, 26, 'Mozilla Firefox', NULL, 0),
(78, 26, 'Netscape', NULL, 1),
(79, 26, 'Google Chrome', NULL, 0),
(80, 26, 'IE', NULL, 0),
(81, 27, 'Less server interaction', NULL, 0),
(82, 27, 'Immediate feedback to the visitors', NULL, 0),
(83, 27, 'Increased interactivity', NULL, 0),
(84, 27, 'All of the above.', NULL, 1),
(85, 28, 'TRUE', NULL, 1),
(86, 28, 'FALSE', NULL, 0),
(87, 28, '', NULL, 0),
(88, 28, '', NULL, 0),
(89, 29, 'A callback is a plain JavaScript function passed to some method as an argument or option.', NULL, 0),
(90, 29, 'Some callbacks are just events, called to give the user a chance to react when a certain state is triggered', NULL, 0),
(91, 29, 'Both of the above', NULL, 1),
(92, 29, 'None of the above', NULL, 0),
(93, 30, 'toValue()', NULL, 0),
(94, 30, 'toNumber()', NULL, 0),
(95, 30, 'toString()', NULL, 1),
(96, 30, 'None of the above.', NULL, 0),
(97, 31, 'charAt()', NULL, 0),
(98, 31, 'charCodeAt()', NULL, 1),
(99, 31, 'concat()', NULL, 0),
(100, 31, 'indexOf()', NULL, 0),
(101, 32, 'concat()', NULL, 0),
(102, 32, 'match()', NULL, 1),
(103, 32, 'search()', NULL, 0),
(104, 32, 'replace()', NULL, 0),
(105, 33, 'document.getElement(?Skill?).innerHTML=?I am Skilled?', NULL, 0),
(106, 33, '', NULL, 0),
(107, 33, 'document.getElementById(?Skill?).innerHTML=?I am Skilled?', NULL, 0),
(108, 33, '', NULL, 0),
(109, 34, 'alertbox(?SkillRary?)', NULL, 0),
(110, 34, '', NULL, 0),
(111, 34, 'msg(?SkillRary?)', NULL, 0),
(112, 34, '', NULL, 0),
(113, 35, 'function = SkillRaryfunc ()', NULL, 0),
(114, 35, 'function SkillRaryfunc ()', NULL, 1),
(115, 35, 'function := SkillRaryfunc ()', NULL, 0),
(116, 35, 'function : SkillRaryfunc ()', NULL, 0),
(117, 36, 'call SkillRaryfunc ()', NULL, 0),
(118, 36, '', NULL, 0),
(119, 36, 'call function SkillRaryfunc ()', NULL, 0),
(120, 36, '', NULL, 0),
(121, 37, 'Equals', NULL, 0),
(122, 37, 'Strict Equals', NULL, 1),
(123, 37, 'More Equals', NULL, 0),
(124, 37, 'None of the Above', NULL, 0),
(125, 38, 'var Geeks= ?Geek1?, ?Geek2?, ?Geek3?', NULL, 0),
(126, 38, 'var Geeks=(1:Geek1, 2:Geek2, 3:Geek3)', NULL, 0),
(127, 38, 'var Geeks=(1=Geek1, 2=Geek2, 3=Geek3)', NULL, 0),
(128, 38, 'var Geeks=[?Geek1?, ?Geek2?, ?Geek3?]', NULL, 1),
(129, 1, '5%', NULL, 0),
(130, 1, '10%', NULL, 0),
(131, 1, '16%', NULL, 0),
(132, 1, '22%', NULL, 1),
(133, 2, '1/321/32', NULL, 0),
(134, 2, '1/41/4', NULL, 1),
(135, 2, '11', NULL, 0),
(136, 2, '4', NULL, 0),
(137, 3, '06:05', NULL, 0),
(138, 3, '08:07', NULL, 1),
(139, 3, '03:07', NULL, 0),
(140, 3, '06:01', NULL, 0),
(141, 4, '32', NULL, 0),
(142, 4, '43', NULL, 0),
(143, 4, '52', NULL, 0),
(144, 4, '53', NULL, 1),
(145, 5, '5880', NULL, 1),
(146, 5, '6880', NULL, 0),
(147, 5, '7880', NULL, 0),
(148, 5, '8880', NULL, 0),
(149, 6, 'Jan-63', NULL, 0),
(150, 6, 'Feb-35', NULL, 0),
(151, 6, 'Feb-63', NULL, 1),
(152, 6, 'Sep-14', NULL, 0),
(153, 7, '02:05', NULL, 0),
(154, 7, '03:05', NULL, 0),
(155, 7, '04:05', NULL, 1),
(156, 7, '05:04', NULL, 0),
(157, 8, '1.091076389', NULL, 1),
(158, 8, '07:37:03', NULL, 0),
(159, 8, '1.040324', NULL, 0),
(160, 8, 'None of these', NULL, 0),
(161, 9, '01:21:02', NULL, 0),
(162, 9, '02:12:01', NULL, 1),
(163, 9, '03:13:01', NULL, 0),
(164, 9, '03:04', NULL, 0),
(165, 10, '0', NULL, 0),
(166, 10, '9900', NULL, 0),
(167, 10, '10000', NULL, 1),
(168, 10, '11000', NULL, 0),
(169, 11, '60 kg', NULL, 0),
(170, 11, '63 kg', NULL, 1),
(171, 11, '50 kg', NULL, 0),
(172, 11, '77 kg', NULL, 0),
(173, 12, '57', NULL, 1),
(174, 12, '56.8', NULL, 0),
(175, 12, '58.2', NULL, 0),
(176, 12, '52.2', NULL, 0),
(177, 13, '176', NULL, 0),
(178, 13, '187', NULL, 1),
(179, 13, '540', NULL, 0),
(180, 13, '748', NULL, 0),
(181, 14, '17', NULL, 0),
(182, 14, '23', NULL, 1),
(183, 14, '77', NULL, 0),
(184, 14, 'None of these', NULL, 0),
(185, 15, '20', NULL, 0),
(186, 15, '30', NULL, 0),
(187, 15, '25', NULL, 1),
(188, 15, '600', NULL, 0),
(189, 16, '07-Nov', NULL, 0),
(190, 16, 'Jul-30', NULL, 0),
(191, 16, '05-Nov', NULL, 0),
(192, 16, 'Jul-15', NULL, 1),
(193, 17, '120 men', NULL, 0),
(194, 17, '122 men', NULL, 1),
(195, 17, '128 men', NULL, 0),
(196, 17, '134 men', NULL, 0),
(197, 18, '31.25 cm', NULL, 1),
(198, 18, '37.75 cm', NULL, 0),
(199, 18, '35.15 cm', NULL, 0),
(200, 18, '11.25 cm', NULL, 0),
(201, 19, '88', NULL, 0),
(202, 19, '96', NULL, 1),
(203, 19, '102', NULL, 0),
(204, 19, '112', NULL, 0),
(205, 20, 'x>yx>y', NULL, 1),
(206, 20, 'y>xy>x', NULL, 0),
(207, 20, 'x=yx=y', NULL, 0),
(208, 20, 'Cannot be determined', NULL, 0),
(209, 21, '1000', NULL, 0),
(210, 21, '500', NULL, 1),
(211, 21, '625', NULL, 0),
(212, 21, '400', NULL, 0),
(213, 1, '5%', NULL, 0),
(214, 1, '10%', NULL, 0),
(215, 1, '16%', NULL, 0),
(216, 1, '22%', NULL, 1),
(217, 2, '1/321/32', NULL, 0),
(218, 2, '1/41/4', NULL, 1),
(219, 2, '11', NULL, 0),
(220, 2, '4', NULL, 0),
(221, 3, '06:05', NULL, 0),
(222, 3, '08:07', NULL, 1),
(223, 3, '03:07', NULL, 0),
(224, 3, '06:01', NULL, 0),
(225, 4, '32', NULL, 0),
(226, 4, '43', NULL, 0),
(227, 4, '52', NULL, 0),
(228, 4, '53', NULL, 1),
(229, 5, '5880', NULL, 1),
(230, 5, '6880', NULL, 0),
(231, 5, '7880', NULL, 0),
(232, 5, '8880', NULL, 0),
(233, 6, 'Jan-63', NULL, 0),
(234, 6, 'Feb-35', NULL, 0),
(235, 6, 'Feb-63', NULL, 1),
(236, 6, 'Sep-14', NULL, 0),
(237, 7, '02:05', NULL, 0),
(238, 7, '03:05', NULL, 0),
(239, 7, '04:05', NULL, 1),
(240, 7, '05:04', NULL, 0),
(241, 8, '1.091076389', NULL, 1),
(242, 8, '07:37:03', NULL, 0),
(243, 8, '1.040324', NULL, 0),
(244, 8, 'None of these', NULL, 0),
(245, 9, '01:21:02', NULL, 0),
(246, 9, '02:12:01', NULL, 1),
(247, 9, '03:13:01', NULL, 0),
(248, 9, '03:04', NULL, 0),
(249, 10, '0', NULL, 0),
(250, 10, '9900', NULL, 0),
(251, 10, '10000', NULL, 1),
(252, 10, '11000', NULL, 0),
(253, 11, '60 kg', NULL, 0),
(254, 11, '63 kg', NULL, 1),
(255, 11, '50 kg', NULL, 0),
(256, 11, '77 kg', NULL, 0),
(257, 12, '57', NULL, 1),
(258, 12, '56.8', NULL, 0),
(259, 12, '58.2', NULL, 0),
(260, 12, '52.2', NULL, 0),
(261, 13, '176', NULL, 0),
(262, 13, '187', NULL, 1),
(263, 13, '540', NULL, 0),
(264, 13, '748', NULL, 0),
(265, 14, '17', NULL, 0),
(266, 14, '23', NULL, 1),
(267, 14, '77', NULL, 0),
(268, 14, 'None of these', NULL, 0),
(269, 15, '20', NULL, 0),
(270, 15, '30', NULL, 0),
(271, 15, '25', NULL, 1),
(272, 15, '600', NULL, 0),
(273, 16, '07-Nov', NULL, 0),
(274, 16, 'Jul-30', NULL, 0),
(275, 16, '05-Nov', NULL, 0),
(276, 16, 'Jul-15', NULL, 1),
(277, 17, '120 men', NULL, 0),
(278, 17, '122 men', NULL, 1),
(279, 17, '128 men', NULL, 0),
(280, 17, '134 men', NULL, 0),
(281, 18, '31.25 cm', NULL, 1),
(282, 18, '37.75 cm', NULL, 0),
(283, 18, '35.15 cm', NULL, 0),
(284, 18, '11.25 cm', NULL, 0),
(285, 19, '88', NULL, 0),
(286, 19, '96', NULL, 1),
(287, 19, '102', NULL, 0),
(288, 19, '112', NULL, 0),
(289, 20, 'x>yx>y', NULL, 1),
(290, 20, 'y>xy>x', NULL, 0),
(291, 20, 'x=yx=y', NULL, 0),
(292, 20, 'Cannot be determined', NULL, 0),
(293, 21, '1000', NULL, 0),
(294, 21, '500', NULL, 1),
(295, 21, '625', NULL, 0),
(296, 21, '400', NULL, 0),
(297, 1, '5%', NULL, 0),
(298, 1, '10%', NULL, 0),
(299, 1, '16%', NULL, 0),
(300, 1, '22%', NULL, 1),
(301, 2, '1/321/32', NULL, 0),
(302, 2, '1/41/4', NULL, 1),
(303, 2, '11', NULL, 0),
(304, 2, '4', NULL, 0),
(305, 3, '06:05', NULL, 0),
(306, 3, '08:07', NULL, 1),
(307, 3, '03:07', NULL, 0),
(308, 3, '06:01', NULL, 0),
(309, 4, '32', NULL, 0),
(310, 4, '43', NULL, 0),
(311, 4, '52', NULL, 0),
(312, 4, '53', NULL, 1),
(313, 5, '5880', NULL, 1),
(314, 5, '6880', NULL, 0),
(315, 5, '7880', NULL, 0),
(316, 5, '8880', NULL, 0),
(317, 6, 'Jan-63', NULL, 0),
(318, 6, 'Feb-35', NULL, 0),
(319, 6, 'Feb-63', NULL, 1),
(320, 6, 'Sep-14', NULL, 0),
(321, 7, '02:05', NULL, 0),
(322, 7, '03:05', NULL, 0),
(323, 7, '04:05', NULL, 1),
(324, 7, '05:04', NULL, 0),
(325, 8, '1.091076389', NULL, 1),
(326, 8, '07:37:03', NULL, 0),
(327, 8, '1.040324', NULL, 0),
(328, 8, 'None of these', NULL, 0),
(329, 9, '01:21:02', NULL, 0),
(330, 9, '02:12:01', NULL, 1),
(331, 9, '03:13:01', NULL, 0),
(332, 9, '03:04', NULL, 0),
(333, 10, '0', NULL, 0),
(334, 10, '9900', NULL, 0),
(335, 10, '10000', NULL, 1),
(336, 10, '11000', NULL, 0),
(337, 11, '60 kg', NULL, 0),
(338, 11, '63 kg', NULL, 1),
(339, 11, '50 kg', NULL, 0),
(340, 11, '77 kg', NULL, 0),
(341, 12, '57', NULL, 1),
(342, 12, '56.8', NULL, 0),
(343, 12, '58.2', NULL, 0),
(344, 12, '52.2', NULL, 0),
(345, 13, '176', NULL, 0),
(346, 13, '187', NULL, 1),
(347, 13, '540', NULL, 0),
(348, 13, '748', NULL, 0),
(349, 14, '17', NULL, 0),
(350, 14, '23', NULL, 1),
(351, 14, '77', NULL, 0),
(352, 14, 'None of these', NULL, 0),
(353, 15, '20', NULL, 0),
(354, 15, '30', NULL, 0),
(355, 15, '25', NULL, 1),
(356, 15, '600', NULL, 0),
(357, 16, '07-Nov', NULL, 0),
(358, 16, 'Jul-30', NULL, 0),
(359, 16, '05-Nov', NULL, 0),
(360, 16, 'Jul-15', NULL, 1),
(361, 17, '120 men', NULL, 0),
(362, 17, '122 men', NULL, 1),
(363, 17, '128 men', NULL, 0),
(364, 17, '134 men', NULL, 0),
(365, 18, '31.25 cm', NULL, 1),
(366, 18, '37.75 cm', NULL, 0),
(367, 18, '35.15 cm', NULL, 0),
(368, 18, '11.25 cm', NULL, 0),
(369, 19, '88', NULL, 0),
(370, 19, '96', NULL, 1),
(371, 19, '102', NULL, 0),
(372, 19, '112', NULL, 0),
(373, 20, 'x>yx>y', NULL, 1),
(374, 20, 'y>xy>x', NULL, 0),
(375, 20, 'x=yx=y', NULL, 0),
(376, 20, 'Cannot be determined', NULL, 0),
(377, 21, '1000', NULL, 0),
(378, 21, '500', NULL, 1),
(379, 21, '625', NULL, 0),
(380, 21, '400', NULL, 0),
(381, 22, 'The operating system periodically deletes all of the java files available on the system.', NULL, 0),
(382, 22, 'Any package imported in a program and not used is automatically deleted.', NULL, 0),
(383, 22, 'When all references to an object are gone, the memory used by the object is automatically reclaimed.', NULL, 1),
(384, 22, 'The JVM checks the output of any Java program and deletes anything that doesn?t make sense.', NULL, 0),
(385, 23, 'private final static int answer = 42', NULL, 0),
(386, 23, '', NULL, 0),
(387, 23, 'public static int answer = 42', NULL, 0),
(388, 23, '', NULL, 0),
(389, 24, 'The operating system periodically deletes all of the java files available on the system.', NULL, 0),
(390, 24, 'Any package imported in a program and not used is automatically deleted.', NULL, 0),
(391, 24, 'When all references to an object are gone, the memory used by the object is automatically reclaimed.', NULL, 1),
(392, 24, 'The JVM checks the output of any Java program and deletes anything that doesn?t make sense.', NULL, 0),
(393, 25, 'private final static int answer = 42;', NULL, 0),
(394, 25, 'public static int answer = 42;', NULL, 1),
(395, 25, 'final static answer = 42;', NULL, 0),
(396, 25, 'int answer;', NULL, 0),
(397, 26, '25', NULL, 0),
(398, 26, '24', NULL, 0),
(399, 26, '32', NULL, 1),
(400, 26, '33', NULL, 0),
(401, 27, '3', NULL, 0),
(402, 27, '0', NULL, 0),
(403, 27, '6', NULL, 0),
(404, 27, '1', NULL, 1),
(405, 28, '0 2 4 6 8', NULL, 1),
(406, 28, '1 3 5 7 9', NULL, 0),
(407, 28, '0 1 2 3 4 5 6 7 8 9', NULL, 0),
(408, 28, '1 2 3 4 5 6 7 8 9 10', NULL, 0),
(409, 29, 'Hello java', NULL, 0),
(410, 29, 'Hellojava', NULL, 0),
(411, 29, 'HJavalo', NULL, 1),
(412, 29, 'Hjava', NULL, 0),
(413, 30, 'get()', NULL, 0),
(414, 30, 'Sizeof()', NULL, 0),
(415, 30, 'lengthof()', NULL, 0),
(416, 30, 'length()', NULL, 1),
(417, 31, 'Error', NULL, 0),
(418, 31, 'Exception', NULL, 1),
(419, 31, 'RuntimeExecption', NULL, 0),
(420, 31, 'All of the mentioned', NULL, 0),
(421, 32, 'Method overloading', NULL, 0),
(422, 32, 'Method overriding', NULL, 1),
(423, 32, 'Method hiding', NULL, 0),
(424, 32, 'None of the mentioned', NULL, 0),
(425, 33, 'static', NULL, 0),
(426, 33, 'constant', NULL, 0),
(427, 33, 'protected', NULL, 0),
(428, 33, 'final', NULL, 1),
(429, 34, 'super();', NULL, 1),
(430, 34, 'superclass.();', NULL, 0),
(431, 34, 'super(void);', NULL, 0),
(432, 34, 'super.A();', NULL, 0),
(433, 35, 'concrete class', NULL, 0),
(434, 35, 'abstract class', NULL, 1),
(435, 35, 'final class', NULL, 0),
(436, 35, 'None', NULL, 0),
(437, 36, 'Method Name, Return Type and Number Of Arguments', NULL, 0),
(438, 36, 'Access Modifier, Method Name and Types Of Arguments', NULL, 0),
(439, 36, 'Method Name, Number Of Arguments, Types Of Arguments and Order Of Arguments', NULL, 1),
(440, 36, 'Return Type, Access Modifier and Order Of Arguments', NULL, 0),
(441, 37, 'only sum(10)', NULL, 0),
(442, 37, 'only sum(10,20)', NULL, 0),
(443, 37, 'only sum(10) & sum(10,20)', NULL, 0),
(444, 37, 'all of the methods mentioned', NULL, 1),
(445, 38, 'TRUE', NULL, 1),
(446, 38, 'FALSE', NULL, 0),
(447, 38, 'Exception', NULL, 0),
(448, 38, 'None', NULL, 0),
(449, 39, 'Its name must be same as that of class', NULL, 0),
(450, 39, 'It must not have any return type', NULL, 0),
(451, 39, 'It must contain a definition body', NULL, 1),
(452, 39, 'It can contains arguments', NULL, 0),
(453, 40, 'All classes are converted as abstract class', NULL, 0),
(454, 40, 'Derived class must be of abstract type', NULL, 0),
(455, 40, 'All the derived classes must implement the undefined functions', NULL, 1),
(456, 40, 'Derived classes can?t redefine the function', NULL, 0),
(457, 41, 'It is a way of combining various data members into a single unit', NULL, 0),
(458, 41, 'It is a way of combining various member functions into a single unit', NULL, 0),
(459, 41, 'It is a way of combining various data members and member functions into a single unit which can operate on any data', NULL, 0),
(460, 41, 'It is a way of combining various data members and member functions that operate on those data members into a single unit', NULL, 1),
(461, 42, 'Create public member functions to access those data members', NULL, 1),
(462, 42, 'Create private member functions to access those data members', NULL, 0),
(463, 42, 'Create protected member functions to access those data members', NULL, 0),
(464, 42, 'Private data members can never be accessed from outside the class', NULL, 0),
(465, 43, 'Binding and Hiding respectively', NULL, 1),
(466, 43, 'Hiding and Binding respectively', NULL, 0),
(467, 43, 'Can be used any way', NULL, 0),
(468, 43, 'Hiding and hiding respectively', NULL, 0),
(469, 44, 'Only 7 levels of inheritance', NULL, 0),
(470, 44, 'At least 7 levels of inheritance', NULL, 0),
(471, 44, 'At most 16 levels of inheritance', NULL, 0),
(472, 44, 'As many levels of inheritance as required', NULL, 1),
(473, 45, 'public String getMessage()', NULL, 0),
(474, 45, 'public Throwable getCause()', NULL, 0),
(475, 45, 'public String toString()', NULL, 1),
(476, 45, 'public void printStackTrace()', NULL, 0),
(477, 46, 'stop()', NULL, 0),
(478, 46, 'sleep()', NULL, 1),
(479, 46, 'join()', NULL, 0),
(480, 46, 'call()', NULL, 0),
(481, 47, 'run()', NULL, 0),
(482, 47, 'Alive()', NULL, 0),
(483, 47, 'isAlive()', NULL, 1),
(484, 47, 'checkRun()', NULL, 0),
(485, 48, 'sleep()', NULL, 0),
(486, 48, 'isAlive()', NULL, 0),
(487, 48, 'stop()', NULL, 0),
(488, 48, 'join()', NULL, 1),
(489, 49, 'A thread can be formed by implementing Runnable interface only.', NULL, 0),
(490, 49, 'A thread can be formed by a class that extends Thread class.', NULL, 0),
(491, 49, 'start() method is used to begin execution of the thread.', NULL, 0),
(492, 49, 'run() method is used to begin execution of a thread before start() method in special cases.', NULL, 1),
(493, 50, 'It?s a process in which two different processes run simultaneously.', NULL, 0),
(494, 50, 'It?s a process in which two or more parts of same process run simultaneously.', NULL, 1),
(495, 50, 'Its a process in which many different process are able to access same information.', NULL, 0),
(496, 50, 'Its a process in which a single process can access information from many sources.', NULL, 0),
(497, 51, 'clear()', NULL, 1),
(498, 51, 'reset()', NULL, 0),
(499, 51, 'delete()', NULL, 0),
(500, 51, 'refresh()', NULL, 0),
(501, 52, 'A group of classes', NULL, 1),
(502, 52, 'A group of objects', NULL, 0),
(503, 52, 'A group of interfaces', NULL, 0),
(504, 52, 'None of the mentioned', NULL, 0),
(505, 53, 'Set', NULL, 1),
(506, 53, 'List', NULL, 0),
(507, 53, 'Runnable', NULL, 0),
(508, 53, 'Collection', NULL, 0),
(509, 54, 'The value ?4? is printed at the command line', NULL, 0),
(510, 54, 'Compilation fails because of an error in line', NULL, 0),
(511, 54, 'NullPointerException occurs at runtime', NULL, 1),
(512, 54, 'IllegalStateException occurs at runtime', NULL, 0),
(513, 55, 'regionMatch()', NULL, 0),
(514, 55, 'match()', NULL, 0),
(515, 55, 'RegionMatches()', NULL, 0),
(516, 55, 'regionMatches()', NULL, 1),
(517, 56, 'String', NULL, 0),
(518, 56, 'StringBuffer', NULL, 1),
(519, 56, 'StringBuffer & String', NULL, 0),
(520, 56, 'None', NULL, 0),
(521, 57, 'wakeAll()', NULL, 0),
(522, 57, 'notify()', NULL, 0),
(523, 57, 'start()', NULL, 0),
(524, 57, 'notifyAll()', NULL, 1),
(525, 58, ' implements', NULL, 0),
(526, 58, 'inherited', NULL, 0),
(527, 58, 'using', NULL, 0),
(528, 58, 'extends', NULL, 1),
(529, 59, '3 4 4 1', NULL, 1),
(530, 59, '3 2 3 4', NULL, 0),
(531, 59, '2 3 4 3', NULL, 0),
(532, 59, '3 2 4 2', NULL, 0),
(533, 60, 'boolean b1 = 1;', NULL, 0),
(534, 60, 'boolean b2 = \"false\";', NULL, 0),
(535, 60, 'boolean b3 = false;', NULL, 1),
(536, 60, 'boolean b4 = ?true?;', NULL, 0),
(537, 61, '0', NULL, 0),
(538, 61, 'java.lang.NullPointerException', NULL, 0),
(539, 61, 'Compile Error', NULL, 0),
(540, 61, 'java.lang.ArrayIndexOutOfBoundsException', NULL, 1),
(541, 62, 'Encapsulation?', NULL, 1),
(542, 62, 'Abstraction', NULL, 0),
(543, 62, 'Data Hiding?', NULL, 0),
(544, 62, '?Polymorphism', NULL, 0),
(545, 63, 'signed', NULL, 1),
(546, 63, 'unsigned', NULL, 0),
(547, 63, 'Both of the above', NULL, 0),
(548, 63, 'none', NULL, 0),
(549, 64, 'Two type are compatible and size of destination type is shorter than source type.', NULL, 0),
(550, 64, 'Two type are compatible and size of destination type is equal of source type.', NULL, 0),
(551, 64, 'Two type are compatible and size of destination type is larger than source type.', NULL, 1),
(552, 64, 'All of the above', NULL, 0),
(553, 65, 'float', NULL, 0),
(554, 65, 'double ?', NULL, 1),
(555, 65, 'Compilation Error', NULL, 0),
(556, 65, 'Exception is thrown at runtime', NULL, 0),
(557, 66, '8, 7 ?', NULL, 1),
(558, 66, '10, 7', NULL, 0),
(559, 66, 'Compilation fails with an error.', NULL, 0),
(560, 66, 'none', NULL, 0),
(561, 67, '-1', NULL, 0),
(562, 67, '0', NULL, 0),
(563, 67, '1', NULL, 0),
(564, 67, '2', NULL, 1),
(565, 68, 'char[] c = new char();', NULL, 0),
(566, 68, 'char[] c = new char[5]; ?', NULL, 1),
(567, 68, 'char[] c = new char(4);', NULL, 0),
(568, 68, 'char[] c = new char[0]; ?', NULL, 0),
(569, 69, '120, 200, 16, 21', NULL, 0),
(570, 69, '120, 200, 016, 021', NULL, 0),
(571, 69, '120, 200, 14, 17', NULL, 1),
(572, 69, '016 and 021 are compile error. It should be written as 16 and 21.', NULL, 0),
(573, 70, 'String()', NULL, 1),
(574, 70, 'String(void)', NULL, 0),
(575, 70, 'String(0)', NULL, 0),
(576, 70, 'None of the mentioned', NULL, 0),
(577, 71, 'Aggregation', NULL, 0),
(578, 71, 'Composition', NULL, 0),
(579, 71, 'Encapsulation', NULL, 0),
(580, 71, 'Association', NULL, 1),
(581, 72, 'Integer', NULL, 1),
(582, 72, 'Float', NULL, 0),
(583, 72, 'double', NULL, 0),
(584, 72, 'long', NULL, 0),
(585, 73, 'for-each loop', NULL, 0),
(586, 73, 'Iterator', NULL, 0),
(587, 73, 'ListIterator', NULL, 0),
(588, 73, 'a and B', NULL, 1),
(589, 74, 'Compile Time Error', NULL, 1),
(590, 74, 'Exception', NULL, 0),
(591, 74, '5', NULL, 0),
(592, 74, '6', NULL, 0),
(593, 75, 'Exception at runtime', NULL, 0),
(594, 75, 'Prod is 20', NULL, 1),
(595, 75, 'Compile time error', NULL, 0),
(596, 75, 'None of the mentioned', NULL, 0),
(597, 76, 'wait()', NULL, 0),
(598, 76, 'finally()', NULL, 1),
(599, 76, 'getClass()', NULL, 0),
(600, 76, 'clone()', NULL, 0),
(601, 77, 'equal()', NULL, 0),
(602, 77, 'hashCode() and equals()', NULL, 1),
(603, 77, 'toString() and equals()', NULL, 0),
(604, 77, 'toString() and hashCode()', NULL, 0),
(605, 78, 'java.lang', NULL, 1),
(606, 78, 'java.io', NULL, 0),
(607, 78, 'java.util', NULL, 0),
(608, 78, 'java.parent', NULL, 0),
(609, 79, 'We can override the String class methods', NULL, 1),
(610, 79, 'We cannot inherit the String class', NULL, 0),
(611, 79, 'String class is present in java.lang package', NULL, 0),
(612, 79, 'String class objects are immutable', NULL, 0),
(613, 80, 'TRUE', NULL, 1),
(614, 80, 'Compile time error', NULL, 0),
(615, 80, 'Exception', NULL, 0),
(616, 80, 'FALSE', NULL, 0),
(617, 81, '0', NULL, 1),
(618, 81, 'Exception', NULL, 0),
(619, 81, 'Compile time error', NULL, 0),
(620, 81, 'Garbage Value', NULL, 0),
(621, 82, 'At run time', NULL, 0),
(622, 82, 'At compile time', NULL, 1),
(623, 82, 'At coding time', NULL, 0),
(624, 82, 'At execution time', NULL, 0),
(625, 83, 'Compile error', NULL, 0),
(626, 83, 'a = 0\nDivide by zero error\ninside the finally block', NULL, 1),
(627, 83, 'A = 0', NULL, 0),
(628, 83, 'inside the finally block', NULL, 0);

-- --------------------------------------------------------

--
-- Table structure for table `drive-details`
--

CREATE TABLE `drive-details` (
  `id` int(11) NOT NULL,
  `mcq_test_id` int(11) NOT NULL,
  `drive_date` text,
  `drive_time` text,
  `drive_place` text,
  `is_active` int(11) NOT NULL DEFAULT '1'
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Table structure for table `mcq-code-test`
--

CREATE TABLE `mcq-code-test` (
  `id` int(11) NOT NULL,
  `mcq_test_id` text NOT NULL,
  `code_id` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `mcq-code-test`
--

INSERT INTO `mcq-code-test` (`id`, `mcq_test_id`, `code_id`) VALUES
(1, '117', 'java-gen_zK9B2'),
(2, '118', 'java-gen_zK9B2'),
(3, '119', 'java-gen_zK9B2'),
(4, '124', 'java-gen_zK9B2'),
(5, '26', 'java-gen_zK9B2'),
(6, '27', 'java-gen_zK9B2'),
(7, '28', 'java-gen_zK9B2'),
(8, '29', 'java-gen_zK9B2'),
(9, '36', 'java-gen_zK9B2'),
(10, '1', '8'),
(11, '40', '8'),
(12, '56', '8'),
(13, '57', '8'),
(14, '1', '8');

-- --------------------------------------------------------

--
-- Table structure for table `mcq_code`
--

CREATE TABLE `mcq_code` (
  `id` int(11) NOT NULL,
  `mcq_test_id` int(11) NOT NULL,
  `code` text NOT NULL,
  `attempt` int(11) NOT NULL DEFAULT '0',
  `is_active` int(11) NOT NULL DEFAULT '1'
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `mcq_code`
--

INSERT INTO `mcq_code` (`id`, `mcq_test_id`, `code`, `attempt`, `is_active`) VALUES
(2, 1, '1234', 40, 1),
(3, 2, 'xW*a5', 1, 1),
(4, 3, 'UGg%Z', 0, 1),
(6, 4, '^qc$N', 0, 1),
(7, 5, 'HuW)K', 0, 1),
(8, 28, '4321', 0, 1),
(9, 29, 'a#Y5u', 0, 1),
(10, 30, 'OPu4B', 0, 1),
(11, 31, 'QcNRe', 0, 1),
(12, 32, '1b(sE', 0, 1),
(13, 33, 'bzG!#', 0, 1),
(14, 34, 'bv^Z*', 0, 1),
(15, 35, 'pd7Ko', 0, 1),
(16, 36, 'FvrD3', 0, 1),
(17, 37, '6MOHU', 0, 1),
(18, 38, '6WKg7', 0, 1),
(19, 39, 'penio', 0, 1),
(20, 40, 'o2Dgh', 0, 1),
(21, 41, '2Qv&7', 0, 1),
(22, 42, 'qTuvn', 0, 1),
(23, 43, 'wrNj$', 0, 1),
(24, 44, 'BCqmd', 0, 1),
(25, 45, '()kuj', 0, 1),
(26, 46, 'ag0#W', 0, 1),
(27, 47, '0Dw(%', 0, 1),
(28, 48, 'yeZNT', 0, 1),
(29, 49, 'coxCP', 0, 1),
(30, 50, 'ofj%g', 0, 1),
(31, 51, '*QKFd', 0, 1),
(32, 52, 'UJHIq', 0, 1),
(33, 53, 'C^0NB', 0, 1),
(34, 54, '26kSG', 0, 1),
(35, 55, 'ZMzNP', 0, 1),
(36, 56, '*K2Ny', 0, 1),
(37, 57, 'XR1(^', 0, 1),
(38, 58, 'cU9IH', 0, 1),
(39, 59, 'kq2IL', 0, 1),
(40, 60, 'JaXyz', 0, 1),
(41, 61, '*5MYg', 0, 1),
(42, 62, 'Iyp(8', 0, 1),
(43, 63, 'uhN78', 0, 1),
(44, 64, 'sf571', 0, 1),
(45, 65, '1Qv)l', 0, 1),
(46, 66, 'Jiu4l', 0, 1),
(47, 67, 'sm9AO', 0, 1),
(48, 68, '$oZt0', 0, 1),
(49, 69, '&dRec', 0, 1),
(50, 70, 'Ax7@e', 0, 1),
(51, 71, 'mJMAz', 0, 1),
(52, 72, 'D@oCi', 0, 1),
(53, 73, 'ZsbiJ', 0, 1),
(54, 74, 'zLhyU', 0, 1),
(55, 75, 'metGr', 0, 1),
(56, 76, 'eyN@v', 0, 1),
(57, 77, '2yz$L', 0, 1),
(58, 78, '3y@O1', 0, 1),
(59, 79, 'H5Opn', 0, 1),
(60, 80, 'J#OBg', 0, 1),
(61, 81, '2FSyV', 0, 1),
(62, 82, 'F6s49', 0, 1),
(63, 83, 'NV*Gb', 0, 1),
(64, 84, '(FosY', 0, 1),
(65, 85, 'YVFAR', 0, 1),
(66, 86, 'E!DX5', 0, 1),
(67, 87, '$@jbh', 0, 1),
(68, 88, 'str0I', 0, 1),
(69, 89, 'krp92', 0, 1),
(70, 90, 'gInfB', 0, 1),
(71, 91, 'xJzhm', 0, 1),
(72, 92, '$SCwL', 0, 1),
(73, 93, 'EXpqD', 0, 1),
(74, 94, 'vbhF4', 0, 1),
(75, 95, 'm^SC8', 0, 1),
(76, 96, 'WLmC4', 0, 1),
(77, 97, 'Loy6$', 0, 1),
(78, 98, 'Jh%SP', 0, 1),
(79, 99, 'Ccgnq', 0, 1),
(80, 100, 'ma1J5', 0, 1),
(81, 101, 'vjMIk', 0, 1),
(82, 102, '^hL3Z', 0, 1),
(83, 103, 'tI%g4', 0, 1),
(84, 104, 'iclot', 0, 1),
(85, 105, 'Qrt8Z', 0, 1),
(86, 106, 'BYR95', 0, 1),
(87, 107, 'WkRlo', 0, 1),
(88, 108, ')H0ur', 0, 1),
(89, 109, 'Q8tkp', 0, 1),
(90, 110, 'k4cDX', 0, 1),
(91, 111, 'PiKF#', 0, 1),
(92, 112, 'G7qVe', 0, 1),
(93, 113, 'Jr)#j', 0, 1),
(94, 114, '6DkIl', 0, 1),
(95, 115, 'DmE56', 0, 1),
(96, 116, 'mqlDo', 0, 1),
(97, 117, 'R#mi@', 2, 1),
(98, 118, 'eju^6', 1, 1),
(99, 119, 'Yjd&c', 0, 1),
(100, 120, 'gKVbJ', 0, 1),
(101, 121, 'L0rb1', 0, 1),
(102, 122, 'bwz10', 0, 1),
(103, 123, 'voYOs', 30, 1),
(104, 124, 'TY*bQ', 10, 1),
(105, 125, 'B6tx!', 22, 1),
(106, 126, '3q9#Y', 11, 1),
(107, 127, 'axm3j', 0, 1),
(108, 128, 'GFpnq', 50, 1),
(109, 129, 'h8WfS', 0, 1),
(110, 130, 'Tm@o#', 0, 1),
(111, 131, '#Z6x@', 10, 1),
(112, 132, 'v*T69', 10, 1),
(113, 133, 'j$piS', 0, 1),
(114, 134, 'XGUqR', 0, 1),
(115, 135, ')(Gb2', 0, 1),
(116, 136, 'wy3!h', 10, 1);

-- --------------------------------------------------------

--
-- Table structure for table `mcq_code_test`
--

CREATE TABLE `mcq_code_test` (
  `id` int(11) NOT NULL,
  `mcq_test_id` text,
  `code_id` text
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Table structure for table `mcq_test`
--

CREATE TABLE `mcq_test` (
  `id` int(11) NOT NULL,
  `title` text NOT NULL,
  `type` enum('1','2') NOT NULL COMMENT '1 = single, 2 = multiple',
  `is_active` int(11) NOT NULL DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `mcq_test`
--

INSERT INTO `mcq_test` (`id`, `title`, `type`, `is_active`) VALUES
(1, 'abc', '2', 0),
(2, 'tess1', '2', 0),
(3, 'test2', '2', 0),
(4, '3', '2', 0),
(5, 'tt', '2', 0),
(6, 'one', '2', 0),
(7, 'ad', '2', 0),
(8, 'adb', '2', 0),
(9, 'two', '2', 0),
(10, 'three', '2', 0),
(11, 'abc', '2', 0),
(12, 'att', '2', 0),
(13, 'def', '2', 0),
(14, 'aaa', '2', 0),
(15, 'adafa', '2', 0),
(16, 'ddd', '2', 0),
(17, 'eee', '2', 0),
(18, 'eeef', '2', 0),
(19, 'eefd', '2', 0),
(20, 'ttt', '2', 0),
(21, 'abc', '2', 0),
(22, 'new', '2', 0),
(23, 'anew', '2', 0),
(24, 'aa', '2', 0),
(25, 'test21', '2', 0),
(26, 'aaa', '2', 0),
(27, 'nb', '2', 0),
(28, 'one', '2', 0),
(29, 'new', '2', 0),
(30, 'at', '', 0),
(31, 'new-mcq', '', 0),
(32, 'new-mc', '', 0),
(33, 'n', '', 0),
(34, 'neww', '', 0),
(35, 'a', '', 0),
(36, 'ne', '', 0),
(37, 'av', '', 0),
(38, 'nnn', '', 0),
(39, 'ddf', '', 0),
(40, 'code-check', '', 0),
(41, 'abc', '', 0),
(42, 'new-mcqq', '', 0),
(43, 'new-test-mcq', '', 0),
(44, 'a1', '', 0),
(45, '', '', 0),
(46, 'a', '', 0),
(47, ' n', '', 0),
(48, 'a', '', 0),
(49, 'test1', '', 0),
(50, 'b', '', 0),
(51, 'b', '', 0),
(52, 'dd', '', 0),
(53, 'ss', '', 0),
(54, 'nn', '', 0),
(55, 'aaa', '', 0),
(56, 'aaa', '', 0),
(57, 'aaa', '', 0),
(58, 'Test1', '', 0),
(59, 'abc1', '', 0),
(60, 'aaa', '', 0),
(61, 'test', '', 0),
(62, 'test-1', '', 0),
(63, 'test-2', '', 0),
(64, 'test-2', '', 0),
(65, 'aaaa', '', 0),
(66, 'aaa', '', 0),
(67, 'add', '', 0),
(68, 'aaa', '', 0),
(69, 'ddd', '', 0),
(70, 'aaa', '', 0),
(71, 'aaa', '', 0),
(72, 'tesst-1', '', 0),
(73, 'aadd', '', 0),
(74, 'eeee', '', 0),
(75, 'ddd', '', 0),
(76, 'ddd', '', 0),
(77, 'afaf', '', 0),
(78, 'dafa', '', 0),
(79, 'dafa', '', 0),
(80, 'testt', '', 0),
(81, 'ddde', '', 0),
(82, 'dfdfd', '', 0),
(83, 'ddfed', '', 0),
(84, 'dfdfd', '', 0),
(85, 'aaa', '', 0),
(86, 'dfdfd', '', 0),
(87, 'dfsdff', '', 0),
(88, 'dfsfaf', '', 0),
(89, 'afaa', '', 0),
(90, 'afafa', '', 0),
(91, 'daa', '', 0),
(92, 'dafa', '', 0),
(93, 'dfdf', '', 0),
(94, 'afaf', '', 0),
(95, 'dafaf', '', 0),
(96, 'afafa', '', 0),
(97, 'dfaf', '', 0),
(98, 'atew', '', 0),
(99, 'atew', '', 0),
(100, 'test1', '', 0),
(101, 'test', '', 0),
(102, 'ddd', '', 0),
(103, 'test', '', 0),
(104, 'aaa', '', 0),
(105, 'sdds', '', 0),
(106, 'aaa', '', 0),
(107, 'aa', '', 0),
(108, 'aa', '', 0),
(109, 'aa', '', 0),
(110, 'ddd', '', 0),
(111, 'aa', '', 0),
(112, 'qq', '', 0),
(113, 'test', '', 0),
(114, 'aa', '', 0),
(115, 'add', '', 0),
(116, 'ddd', '', 0),
(117, 'dde', '', 0),
(118, 'aa1', '', 0),
(119, 'd', '', 0),
(120, 'ddd', '', 0),
(121, 'w', '', 0),
(122, 'cccc', '', 0),
(123, 'e', '', 0),
(124, 'english-test', '', 0),
(125, 'maths', '', 0),
(126, 'quant', '', 0),
(127, 'ABC', '', 0),
(128, 'Apt1', '', 0),
(129, 'test2', '', 0),
(130, 'TEST2', '', 0),
(131, 'test22', '', 0),
(132, 'testt2', '', 0),
(133, 'aa', '', 0),
(134, 'test3', '', 0),
(135, 'atestt', '', 0),
(136, 'DcC', '', 0);

-- --------------------------------------------------------

--
-- Table structure for table `mcq_test_pattern`
--

CREATE TABLE `mcq_test_pattern` (
  `id` int(11) NOT NULL,
  `mcq_test_id` int(11) NOT NULL,
  `section_id` int(11) NOT NULL,
  `sub_section_id` int(11) NOT NULL,
  `level_id` int(11) NOT NULL,
  `completion_time` text,
  `total_question` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `mcq_test_pattern`
--

INSERT INTO `mcq_test_pattern` (`id`, `mcq_test_id`, `section_id`, `sub_section_id`, `level_id`, `completion_time`, `total_question`) VALUES
(1, 1, 1, 1, 1, NULL, 3),
(2, 1, 2, 12, 1, NULL, 2),
(3, 1, 3, 20, 1, NULL, 2),
(4, 2, 1, 1, 1, NULL, 2),
(5, 2, 2, 12, 1, NULL, 2),
(6, 2, 3, 20, 1, NULL, 2),
(7, 3, 1, 1, 1, NULL, 2),
(8, 3, 2, 12, 1, NULL, 2),
(9, 3, 3, 20, 1, NULL, 2),
(10, 4, 2, 12, 1, NULL, 3),
(11, 4, 1, 1, 1, NULL, 3),
(12, 4, 3, 20, 1, NULL, 4),
(13, 5, 1, 1, 1, NULL, 3),
(14, 5, 2, 12, 1, NULL, 3),
(15, 5, 3, 20, 1, NULL, 3),
(16, 22, 1, 1, 1, NULL, 3),
(17, 22, 1, 8, 1, NULL, 4),
(18, 22, 1, 8, 2, NULL, 1),
(19, 22, 2, 1, 1, NULL, 5),
(20, 23, 1, 1, 1, NULL, 1),
(21, 23, 1, 8, 1, NULL, 1),
(22, 27, 1, 8, 1, NULL, 4),
(23, 28, 1, 1, 1, NULL, 2),
(24, 28, 2, 1, 1, NULL, 2),
(25, 28, 3, 1, 1, NULL, 2),
(26, 29, 1, 1, 1, NULL, 2),
(27, 0, 31, 1, 1, NULL, 2),
(28, 0, 31, 1, 1, NULL, 2),
(29, 0, 31, 1, 1, NULL, 2),
(30, 0, 32, 1, 1, NULL, 2),
(31, 0, 32, 1, 1, NULL, 2),
(32, 34, 1, 1, 1, NULL, 1),
(33, 34, 1, 8, 2, NULL, 1),
(34, 34, 2, 1, 1, NULL, 2),
(35, 34, 3, 1, 1, NULL, 2),
(36, 40, 1, 1, 1, NULL, 2),
(37, 40, 2, 1, 1, NULL, 2),
(38, 40, 2, 1, 1, NULL, 2),
(39, 40, 3, 1, 1, NULL, 2),
(40, 0, 0, 1, 1, NULL, 2),
(41, 0, 0, 1, 1, NULL, 2),
(42, 0, 0, 1, 1, NULL, 2),
(43, 57, 1, 1, 1, NULL, 2),
(44, 57, 2, 1, 1, NULL, 2),
(45, 57, 3, 1, 1, NULL, 3),
(46, 117, 1, 1, 1, '5', 2),
(47, 118, 1, 1, 1, NULL, 4),
(48, 120, 3, 1, 1, NULL, 2),
(49, 123, 3, 1, 1, NULL, 2),
(50, 123, 2, 1, 1, NULL, 2),
(51, 124, 1, 1, 1, NULL, 2),
(52, 125, 3, 1, 1, NULL, 2),
(53, 126, 2, 1, 1, NULL, 2),
(54, 126, 1, 1, 1, NULL, 2),
(55, 128, 10, 1, 1, NULL, 10),
(56, 128, 9, 1, 1, NULL, 10),
(57, 128, 8, 1, 1, NULL, 10),
(58, 131, 1, 1, 1, NULL, 4),
(59, 131, 1, 8, 1, NULL, 4),
(60, 131, 1, 8, 2, NULL, 1),
(61, 131, 8, 1, 1, NULL, 15),
(62, 132, 10, 1, 1, NULL, 10),
(63, 132, 9, 1, 1, NULL, 10),
(64, 136, 10, 1, 1, NULL, 10),
(65, 136, 9, 1, 1, NULL, 10);

-- --------------------------------------------------------

--
-- Table structure for table `mcq_test_question`
--

CREATE TABLE `mcq_test_question` (
  `id` int(11) NOT NULL,
  `student_id` int(11) DEFAULT NULL,
  `mcq_test_id` int(11) NOT NULL,
  `mcq_code` text NOT NULL,
  `section_id` int(11) NOT NULL,
  `questions` text NOT NULL,
  `total_time` text
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `mcq_test_question`
--

INSERT INTO `mcq_test_question` (`id`, `student_id`, `mcq_test_id`, `mcq_code`, `section_id`, `questions`, `total_time`) VALUES
(1, 2, 1, '1234', 1, '18,19,17', NULL),
(2, 2, 1, '1234', 2, '12,13', NULL),
(3, 2, 1, '1234', 3, '7,8', NULL),
(4, NULL, 1, '1234', 1, '18,19,17', NULL),
(5, NULL, 1, '1234', 2, '12,13', NULL),
(6, NULL, 1, '1234', 3, '7,8', NULL),
(7, 2, 1, '1234', 1, '19,17,18', NULL),
(8, 2, 1, '1234', 2, '12,13', NULL),
(9, 2, 1, '1234', 3, '8,7', NULL),
(10, 2, 1, '1234', 1, '17,18,19', NULL),
(11, 2, 1, '1234', 2, '12,13', NULL),
(12, 2, 1, '1234', 3, '7,8', NULL),
(13, 2, 1, '1234', 1, '17,18,19', NULL),
(14, 2, 1, '1234', 2, '13,12', NULL),
(15, 2, 1, '1234', 3, '7,8', NULL),
(16, 2, 1, '1234', 1, '19,17,18', NULL),
(17, 2, 1, '1234', 2, '13,12', NULL),
(18, 2, 1, '1234', 3, '7,8', NULL),
(19, 2, 1, '1234', 1, '19,17,18', NULL),
(20, 2, 1, '1234', 2, '12,13', NULL),
(21, 2, 1, '1234', 3, '7,8', NULL),
(22, 2, 1, '1234', 1, '18,19,17', NULL),
(23, 2, 1, '1234', 2, '13,12', NULL),
(24, 2, 1, '1234', 3, '7,8', NULL),
(25, 4, 1, '1234', 1, '19,18,17', NULL),
(26, 4, 1, '1234', 2, '13,12', NULL),
(27, 4, 1, '1234', 3, '8,7', NULL),
(28, 4, 1, '1234', 1, '19,18,17', NULL),
(29, 4, 1, '1234', 2, '13,12', NULL),
(30, 4, 1, '1234', 3, '8,7', NULL),
(31, 2, 1, '1234', 1, '18,17,19', NULL),
(32, 2, 1, '1234', 2, '12,13', NULL),
(33, 2, 1, '1234', 3, '7,8', NULL),
(34, 2, 1, '1234', 1, '18,17,19', NULL),
(35, 2, 1, '1234', 2, '12,13', NULL),
(36, 2, 1, '1234', 3, '7,8', NULL),
(37, 4, 1, '1234', 1, '19,17,18', NULL),
(38, 4, 1, '1234', 2, '13,12', NULL),
(39, 4, 1, '1234', 3, '8,7', NULL),
(40, 4, 1, '1234', 1, '17,19,18', NULL),
(41, 4, 1, '1234', 2, '12,13', NULL),
(42, 4, 1, '1234', 3, '7,8', NULL),
(43, 2, 1, '1234', 1, '18,17,19', NULL),
(44, 2, 1, '1234', 2, '13,12', NULL),
(45, 2, 1, '1234', 3, '7,8', NULL),
(46, 2, 1, '1234', 1, '17,18,19', NULL),
(47, 2, 1, '1234', 2, '12,13', NULL),
(48, 2, 1, '1234', 3, '8,7', NULL),
(49, 2, 1, '1234', 1, '18,17,19', NULL),
(50, 2, 1, '1234', 2, '12,13', NULL),
(51, 2, 1, '1234', 3, '7,8', NULL),
(52, 2, 1, '1234', 1, '18,19,17', NULL),
(53, 2, 1, '1234', 2, '12,13', NULL),
(54, 2, 1, '1234', 3, '7,8', NULL),
(55, 2, 1, '1234', 1, '19,17,18', NULL),
(56, 2, 1, '1234', 2, '12,13', NULL),
(57, 2, 1, '1234', 3, '8,7', NULL),
(58, 2, 1, '1234', 1, '17,18,19', NULL),
(59, 2, 1, '1234', 2, '12,13', NULL),
(60, 2, 1, '1234', 3, '8,7', NULL),
(61, NULL, 1, '1234', 1, '19,17,18', NULL),
(62, NULL, 1, '1234', 2, '12,13', NULL),
(63, NULL, 1, '1234', 3, '8,7', NULL),
(64, 2, 1, '1234', 1, '19,17,18', NULL),
(65, 2, 1, '1234', 2, '12,13', NULL),
(66, 2, 1, '1234', 3, '8,7', NULL),
(67, 1005, 1, '1234', 1, '19,17,18', NULL),
(68, 1005, 1, '1234', 2, '12,13', NULL),
(69, 1005, 1, '1234', 3, '7,8', NULL),
(70, 1005, 1, '1234', 1, '17,18,19', NULL),
(71, 1005, 1, '1234', 2, '12,13', NULL),
(72, 1005, 1, '1234', 3, '7,8', NULL),
(73, 2, 1, '1234', 1, '17,18,19', NULL),
(74, 2, 1, '1234', 2, '13,12', NULL),
(75, 2, 1, '1234', 3, '8,7', NULL),
(76, 2, 1, '1234', 1, '17,19,18', NULL),
(77, 2, 1, '1234', 2, '13,12', NULL),
(78, 2, 1, '1234', 3, '7,8', NULL),
(79, 2, 1, '1234', 1, '17,19,18', NULL),
(80, 2, 1, '1234', 2, '13,12', NULL),
(81, 2, 1, '1234', 3, '7,8', NULL),
(82, 2, 1, '1234', 1, '18,19,17', NULL),
(83, 2, 1, '1234', 2, '12,13', NULL),
(84, 2, 1, '1234', 3, '8,7', NULL),
(85, 2, 1, '1234', 1, '17,19,18', NULL),
(86, 2, 1, '1234', 2, '13,12', NULL),
(87, 2, 1, '1234', 3, '7,8', NULL),
(88, 2, 1, '1234', 1, '19,17,18', NULL),
(89, 2, 1, '1234', 2, '12,13', NULL),
(90, 2, 1, '1234', 3, '8,7', NULL),
(91, 2, 1, '1234', 1, '18,17,19', NULL),
(92, 2, 1, '1234', 2, '13,12', NULL),
(93, 2, 1, '1234', 3, '8,7', NULL),
(94, 2, 1, '1234', 1, '17,19,18', NULL),
(95, 2, 1, '1234', 2, '13,12', NULL),
(96, 2, 1, '1234', 3, '8,7', NULL),
(97, 2, 1, '1234', 1, '17,18,19', NULL),
(98, 2, 1, '1234', 2, '13,12', NULL),
(99, 2, 1, '1234', 3, '8,7', NULL),
(100, 2, 1, '1234', 1, '19,17,18', NULL),
(101, 2, 1, '1234', 2, '12,13', NULL),
(102, 2, 1, '1234', 3, '8,7', NULL),
(103, 2, 1, '1234', 1, '17,18,19', NULL),
(104, 2, 1, '1234', 2, '13,12', NULL),
(105, 2, 1, '1234', 3, '7,8', NULL),
(106, 2, 1, '1234', 1, '18,17,19', NULL),
(107, 2, 1, '1234', 2, '13,12', NULL),
(108, 2, 1, '1234', 3, '8,7', NULL),
(109, 2, 1, '1234', 1, '17,18,19', NULL),
(110, 2, 1, '1234', 2, '12,13', NULL),
(111, 2, 1, '1234', 3, '7,8', NULL),
(112, 2, 1, '1234', 1, '18,19,17', NULL),
(113, 2, 1, '1234', 2, '13,12', NULL),
(114, 2, 1, '1234', 3, '8,7', NULL),
(115, 2, 28, '4321', 1, '18,17', NULL),
(116, 2, 28, '4321', 2, '12,13', NULL),
(117, 2, 28, '4321', 3, '7,8', NULL),
(118, 2, 34, 'bv^Z*', 1, '17,21', NULL),
(119, 2, 34, 'bv^Z*', 2, '12,13', NULL),
(120, 2, 34, 'bv^Z*', 3, '8,7', NULL),
(121, 2, 1, '1234', 1, '17,19,18', NULL),
(122, 2, 1, '1234', 2, '12,13', NULL),
(123, 2, 1, '1234', 3, '7,8', NULL),
(124, 2, 1, '1234', 1, '19,18,17', NULL),
(125, 2, 1, '1234', 2, '12,13', NULL),
(126, 2, 1, '1234', 3, '8,7', NULL),
(127, 2, 1, '1234', 1, '19,17,18', NULL),
(128, 2, 1, '1234', 2, '12,13', NULL),
(129, 2, 1, '1234', 3, '8,7', NULL),
(130, 2, 40, 'o2Dgh', 1, '18,17', NULL),
(131, 2, 40, 'o2Dgh', 2, '13,12,12,13', NULL),
(132, 2, 40, 'o2Dgh', 3, '8,7', NULL),
(133, 2, 1, '1234', 1, '19,17,18', NULL),
(134, 2, 1, '1234', 2, '12,13', NULL),
(135, 2, 1, '1234', 3, '7,8', NULL),
(136, 2, 1, '1234', 1, '18,17,19', NULL),
(137, 2, 1, '1234', 2, '13,12', NULL),
(138, 2, 1, '1234', 3, '7,8', NULL),
(139, 2, 1, '1234', 1, '18,17,19', NULL),
(140, 2, 1, '1234', 2, '12,13', NULL),
(141, 2, 1, '1234', 3, '8,7', NULL),
(142, 2, 1, '1234', 1, '18,17,19', NULL),
(143, 2, 1, '1234', 2, '13,12', NULL),
(144, 2, 1, '1234', 3, '8,7', NULL),
(145, 2, 1, '1234', 1, '18,19,17', NULL),
(146, 2, 1, '1234', 2, '13,12', NULL),
(147, 2, 1, '1234', 3, '8,7', NULL),
(148, 2, 1, '1234', 1, '17,18,19', NULL),
(149, 2, 1, '1234', 2, '12,13', NULL),
(150, 2, 1, '1234', 3, '7,8', NULL),
(151, 2, 1, '1234', 1, '18,19,17', NULL),
(152, 2, 1, '1234', 2, '12,13', NULL),
(153, 2, 1, '1234', 3, '8,7', NULL),
(154, 2, 1, '1234', 1, '18,17,19', NULL),
(155, 2, 1, '1234', 2, '13,12', NULL),
(156, 2, 1, '1234', 3, '7,8', NULL),
(157, 2, 1, '1234', 1, '19,17,18', NULL),
(158, 2, 1, '1234', 2, '12,13', NULL),
(159, 2, 1, '1234', 3, '7,8', NULL),
(160, 2, 1, '1234', 1, '18,19,17', NULL),
(161, 2, 1, '1234', 2, '13,12', NULL),
(162, 2, 1, '1234', 3, '7,8', NULL),
(163, 2, 1, '1234', 1, '19,18,17', NULL),
(164, 2, 1, '1234', 2, '12,13', NULL),
(165, 2, 1, '1234', 3, '7,8', NULL),
(166, 2, 1, '1234', 1, '18,19,17', NULL),
(167, 2, 1, '1234', 2, '13,12', NULL),
(168, 2, 1, '1234', 3, '7,8', NULL),
(169, 2, 1, '1234', 1, '18,19,17', NULL),
(170, 2, 1, '1234', 2, '13,12', NULL),
(171, 2, 1, '1234', 3, '7,8', NULL),
(172, 2, 1, '1234', 1, '18,17,19', NULL),
(173, 2, 1, '1234', 2, '13,12', NULL),
(174, 2, 1, '1234', 3, '8,7', NULL),
(175, 2, 1, '1234', 1, '19,18,17', NULL),
(176, 2, 1, '1234', 2, '12,13', NULL),
(177, 2, 1, '1234', 3, '7,8', NULL),
(178, 2, 1, '1234', 1, '17,19,18', NULL),
(179, 2, 1, '1234', 2, '13,12', NULL),
(180, 2, 1, '1234', 3, '8,7', NULL),
(181, 2, 1, '1234', 1, '19,17,18', NULL),
(182, 2, 1, '1234', 2, '13,12', NULL),
(183, 2, 1, '1234', 3, '7,8', NULL),
(184, 2, 1, '1234', 1, '17,18,19', NULL),
(185, 2, 1, '1234', 2, '12,13', NULL),
(186, 2, 1, '1234', 3, '8,7', NULL),
(187, 2, 1, '1234', 1, '19,17,18', NULL),
(188, 2, 1, '1234', 2, '13,12', NULL),
(189, 2, 1, '1234', 3, '8,7', NULL),
(190, 2, 1, '1234', 1, '18,19,17', NULL),
(191, 2, 1, '1234', 2, '12,13', NULL),
(192, 2, 1, '1234', 3, '7,8', NULL),
(193, 2, 1, '1234', 1, '17,19,18', NULL),
(194, 2, 1, '1234', 2, '12,13', NULL),
(195, 2, 1, '1234', 3, '7,8', NULL),
(196, 2, 1, '1234', 1, '18,17,19', NULL),
(197, 2, 1, '1234', 2, '12,13', NULL),
(198, 2, 1, '1234', 3, '7,8', NULL),
(199, 2, 1, '1234', 1, '18,17,19', NULL),
(200, 2, 1, '1234', 2, '12,13', NULL),
(201, 2, 1, '1234', 3, '7,8', NULL),
(202, 2, 1, '1234', 1, '19,17,18', NULL),
(203, 2, 1, '1234', 2, '12,13', NULL),
(204, 2, 1, '1234', 3, '7,8', NULL),
(205, 2, 1, '1234', 1, '18,17,19', NULL),
(206, 2, 1, '1234', 2, '13,12', NULL),
(207, 2, 1, '1234', 3, '7,8', NULL),
(208, 2, 1, '1234', 1, '19,18,17', NULL),
(209, 2, 1, '1234', 2, '13,12', NULL),
(210, 2, 1, '1234', 3, '7,8', NULL),
(211, 2, 1, '1234', 1, '19,18,17', NULL),
(212, 2, 1, '1234', 2, '12,13', NULL),
(213, 2, 1, '1234', 3, '8,7', NULL),
(214, 2, 1, '1234', 1, '19,18,17', NULL),
(215, 2, 1, '1234', 2, '13,12', NULL),
(216, 2, 1, '1234', 3, '7,8', NULL),
(217, 2, 1, '1234', 1, '19,18,17', NULL),
(218, 2, 1, '1234', 2, '12,13', NULL),
(219, 2, 1, '1234', 3, '7,8', NULL),
(220, 2, 1, '1234', 1, '19,17,18', NULL),
(221, 2, 1, '1234', 2, '13,12', NULL),
(222, 2, 1, '1234', 3, '8,7', NULL),
(223, 2, 1, '1234', 1, '19,18,17', NULL),
(224, 2, 1, '1234', 2, '13,12', NULL),
(225, 2, 1, '1234', 3, '8,7', NULL),
(226, 2, 1, '1234', 1, '17,19,18', NULL),
(227, 2, 1, '1234', 2, '12,13', NULL),
(228, 2, 1, '1234', 3, '7,8', NULL),
(229, 2, 1, '1234', 1, '17,19,18', NULL),
(230, 2, 1, '1234', 2, '12,13', NULL),
(231, 2, 1, '1234', 3, '7,8', NULL),
(232, 2, 1, '1234', 1, '18,17,19', NULL),
(233, 2, 1, '1234', 2, '12,13', NULL),
(234, 2, 1, '1234', 3, '7,8', NULL),
(235, 2, 1, '1234', 1, '18,19,17', NULL),
(236, 2, 1, '1234', 2, '12,13', NULL),
(237, 2, 1, '1234', 3, '7,8', NULL),
(238, 2, 1, '1234', 1, '19,18,17', NULL),
(239, 2, 1, '1234', 2, '12,13', NULL),
(240, 2, 1, '1234', 3, '7,8', NULL),
(241, 2, 1, '1234', 1, '17,19,18', NULL),
(242, 2, 1, '1234', 2, '13,12', NULL),
(243, 2, 1, '1234', 3, '8,7', NULL),
(244, 2, 1, '1234', 1, '19,17,18', NULL),
(245, 2, 1, '1234', 2, '12,13', NULL),
(246, 2, 1, '1234', 3, '8,7', NULL),
(247, 2, 1, '1234', 1, '19,17,18', NULL),
(248, 2, 1, '1234', 2, '12,13', NULL),
(249, 2, 1, '1234', 3, '7,8', NULL),
(250, 2, 1, '1234', 1, '17,19,18', NULL),
(251, 2, 1, '1234', 2, '12,13', NULL),
(252, 2, 1, '1234', 3, '8,7', NULL),
(253, 2, 1, '1234', 1, '19,17,18', NULL),
(254, 2, 1, '1234', 2, '13,12', NULL),
(255, 2, 1, '1234', 3, '7,8', NULL),
(256, 2, 1, '1234', 1, '17,19,18', NULL),
(257, 2, 1, '1234', 2, '13,12', NULL),
(258, 2, 1, '1234', 3, '8,7', NULL),
(259, 2, 1, '1234', 1, '18,17,19', NULL),
(260, 2, 1, '1234', 2, '12,13', NULL),
(261, 2, 1, '1234', 3, '7,8', NULL),
(262, 2, 1, '1234', 1, '18,17,19', NULL),
(263, 2, 1, '1234', 2, '12,13', NULL),
(264, 2, 1, '1234', 3, '8,7', NULL),
(265, 2, 1, '1234', 1, '17,18,19', NULL),
(266, 2, 1, '1234', 2, '13,12', NULL),
(267, 2, 1, '1234', 3, '8,7', NULL),
(268, 2, 1, '1234', 1, '18,19,17', NULL),
(269, 2, 1, '1234', 2, '13,12', NULL),
(270, 2, 1, '1234', 3, '8,7', NULL),
(271, 2, 1, '1234', 1, '19,18,17', NULL),
(272, 2, 1, '1234', 2, '13,12', NULL),
(273, 2, 1, '1234', 3, '7,8', NULL),
(274, 2, 1, '1234', 1, '17,19,18', NULL),
(275, 2, 1, '1234', 2, '13,12', NULL),
(276, 2, 1, '1234', 3, '8,7', NULL),
(277, 2, 1, '1234', 1, '18,19,17', NULL),
(278, 2, 1, '1234', 2, '13,12', NULL),
(279, 2, 1, '1234', 3, '7,8', NULL),
(280, 2, 1, '1234', 1, '17,19,18', NULL),
(281, 2, 1, '1234', 2, '12,13', NULL),
(282, 2, 1, '1234', 3, '7,8', NULL),
(283, 2, 1, '1234', 1, '17,18,19', NULL),
(284, 2, 1, '1234', 2, '13,12', NULL),
(285, 2, 1, '1234', 3, '8,7', NULL),
(286, 2, 1, '1234', 1, '19,17,18', NULL),
(287, 2, 1, '1234', 2, '12,13', NULL),
(288, 2, 1, '1234', 3, '7,8', NULL),
(289, 2, 1, '1234', 1, '17,18,19', NULL),
(290, 2, 1, '1234', 2, '13,12', NULL),
(291, 2, 1, '1234', 3, '7,8', NULL),
(292, 2, 1, '1234', 1, '17,18,19', NULL),
(293, 2, 1, '1234', 2, '13,12', NULL),
(294, 2, 1, '1234', 3, '8,7', NULL),
(295, 2, 1, '1234', 1, '17,18,19', NULL),
(296, 2, 1, '1234', 2, '12,13', NULL),
(297, 2, 1, '1234', 3, '7,8', NULL),
(298, 2, 1, '1234', 1, '18,17,19', NULL),
(299, 2, 1, '1234', 2, '12,13', NULL),
(300, 2, 1, '1234', 3, '7,8', NULL),
(301, 2, 1, '1234', 1, '19,18,17', NULL),
(302, 2, 1, '1234', 2, '13,12', NULL),
(303, 2, 1, '1234', 3, '8,7', NULL),
(304, 2, 1, '1234', 1, '19,18,17', NULL),
(305, 2, 1, '1234', 2, '13,12', NULL),
(306, 2, 1, '1234', 3, '8,7', NULL),
(307, 2, 1, '1234', 1, '17,19,18', NULL),
(308, 2, 1, '1234', 2, '12,13', NULL),
(309, 2, 1, '1234', 3, '7,8', NULL),
(310, 2, 1, '1234', 1, '19,18,17', NULL),
(311, 2, 1, '1234', 2, '13,12', NULL),
(312, 2, 1, '1234', 3, '7,8', NULL),
(313, 2, 1, '1234', 1, '19,18,17', NULL),
(314, 2, 1, '1234', 2, '13,12', NULL),
(315, 2, 1, '1234', 3, '8,7', NULL),
(316, 2, 1, '1234', 1, '18,19,17', NULL),
(317, 2, 1, '1234', 2, '13,12', NULL),
(318, 2, 1, '1234', 3, '8,7', NULL),
(319, 2, 1, '1234', 1, '18,17,19', NULL),
(320, 2, 1, '1234', 2, '13,12', NULL),
(321, 2, 1, '1234', 3, '8,7', NULL),
(322, 2, 1, '1234', 1, '17,19,18', NULL),
(323, 2, 1, '1234', 2, '13,12', NULL),
(324, 2, 1, '1234', 3, '7,8', NULL),
(325, 2, 1, '1234', 1, '19,18,17', NULL),
(326, 2, 1, '1234', 2, '13,12', NULL),
(327, 2, 1, '1234', 3, '8,7', NULL),
(328, 2, 1, '1234', 1, '17,19,18', NULL),
(329, 2, 1, '1234', 2, '12,13', NULL),
(330, 2, 1, '1234', 3, '7,8', NULL),
(331, 2, 1, '1234', 1, '18,17,19', NULL),
(332, 2, 1, '1234', 2, '13,12', NULL),
(333, 2, 1, '1234', 3, '8,7', NULL),
(334, 2, 1, '1234', 1, '17,18,19', NULL),
(335, 2, 1, '1234', 2, '12,13', NULL),
(336, 2, 1, '1234', 3, '7,8', NULL),
(337, 2, 1, '1234', 1, '17,18,19', NULL),
(338, 2, 1, '1234', 2, '12,13', NULL),
(339, 2, 1, '1234', 3, '7,8', NULL),
(340, 2, 1, '1234', 1, '18,19,17', NULL),
(341, 2, 1, '1234', 2, '13,12', NULL),
(342, 2, 1, '1234', 3, '8,7', NULL),
(343, 2, 1, '1234', 1, '17,18,19', NULL),
(344, 2, 1, '1234', 2, '13,12', NULL),
(345, 2, 1, '1234', 3, '8,7', NULL),
(346, 2, 1, '1234', 1, '17,19,18', NULL),
(347, 2, 1, '1234', 2, '13,12', NULL),
(348, 2, 1, '1234', 3, '8,7', NULL),
(349, 2, 1, '1234', 1, '19,17,18', NULL),
(350, 2, 1, '1234', 2, '13,12', NULL),
(351, 2, 1, '1234', 3, '7,8', NULL),
(352, 2, 1, '1234', 1, '19,18,17', NULL),
(353, 2, 1, '1234', 2, '13,12', NULL),
(354, 2, 1, '1234', 3, '8,7', NULL),
(355, 2, 1, '1234', 1, '18,17,19', NULL),
(356, 2, 1, '1234', 2, '12,13', NULL),
(357, 2, 1, '1234', 3, '8,7', NULL),
(358, 2, 1, '1234', 1, '18,17,19', NULL),
(359, 2, 1, '1234', 2, '13,12', NULL),
(360, 2, 1, '1234', 3, '7,8', NULL),
(361, 2, 1, '1234', 1, '17,19,18', NULL),
(362, 2, 1, '1234', 2, '13,12', NULL),
(363, 2, 1, '1234', 3, '8,7', NULL),
(364, 2, 1, '1234', 1, '19,17,18', NULL),
(365, 2, 1, '1234', 2, '12,13', NULL),
(366, 2, 1, '1234', 3, '7,8', NULL),
(367, 2, 1, '1234', 1, '17,18,19', NULL),
(368, 2, 1, '1234', 2, '13,12', NULL),
(369, 2, 1, '1234', 3, '7,8', NULL),
(370, 2, 1, '1234', 1, '17,19,18', NULL),
(371, 2, 1, '1234', 2, '13,12', NULL),
(372, 2, 1, '1234', 3, '8,7', NULL),
(373, 2, 1, '1234', 1, '18,17,19', NULL),
(374, 2, 1, '1234', 2, '13,12', NULL),
(375, 2, 1, '1234', 3, '8,7', NULL),
(376, 2, 1, '1234', 1, '19,17,18', NULL),
(377, 2, 1, '1234', 2, '13,12', NULL),
(378, 2, 1, '1234', 3, '7,8', NULL),
(379, 2, 1, '1234', 1, '19,18,17', NULL),
(380, 2, 1, '1234', 2, '12,13', NULL),
(381, 2, 1, '1234', 3, '7,8', NULL),
(382, 2, 1, '1234', 1, '18,17,19', NULL),
(383, 2, 1, '1234', 2, '12,13', NULL),
(384, 2, 1, '1234', 3, '8,7', NULL),
(385, 2, 1, '1234', 1, '19,17,18', NULL),
(386, 2, 1, '1234', 2, '13,12', NULL),
(387, 2, 1, '1234', 3, '7,8', NULL),
(388, 2, 1, '1234', 1, '19,17,18', NULL),
(389, 2, 1, '1234', 2, '12,13', NULL),
(390, 2, 1, '1234', 3, '7,8', NULL),
(391, 2, 1, '1234', 1, '18,17,19', NULL),
(392, 2, 1, '1234', 2, '12,13', NULL),
(393, 2, 1, '1234', 3, '7,8', NULL),
(394, 2, 1, '1234', 1, '17,18,19', NULL),
(395, 2, 1, '1234', 2, '13,12', NULL),
(396, 2, 1, '1234', 3, '7,8', NULL),
(397, 2, 1, '1234', 1, '19,17,18', NULL),
(398, 2, 1, '1234', 2, '13,12', NULL),
(399, 2, 1, '1234', 3, '7,8', NULL),
(400, 2, 1, '1234', 1, '19,17,18', NULL),
(401, 2, 1, '1234', 2, '12,13', NULL),
(402, 2, 1, '1234', 3, '7,8', NULL),
(403, 2, 1, '1234', 1, '19,18,17', NULL),
(404, 2, 1, '1234', 2, '12,13', NULL),
(405, 2, 1, '1234', 3, '8,7', NULL),
(406, 2, 1, '1234', 1, '18,17,19', NULL),
(407, 2, 1, '1234', 2, '12,13', NULL),
(408, 2, 1, '1234', 3, '7,8', NULL),
(409, 2, 1, '1234', 1, '18,17,19', NULL),
(410, 2, 1, '1234', 2, '12,13', NULL),
(411, 2, 1, '1234', 3, '8,7', NULL),
(412, 2, 1, '1234', 1, '18,19,17', NULL),
(413, 2, 1, '1234', 2, '13,12', NULL),
(414, 2, 1, '1234', 3, '8,7', NULL),
(415, 2, 1, '1234', 1, '17,19,18', NULL),
(416, 2, 1, '1234', 2, '13,12', NULL),
(417, 2, 1, '1234', 3, '7,8', NULL),
(418, 2, 1, '1234', 1, '18,19,17', NULL),
(419, 2, 1, '1234', 2, '13,12', NULL),
(420, 2, 1, '1234', 3, '7,8', NULL),
(421, 2, 1, '1234', 1, '19,17,18', NULL),
(422, 2, 1, '1234', 2, '13,12', NULL),
(423, 2, 1, '1234', 3, '7,8', NULL),
(424, 2, 1, '1234', 1, '18,17,19', NULL),
(425, 2, 1, '1234', 2, '12,13', NULL),
(426, 2, 1, '1234', 3, '8,7', NULL),
(427, 2, 1, '1234', 1, '17,19,18', NULL),
(428, 2, 1, '1234', 2, '13,12', NULL),
(429, 2, 1, '1234', 3, '8,7', NULL),
(430, 2, 1, '1234', 1, '17,19,18', NULL),
(431, 2, 1, '1234', 2, '12,13', NULL),
(432, 2, 1, '1234', 3, '7,8', NULL),
(433, 2, 1, '1234', 1, '19,18,17', NULL),
(434, 2, 1, '1234', 2, '12,13', NULL),
(435, 2, 1, '1234', 3, '7,8', NULL),
(436, 2, 1, '1234', 1, '19,18,17', NULL),
(437, 2, 1, '1234', 2, '12,13', NULL),
(438, 2, 1, '1234', 3, '8,7', NULL),
(439, 2, 1, '1234', 1, '19,17,18', NULL),
(440, 2, 1, '1234', 2, '12,13', NULL),
(441, 2, 1, '1234', 3, '8,7', NULL),
(442, 2, 1, '1234', 1, '17,18,19', NULL),
(443, 2, 1, '1234', 2, '12,13', NULL),
(444, 2, 1, '1234', 3, '7,8', NULL),
(445, 2, 1, '1234', 1, '17,18,19', NULL),
(446, 2, 1, '1234', 2, '12,13', NULL),
(447, 2, 1, '1234', 3, '7,8', NULL),
(448, 2, 1, '1234', 1, '17,19,18', NULL),
(449, 2, 1, '1234', 2, '12,13', NULL),
(450, 2, 1, '1234', 3, '7,8', NULL),
(451, 2, 1, '1234', 1, '18,17,19', NULL),
(452, 2, 1, '1234', 2, '13,12', NULL),
(453, 2, 1, '1234', 3, '8,7', NULL),
(454, 2, 1, '1234', 1, '19,17,18', NULL),
(455, 2, 1, '1234', 2, '13,12', NULL),
(456, 2, 1, '1234', 3, '8,7', NULL),
(457, 2, 1, '1234', 1, '19,17,18', NULL),
(458, 2, 1, '1234', 2, '13,12', NULL),
(459, 2, 1, '1234', 3, '8,7', NULL),
(460, 2, 1, '1234', 1, '18,17,19', NULL),
(461, 2, 1, '1234', 2, '13,12', NULL),
(462, 2, 1, '1234', 3, '8,7', NULL),
(463, 2, 1, '1234', 1, '17,19,18', NULL),
(464, 2, 1, '1234', 2, '13,12', NULL),
(465, 2, 1, '1234', 3, '7,8', NULL),
(466, 2, 1, '1234', 1, '17,19,18', NULL),
(467, 2, 1, '1234', 2, '12,13', NULL),
(468, 2, 1, '1234', 3, '8,7', NULL),
(469, 2, 1, '1234', 1, '18,19,17', NULL),
(470, 2, 1, '1234', 2, '12,13', NULL),
(471, 2, 1, '1234', 3, '8,7', NULL),
(472, 2, 1, '1234', 1, '17,18,19', NULL),
(473, 2, 1, '1234', 2, '12,13', NULL),
(474, 2, 1, '1234', 3, '8,7', NULL),
(475, 2, 1, '1234', 1, '18,19,17', NULL),
(476, 2, 1, '1234', 2, '13,12', NULL),
(477, 2, 1, '1234', 3, '8,7', NULL),
(478, 2, 1, '1234', 1, '19,18,17', NULL),
(479, 2, 1, '1234', 2, '13,12', NULL),
(480, 2, 1, '1234', 3, '8,7', NULL),
(481, 2, 1, '1234', 1, '17,19,18', NULL),
(482, 2, 1, '1234', 2, '12,13', NULL),
(483, 2, 1, '1234', 3, '8,7', NULL),
(484, 2, 1, '1234', 1, '19,17,18', NULL),
(485, 2, 1, '1234', 2, '12,13', NULL),
(486, 2, 1, '1234', 3, '7,8', NULL),
(487, 2, 1, '1234', 1, '18,19,17', NULL),
(488, 2, 1, '1234', 2, '13,12', NULL),
(489, 2, 1, '1234', 3, '7,8', NULL),
(490, 2, 1, '1234', 1, '17,18,19', NULL),
(491, 2, 1, '1234', 2, '12,13', NULL),
(492, 2, 1, '1234', 3, '8,7', NULL),
(493, 2, 1, '1234', 1, '18,19,17', NULL),
(494, 2, 1, '1234', 2, '12,13', NULL),
(495, 2, 1, '1234', 3, '7,8', NULL),
(496, 2, 1, '1234', 1, '17,18,19', NULL),
(497, 2, 1, '1234', 2, '13,12', NULL),
(498, 2, 1, '1234', 3, '8,7', NULL),
(499, 2, 1, '1234', 1, '17,19,18', NULL),
(500, 2, 1, '1234', 2, '12,13', NULL),
(501, 2, 1, '1234', 3, '8,7', NULL),
(502, 2, 1, '1234', 1, '18,19,17', NULL),
(503, 2, 1, '1234', 2, '12,13', NULL),
(504, 2, 1, '1234', 3, '7,8', NULL),
(505, 2, 1, '1234', 1, '18,17,19', NULL),
(506, 2, 1, '1234', 2, '13,12', NULL),
(507, 2, 1, '1234', 3, '8,7', NULL),
(508, 2, 2, 'xW*a5', 1, '18,17', NULL),
(509, 2, 2, 'xW*a5', 2, '12,13', NULL),
(510, 2, 2, 'xW*a5', 3, '7,8', NULL),
(511, 2, 2, 'xW*a5', 1, '17,18', NULL),
(512, 2, 2, 'xW*a5', 2, '13,12', NULL),
(513, 2, 2, 'xW*a5', 3, '8,7', NULL),
(514, 2, 1, '1234', 1, '17,19,18', NULL),
(515, 2, 1, '1234', 2, '12,13', NULL),
(516, 2, 1, '1234', 3, '8,7', NULL),
(517, 2, 1, '1234', 1, '18,19,17', NULL),
(518, 2, 1, '1234', 2, '13,12', NULL),
(519, 2, 1, '1234', 3, '8,7', NULL),
(520, 2, 2, 'xW*a5', 1, '17,18', NULL),
(521, 2, 2, 'xW*a5', 2, '13,12', NULL),
(522, 2, 2, 'xW*a5', 3, '8,7', NULL),
(523, 2, 1, '1234', 1, '17,18,19', NULL),
(524, 2, 1, '1234', 2, '13,12', NULL),
(525, 2, 1, '1234', 3, '8,7', NULL),
(526, 2, 1, '1234', 1, '17,18,19', NULL),
(527, 2, 1, '1234', 2, '12,13', NULL),
(528, 2, 1, '1234', 3, '7,8', NULL),
(529, 2, 1, '1234', 1, '18,19,17', NULL),
(530, 2, 1, '1234', 2, '12,13', NULL),
(531, 2, 1, '1234', 3, '8,7', NULL),
(532, 2, 117, 'R#mi@', 1, '18,17', NULL),
(533, 2, 117, 'R#mi@', 1, '17,18', NULL),
(534, 2, 117, 'R#mi@', 1, '18,17', NULL),
(535, 2, 117, 'R#mi@', 1, '17,18', NULL),
(536, 2, 117, 'R#mi@', 1, '18,17', NULL),
(537, 2, 117, 'R#mi@', 1, '18,17', NULL),
(538, 2, 117, 'R#mi@', 1, '17,18', NULL),
(539, 2, 117, 'R#mi@', 1, '17,18', NULL),
(540, 2, 1, '1234', 1, '19,18,17', NULL),
(541, 2, 1, '1234', 1, '19,18,17', NULL),
(542, 2, 1, '1234', 1, '19,18,17', NULL),
(543, 2, 1, '1234', 1, '17,19,18', NULL),
(544, 2, 1, '1234', 1, '17,19,18', NULL),
(545, 2, 1, '1234', 1, '17,19,18', NULL),
(546, 2, 1, '1234', 1, '17,19,18', NULL),
(547, 2, 1, '1234', 1, '17,19,18', NULL),
(548, 2, 1, '1234', 1, '17,19,18', NULL),
(549, 2, 1, '1234', 1, '18,17,19', NULL),
(550, 2, 1, '1234', 1, '18,17,19', NULL),
(551, 2, 1, '1234', 1, '18,17,19', NULL),
(552, 2, 1, '1234', 1, '18,19,17', NULL),
(553, 2, 1, '1234', 1, '18,19,17', NULL),
(554, 2, 1, '1234', 1, '18,19,17', NULL),
(555, 2, 118, 'eju^6', 1, '17,20,18,19', NULL),
(556, 2, 1, '1234', 1, '17,19,18', NULL),
(557, 2, 1, '1234', 1, '17,19,18', NULL),
(558, 2, 1, '1234', 1, '17,19,18', NULL),
(559, 2, 1, '1234', 1, '17,18,19', NULL),
(560, 2, 1, '1234', 1, '17,18,19', NULL),
(561, 2, 1, '1234', 1, '17,18,19', NULL),
(562, 2, 1, '1234', 1, '19,17,18', NULL),
(563, 2, 1, '1234', 1, '19,17,18', NULL),
(564, 2, 1, '1234', 1, '19,17,18', NULL),
(565, 2, 1, '1234', 1, '17,19,18', NULL),
(566, 2, 1, '1234', 1, '17,19,18', NULL),
(567, 2, 1, '1234', 1, '17,19,18', NULL),
(568, 2, 1, '1234', 1, '18,19,17', NULL),
(569, 2, 1, '1234', 1, '18,19,17', NULL),
(570, 2, 1, '1234', 1, '18,19,17', NULL),
(571, 2, 1, '1234', 1, '17,19,18', NULL),
(572, 2, 1, '1234', 1, '17,19,18', NULL),
(573, 2, 1, '1234', 1, '17,19,18', NULL),
(576, 2, 123, 'voYOs', 3, '7,8', NULL),
(577, 2, 123, 'voYOs', 2, '12,13', NULL),
(578, 2, 123, 'voYOs', 3, '8,7', NULL),
(579, 2, 123, 'voYOs', 2, '13,12', NULL),
(580, 2, 1, '1234', 1, '19,18,17', NULL),
(581, 2, 1, '1234', 2, '13,12', NULL),
(582, 2, 1, '1234', 3, '8,7', NULL),
(583, 2, 1, '1234', 1, '17,19,18', NULL),
(584, 2, 1, '1234', 2, '12,13', NULL),
(585, 2, 1, '1234', 3, '7,8', NULL),
(586, 2, 1, '1234', 1, '17,19,18', NULL),
(587, 2, 1, '1234', 2, '13,12', NULL),
(588, 2, 1, '1234', 3, '7,8', NULL),
(589, 2, 1, '1234', 1, '19,17,18', NULL),
(590, 2, 1, '1234', 2, '13,12', NULL),
(591, 2, 1, '1234', 3, '7,8', NULL),
(592, 2, 1, '1234', 1, '17,19,18', NULL),
(593, 2, 1, '1234', 2, '12,13', NULL),
(594, 2, 1, '1234', 3, '8,7', NULL),
(595, 2, 1, '1234', 1, '17,18,19', NULL),
(596, 2, 1, '1234', 2, '12,13', NULL),
(597, 2, 1, '1234', 3, '8,7', NULL),
(598, 2, 1, '1234', 1, '19,18,17', NULL),
(599, 2, 1, '1234', 2, '13,12', NULL),
(600, 2, 1, '1234', 3, '8,7', NULL),
(601, 2, 123, 'voYOs', 3, '7,8', NULL),
(602, 2, 123, 'voYOs', 2, '13,12', NULL),
(603, 2, 123, 'voYOs', 3, '7,8', NULL),
(604, 2, 123, 'voYOs', 2, '13,12', NULL),
(605, 2, 123, 'voYOs', 3, '7,8', NULL),
(606, 2, 123, 'voYOs', 2, '12,13', NULL),
(607, 2, 123, 'voYOs', 3, '8,7', NULL),
(608, 2, 123, 'voYOs', 2, '13,12', NULL),
(609, 2, 124, 'TY*bQ', 1, '18,17', NULL),
(610, 2, 124, 'TY*bQ', 1, '18,17', NULL),
(611, 2, 124, 'TY*bQ', 1, '18,17', NULL),
(612, 2, 124, 'TY*bQ', 1, '17,18', NULL),
(613, 2, 124, 'TY*bQ', 1, '18,17', NULL),
(614, 2, 124, 'TY*bQ', 1, '18,17', NULL),
(615, 2, 124, 'TY*bQ', 1, '18,17', NULL),
(616, 2, 125, 'B6tx!', 3, '7,8', NULL),
(617, 2, 126, '3q9#Y', 2, '13,12', NULL),
(618, 2, 126, '3q9#Y', 1, '18,17', NULL),
(619, 2, 126, '3q9#Y', 2, '12,13', NULL),
(620, 2, 126, '3q9#Y', 1, '17,18', NULL),
(621, 2, 126, '3q9#Y', 2, '13,12', NULL),
(622, 2, 126, '3q9#Y', 1, '17,18', NULL),
(623, 2, 126, '3q9#Y', 2, '13,12', NULL),
(624, 2, 126, '3q9#Y', 1, '17,18', NULL),
(625, 2, 126, '3q9#Y', 2, '13,12', NULL),
(626, 2, 126, '3q9#Y', 1, '18,17', NULL),
(627, NULL, 1, '1234', 1, '18,19,17', NULL),
(628, NULL, 1, '1234', 2, '12,13', NULL),
(629, NULL, 1, '1234', 3, '8,7', NULL),
(630, NULL, 1, '1234', 1, '19,17,18', NULL),
(631, NULL, 1, '1234', 2, '12,13', NULL),
(632, NULL, 1, '1234', 3, '7,8', NULL),
(633, NULL, 1, '1234', 1, '18,17,19', NULL),
(634, NULL, 1, '1234', 2, '13,12', NULL),
(635, NULL, 1, '1234', 3, '7,8', NULL),
(636, 2, 128, 'GFpnq', 10, '220,216,219,213,221,214,215,218,212,217', NULL),
(637, 2, 128, 'GFpnq', 9, '159,157,156,152,154,153,158,155,161,160', NULL),
(638, 2, 128, 'GFpnq', 8, '137,136,139,131,134,135,132,133,138,140', NULL),
(639, 2, 128, 'GFpnq', 10, '214,218,220,217,213,215,219,216,212,221', NULL),
(640, 2, 128, 'GFpnq', 9, '161,152,160,156,157,155,158,159,154,153', NULL),
(641, 2, 128, 'GFpnq', 8, '134,136,137,132,138,133,139,135,131,140', NULL),
(642, 2, 128, 'GFpnq', 10, '215,212,217,216,220,221,214,218,213,219', NULL),
(643, 2, 128, 'GFpnq', 9, '160,153,161,156,154,158,152,159,155,157', NULL),
(644, 2, 128, 'GFpnq', 8, '136,139,131,137,133,138,132,140,135,134', NULL),
(645, 2, 128, 'GFpnq', 10, '218,213,214,219,221,220,216,212,215,217', NULL),
(646, 2, 128, 'GFpnq', 9, '158,154,157,152,153,161,156,160,155,159', NULL),
(647, 2, 128, 'GFpnq', 8, '140,131,137,136,139,132,134,135,133,138', NULL),
(648, 2, 128, 'GFpnq', 10, '214,212,221,217,216,213,220,215,218,219', NULL),
(649, 2, 128, 'GFpnq', 9, '158,155,161,157,160,154,152,153,156,159', NULL),
(650, 2, 128, 'GFpnq', 8, '133,139,136,131,132,137,140,138,135,134', NULL),
(651, 2, 128, 'Gfpnq', 10, '213,218,215,214,212,217,219,221,216,220', NULL),
(652, 2, 128, 'Gfpnq', 9, '159,154,160,157,158,155,156,161,153,152', NULL),
(653, 2, 128, 'Gfpnq', 8, '138,137,139,140,131,133,132,135,134,136', NULL),
(654, 2, 128, 'Gfpnq', 10, '218,219,214,212,216,217,221,220,215,213', NULL),
(655, 2, 128, 'Gfpnq', 9, '152,155,153,154,159,158,160,161,157,156', NULL),
(656, 2, 128, 'Gfpnq', 8, '135,132,133,137,131,140,134,139,138,136', NULL),
(657, 2, 128, 'Gfpnq', 10, '215,217,214,220,216,213,221,219,218,212', NULL),
(658, 2, 128, 'Gfpnq', 9, '160,155,158,156,152,153,157,159,161,154', NULL),
(659, 2, 128, 'Gfpnq', 8, '135,140,132,136,134,131,133,139,137,138', NULL),
(660, 2, 128, 'Gfpnq', 10, '217,216,219,218,215,212,214,221,220,213', NULL),
(661, 2, 128, 'Gfpnq', 9, '155,152,157,159,156,161,158,160,153,154', NULL),
(662, 2, 128, 'Gfpnq', 8, '135,140,131,134,137,133,138,132,136,139', NULL),
(663, 2, 128, 'Gfpnq', 10, '214,217,215,212,221,220,218,216,213,219', NULL),
(664, 2, 128, 'Gfpnq', 9, '152,159,158,156,157,161,154,160,155,153', NULL),
(665, 2, 128, 'Gfpnq', 8, '133,140,135,132,134,138,131,136,139,137', NULL),
(666, 2, 128, 'GFpnq', 10, '216,220,217,221,215,219,212,218,214,213', NULL),
(667, 2, 128, 'GFpnq', 9, '157,152,155,158,156,154,159,160,161,153', NULL),
(668, 2, 128, 'GFpnq', 8, '140,137,133,135,131,132,138,136,139,134', NULL),
(669, 2, 128, 'Gfpnq', 10, '213,219,216,220,218,217,214,215,212,221', NULL),
(670, 2, 128, 'Gfpnq', 9, '152,155,153,159,158,154,161,160,156,157', NULL),
(671, 2, 128, 'Gfpnq', 8, '138,134,140,137,131,136,139,132,133,135', NULL),
(672, 2, 128, 'GFpnq', 10, '216,219,212,213,218,221,220,217,215,214', NULL),
(673, 2, 128, 'GFpnq', 9, '161,155,158,156,154,160,157,152,153,159', NULL),
(674, 2, 128, 'GFpnq', 8, '138,136,132,135,137,139,140,134,133,131', NULL),
(675, 2, 132, 'v*T69', 10, '213,219,215,214,220,217,216,221,218,212', NULL),
(676, 2, 132, 'v*T69', 9, '153,161,160,159,152,156,154,155,157,158', NULL),
(677, 2, 132, 'v*T69', 10, '216,212,221,217,220,213,214,219,215,218', NULL),
(678, 2, 132, 'v*T69', 9, '156,153,157,161,158,159,160,152,154,155', NULL),
(679, 2, 132, 'v*T69', 10, '212,217,213,215,220,218,214,219,216,221', NULL),
(680, 2, 132, 'v*T69', 9, '152,154,159,153,160,157,158,155,156,161', NULL),
(681, 2, 132, 'v*T69', 10, '214,221,217,218,215,212,220,219,213,216', NULL),
(682, 2, 132, 'v*T69', 9, '152,154,160,161,156,158,155,153,157,159', NULL),
(683, 2, 132, 'v*T69', 10, '219,220,215,221,212,214,216,218,217,213', NULL),
(684, 2, 132, 'v*T69', 9, '152,157,160,153,156,154,155,158,159,161', NULL),
(685, 2, 136, 'wy3!h', 10, '219,220,218,216,213,221,212,215,214,217', NULL),
(686, 2, 136, 'wy3!h', 9, '153,157,152,159,154,158,155,160,161,156', NULL),
(687, 2, 136, 'wy3!h', 10, '217,220,212,218,219,221,214,215,213,216', NULL),
(688, 2, 136, 'wy3!h', 9, '161,153,155,160,157,159,156,158,154,152', NULL),
(689, 2, 128, 'gfpnq', 10, '215,216,212,220,221,217,218,214,213,219', NULL),
(690, 2, 128, 'gfpnq', 9, '155,153,157,154,159,152,160,158,161,156', NULL),
(691, 2, 128, 'gfpnq', 8, '135,138,132,131,133,140,137,134,136,139', NULL),
(692, 2, 128, 'gfpnq', 10, '219,221,215,217,218,216,214,220,212,213', NULL),
(693, 2, 128, 'gfpnq', 9, '161,160,152,153,156,158,154,155,159,157', NULL),
(694, 2, 128, 'gfpnq', 8, '131,138,132,136,133,135,140,137,139,134', NULL),
(695, 2, 128, 'gfpnq', 10, '212,213,217,218,215,219,214,221,216,220', NULL),
(696, 2, 128, 'gfpnq', 9, '153,155,157,158,154,156,161,152,159,160', NULL),
(697, 2, 128, 'gfpnq', 8, '131,134,133,136,137,138,140,132,135,139', NULL),
(698, 2, 128, 'gfpnq', 10, '212,214,215,220,213,219,221,217,218,216', NULL),
(699, 2, 128, 'gfpnq', 9, '161,156,152,154,158,159,155,153,157,160', NULL),
(700, 2, 128, 'gfpnq', 8, '134,138,133,139,131,140,137,136,132,135', NULL),
(701, 2, 128, 'gfpnq', 10, '216,221,215,219,213,212,214,220,217,218', NULL),
(702, 2, 128, 'gfpnq', 9, '154,159,155,157,153,156,161,160,158,152', NULL),
(703, 2, 128, 'gfpnq', 8, '131,133,139,135,138,134,137,132,140,136', NULL),
(704, 2, 128, 'gfpnq', 10, '217,221,216,213,215,214,212,219,220,218', NULL),
(705, 2, 128, 'gfpnq', 9, '161,157,152,155,159,153,154,156,160,158', NULL),
(706, 2, 128, 'gfpnq', 8, '133,132,138,140,135,137,139,136,134,131', NULL),
(707, 2, 128, 'gfpnq', 10, '220,221,216,219,217,218,213,212,215,214', NULL),
(708, 2, 128, 'gfpnq', 9, '158,155,152,156,159,157,153,160,154,161', NULL),
(709, 2, 128, 'gfpnq', 8, '133,134,138,137,139,135,131,136,140,132', NULL),
(710, 2, 128, 'gfpnq', 10, '214,216,220,219,221,215,213,212,217,218', NULL),
(711, 2, 128, 'gfpnq', 9, '159,156,155,154,152,157,153,161,160,158', NULL),
(712, 2, 128, 'gfpnq', 8, '140,136,132,139,133,135,131,137,134,138', NULL),
(713, 2, 128, 'gfpnq', 10, '220,221,214,218,215,212,216,213,217,219', NULL),
(714, 2, 128, 'gfpnq', 9, '161,152,160,157,156,155,154,159,158,153', NULL),
(715, 2, 128, 'gfpnq', 8, '132,138,139,137,133,136,131,134,135,140', NULL),
(716, 2, 128, 'gfpnq', 10, '212,214,215,221,216,213,220,218,219,217', NULL),
(717, 2, 128, 'gfpnq', 9, '157,161,156,154,159,158,152,160,155,153', NULL),
(718, 2, 128, 'gfpnq', 8, '137,135,140,136,134,132,131,138,133,139', NULL),
(719, 2, 128, 'gfpnq', 10, '221,213,214,215,217,218,220,219,212,216', NULL),
(720, 2, 128, 'gfpnq', 9, '157,156,155,159,152,153,160,161,154,158', NULL),
(721, 2, 128, 'gfpnq', 8, '132,137,134,131,135,136,140,139,138,133', NULL),
(722, 2, 128, 'gfpnq', 10, '221,216,212,219,217,215,214,218,220,213', NULL),
(723, 2, 128, 'gfpnq', 9, '154,155,161,156,152,153,158,157,160,159', NULL),
(724, 2, 128, 'gfpnq', 8, '131,133,134,132,139,138,140,135,136,137', NULL),
(725, 2, 128, 'gfpnq', 10, '220,213,217,219,212,221,216,215,218,214', NULL),
(726, 2, 128, 'gfpnq', 9, '156,153,158,155,159,154,160,152,157,161', NULL),
(727, 2, 128, 'gfpnq', 8, '136,139,133,132,134,138,140,137,131,135', NULL),
(728, 2, 128, 'gfpnq', 10, '212,215,213,221,220,218,214,217,219,216', NULL),
(729, 2, 128, 'gfpnq', 9, '158,153,156,154,152,161,155,160,157,159', NULL),
(730, 2, 128, 'gfpnq', 8, '134,139,133,136,135,132,138,140,137,131', NULL),
(731, 2, 128, 'gfpnq', 10, '217,221,220,216,218,213,219,215,212,214', NULL),
(732, 2, 128, 'gfpnq', 9, '160,153,161,157,158,154,156,152,155,159', NULL),
(733, 2, 128, 'gfpnq', 8, '132,133,140,131,136,138,135,137,134,139', NULL),
(734, 2, 128, 'gfpnq', 10, '216,218,215,214,213,221,212,220,217,219', NULL),
(735, 2, 128, 'gfpnq', 9, '157,159,160,155,153,158,154,152,161,156', NULL),
(736, 2, 128, 'gfpnq', 8, '131,132,135,134,136,133,139,138,140,137', NULL),
(737, 2, 128, 'gfpnq', 10, '214,217,215,220,219,221,218,212,213,216', NULL),
(738, 2, 128, 'gfpnq', 9, '161,152,153,157,156,158,154,155,160,159', NULL),
(739, 2, 128, 'gfpnq', 8, '136,140,133,134,135,132,137,139,138,131', NULL),
(740, 2, 128, 'gfpnq', 10, '220,216,213,212,217,219,221,215,218,214', NULL),
(741, 2, 128, 'gfpnq', 9, '156,154,155,159,158,161,160,153,152,157', NULL),
(742, 2, 128, 'gfpnq', 8, '137,139,131,133,134,135,138,140,136,132', NULL),
(743, 2, 128, 'gfpnq', 10, '220,212,215,214,216,219,218,217,221,213', NULL),
(744, 2, 128, 'gfpnq', 9, '157,152,158,161,154,155,153,159,156,160', NULL),
(745, 2, 128, 'gfpnq', 8, '133,136,140,134,139,132,137,138,135,131', NULL),
(746, 1017, 128, 'gfpnq', 10, '220,216,214,212,218,213,221,217,219,215', NULL),
(747, 1017, 128, 'gfpnq', 9, '154,152,158,161,156,153,160,159,155,157', NULL),
(748, 1017, 128, 'gfpnq', 8, '137,138,135,133,139,132,136,131,140,134', NULL),
(749, 1017, 128, 'gfpnq', 10, '214,212,221,216,217,215,219,220,213,218', NULL),
(750, 1017, 128, 'gfpnq', 9, '154,161,160,158,155,157,152,159,153,156', NULL),
(751, 1017, 128, 'gfpnq', 8, '138,139,134,132,140,131,135,136,137,133', NULL),
(752, 1011, 128, 'gfpnq', 10, '219,216,215,212,214,217,218,213,221,220', NULL),
(753, 1011, 128, 'gfpnq', 9, '160,161,157,154,158,155,153,152,159,156', NULL),
(754, 1011, 128, 'gfpnq', 8, '140,133,136,137,131,139,134,138,135,132', NULL),
(755, 1011, 128, 'gfpnq', 10, '215,213,219,217,221,220,216,214,218,212', NULL),
(756, 1011, 128, 'gfpnq', 9, '154,159,156,157,153,158,155,161,160,152', NULL),
(757, 1011, 128, 'gfpnq', 8, '133,135,138,139,132,131,134,140,136,137', NULL),
(758, 1011, 128, 'gfpnq', 10, '214,218,219,217,215,216,212,221,213,220', NULL),
(759, 1011, 128, 'gfpnq', 9, '156,152,155,154,158,161,153,160,157,159', NULL),
(760, 1011, 128, 'gfpnq', 8, '139,137,135,140,133,131,132,138,136,134', NULL),
(761, 1011, 128, 'gfpnq', 10, '212,219,221,215,214,217,218,220,213,216', NULL),
(762, 1011, 128, 'gfpnq', 9, '156,161,159,160,153,152,157,155,154,158', NULL),
(763, 1011, 128, 'gfpnq', 8, '140,132,137,139,131,136,134,133,138,135', NULL),
(764, 1011, 128, 'gfpnq', 10, '212,213,220,215,219,216,221,217,218,214', NULL),
(765, 1011, 128, 'gfpnq', 9, '160,156,155,152,153,159,157,158,161,154', NULL),
(766, 1011, 128, 'gfpnq', 8, '139,136,137,135,138,140,133,132,131,134', NULL),
(767, 1011, 128, 'gfpnq', 10, '221,220,215,213,217,218,219,216,214,212', NULL),
(768, 1011, 128, 'gfpnq', 9, '152,161,154,158,155,159,153,160,156,157', NULL),
(769, 1011, 128, 'gfpnq', 8, '132,136,138,131,137,139,135,133,134,140', NULL),
(770, 1011, 128, 'gfpnq', 10, '213,215,220,221,212,217,219,214,216,218', NULL),
(771, 1011, 128, 'gfpnq', 9, '154,155,160,153,159,161,157,152,156,158', NULL),
(772, 1011, 128, 'gfpnq', 8, '139,140,133,137,132,135,138,136,131,134', NULL),
(773, 1011, 128, 'gfpnq', 10, '217,219,220,221,212,216,213,215,214,218', NULL),
(774, 1011, 128, 'gfpnq', 9, '152,159,156,161,160,158,153,154,157,155', NULL),
(775, 1011, 128, 'gfpnq', 8, '136,132,135,139,131,140,133,138,137,134', NULL),
(776, 1011, 128, 'gfpnq', 10, '220,217,218,221,214,213,216,219,215,212', NULL),
(777, 1011, 128, 'gfpnq', 9, '152,155,161,159,153,154,160,158,157,156', NULL),
(778, 1011, 128, 'gfpnq', 8, '137,139,138,131,136,132,140,134,133,135', NULL),
(779, 1011, 128, 'gfpnq', 10, '212,213,219,221,216,214,220,217,218,215', NULL),
(780, 1011, 128, 'gfpnq', 9, '157,160,154,155,161,159,158,156,153,152', NULL),
(781, 1011, 128, 'gfpnq', 8, '140,135,132,133,137,134,136,138,139,131', NULL),
(782, 1011, 128, 'gfpnq', 10, '212,219,221,214,215,218,217,220,213,216', NULL),
(783, 1011, 128, 'gfpnq', 9, '152,160,157,154,155,156,153,159,161,158', NULL),
(784, 1011, 128, 'gfpnq', 8, '140,135,136,134,139,137,138,131,132,133', NULL),
(785, 1011, 128, 'gfpnq', 10, '215,213,214,216,219,218,212,221,217,220', NULL),
(786, 1011, 128, 'gfpnq', 9, '158,152,153,157,156,161,159,154,155,160', NULL),
(787, 1011, 128, 'gfpnq', 8, '137,131,138,132,135,136,133,140,134,139', NULL),
(788, 1011, 128, 'gfpnq', 10, '220,212,213,215,216,217,221,214,218,219', NULL),
(789, 1011, 128, 'gfpnq', 9, '156,161,160,157,158,159,152,153,155,154', NULL),
(790, 1011, 128, 'gfpnq', 8, '140,134,132,137,133,135,131,138,139,136', NULL),
(791, 1011, 128, 'gfpnq', 10, '220,215,217,221,216,218,219,213,212,214', NULL),
(792, 1011, 128, 'gfpnq', 9, '154,157,152,159,160,156,158,153,155,161', NULL),
(793, 1011, 128, 'gfpnq', 8, '131,134,140,133,138,132,136,139,137,135', NULL),
(794, 1011, 128, 'gfpnq', 10, '214,212,218,213,215,216,217,219,221,220', NULL),
(795, 1011, 128, 'gfpnq', 9, '153,154,160,156,152,159,157,161,158,155', NULL),
(796, 1011, 128, 'gfpnq', 8, '131,140,132,133,135,139,136,138,137,134', NULL),
(797, 1011, 1, '1234', 1, '19,17,18', NULL),
(798, 1011, 1, '1234', 2, '13,12', NULL),
(799, 1011, 1, '1234', 3, '8,7', NULL),
(800, 1011, 1, '1234', 1, '18,17,19', NULL),
(801, 1011, 1, '1234', 2, '13,12', NULL),
(802, 1011, 1, '1234', 3, '8,7', NULL),
(803, 1011, 1, '1234', 1, '17,18,19', NULL),
(804, 1011, 1, '1234', 2, '12,13', NULL),
(805, 1011, 1, '1234', 3, '8,7', NULL),
(806, 1011, 1, '1234', 1, '19,17,18', NULL),
(807, 1011, 1, '1234', 2, '12,13', NULL),
(808, 1011, 1, '1234', 3, '8,7', NULL),
(809, 1011, 1, '1234', 1, '18,17,19', NULL),
(810, 1011, 1, '1234', 2, '12,13', NULL),
(811, 1011, 1, '1234', 3, '8,7', NULL),
(812, 1018, 1, '1234', 1, '18,17,19', NULL),
(813, 1018, 1, '1234', 2, '12,13', NULL),
(814, 1018, 1, '1234', 3, '8,7', NULL),
(815, 1011, 128, 'gfpnq', 10, '215,212,216,217,219,213,214,220,218,221', NULL),
(816, 1011, 128, 'gfpnq', 9, '159,152,154,155,153,160,161,156,157,158', NULL),
(817, 1011, 128, 'gfpnq', 8, '132,137,140,135,134,138,136,131,133,139', NULL),
(818, 1020, 1, '1234', 1, '19,17,18', NULL),
(819, 1020, 1, '1234', 2, '13,12', NULL),
(820, 1020, 1, '1234', 3, '8,7', NULL),
(821, 1021, 1, '1234', 1, '18,19,17', NULL),
(822, 1021, 1, '1234', 2, '12,13', NULL),
(823, 1021, 1, '1234', 3, '7,8', NULL),
(824, 1021, 1, '1234', 1, '18,19,17', NULL),
(825, 1021, 1, '1234', 2, '13,12', NULL),
(826, 1021, 1, '1234', 3, '7,8', NULL),
(827, 1011, 1, '1234', 1, '17,19,18', NULL),
(828, 1011, 1, '1234', 2, '13,12', NULL),
(829, 1011, 1, '1234', 3, '8,7', NULL),
(830, 1011, 1, '1234', 1, '18,17,19', NULL),
(831, 1011, 1, '1234', 2, '12,13', NULL),
(832, 1011, 1, '1234', 3, '7,8', NULL),
(833, 1011, 1, '1234', 1, '18,17,19', NULL),
(834, 1011, 1, '1234', 2, '12,13', NULL),
(835, 1011, 1, '1234', 3, '8,7', NULL);

-- --------------------------------------------------------

--
-- Table structure for table `mcq_time`
--

CREATE TABLE `mcq_time` (
  `id` int(11) NOT NULL,
  `mcq_test_id` int(11) NOT NULL,
  `section_id` int(11) NOT NULL,
  `total_question` int(11) DEFAULT NULL,
  `completion_time` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `mcq_time`
--

INSERT INTO `mcq_time` (`id`, `mcq_test_id`, `section_id`, `total_question`, `completion_time`) VALUES
(1, 1, 1, NULL, '10'),
(2, 1, 2, NULL, '120'),
(3, 1, 3, NULL, '120'),
(4, 2, 1, NULL, '20'),
(5, 2, 2, NULL, '20'),
(6, 2, 3, NULL, '20'),
(7, 3, 1, NULL, '30'),
(8, 3, 2, NULL, '30'),
(9, 3, 3, NULL, '30'),
(10, 4, 1, NULL, '20'),
(11, 4, 2, NULL, '20'),
(12, 4, 3, NULL, '20'),
(13, 5, 1, NULL, '20'),
(14, 5, 2, NULL, '20'),
(15, 5, 3, NULL, '20'),
(16, 14, 1, 0, '300'),
(17, 14, 2, NULL, '300'),
(18, 14, 3, NULL, '300'),
(19, 15, 1, 5, '300'),
(20, 15, 2, 5, '300'),
(21, 15, 3, 5, '300'),
(22, 17, 1, 5, '300'),
(23, 17, 2, 5, '300'),
(24, 17, 3, 5, '300'),
(25, 19, 1, 5, '120'),
(26, 19, 2, 5, '120'),
(27, 19, 3, 5, '120'),
(28, 19, 4, 5, '120'),
(29, 21, 1, 5, '120'),
(30, 21, 2, 5, '120'),
(31, 21, 3, 5, '120'),
(32, 21, 4, 5, '120'),
(33, 22, 2, 5, '120'),
(34, 22, 1, 5, '120'),
(35, 23, 1, 2, '120'),
(36, 23, 1, 2, '120'),
(37, 23, 1, 2, '120'),
(38, 23, 1, 2, '120'),
(39, 23, 1, 2, '120'),
(40, 23, 1, 2, '120'),
(41, 27, 1, 4, '120'),
(42, 28, 1, 2, '120'),
(43, 28, 2, 2, '120'),
(44, 28, 3, 2, '120'),
(45, 29, 1, 2, '120'),
(46, 31, 1, 2, '120'),
(47, 31, 2, 2, '120'),
(48, 31, 3, 2, '120'),
(49, 32, 1, 2, '120'),
(50, 32, 2, 2, '120'),
(51, 32, 3, 2, '120'),
(52, 33, 1, 2, '120'),
(53, 33, 2, 2, '120'),
(54, 33, 3, 2, '120'),
(55, 34, 1, 2, '120'),
(56, 34, 2, 2, '120'),
(57, 34, 3, 2, '120'),
(58, 35, 1, 2, '120'),
(59, 35, 2, 2, '120'),
(60, 35, 3, 2, '120'),
(61, 40, 1, 2, '120'),
(62, 40, 2, 2, '120'),
(63, 40, 3, 2, '120'),
(64, 42, 1, 2, '120'),
(65, 42, 2, 2, '120'),
(66, 42, 3, 2, '120'),
(67, 48, 0, 0, ''),
(68, 48, 0, 0, ''),
(69, 48, 0, 0, ''),
(70, 48, 0, 0, ''),
(71, 48, 0, 0, ''),
(72, 48, 0, 0, ''),
(73, 50, 1, 2, '120'),
(74, 50, 2, 2, '60'),
(75, 50, 3, 2, '120'),
(76, 51, 1, 2, '120'),
(77, 51, 2, 2, '120'),
(78, 51, 3, 2, '120'),
(79, 52, 1, 2, '120'),
(80, 52, 2, 2, '120'),
(81, 52, 3, 2, '120'),
(82, 53, 1, 2, '120'),
(83, 53, 2, 2, '120'),
(84, 53, 2, 2, '120'),
(85, 55, 1, 2, '120'),
(86, 55, 2, 2, '120'),
(87, 55, 3, 2, '120'),
(88, 56, 1, 2, '120'),
(89, 56, 2, 2, '120'),
(90, 56, 3, 2, '120'),
(91, 57, 1, 2, '120'),
(92, 57, 2, 2, '120'),
(93, 57, 3, 2, '120'),
(94, 58, 1, 0, ''),
(95, 58, 2, 0, ''),
(96, 58, 3, 0, ''),
(97, 59, 1, 5, '120'),
(98, 59, 2, 5, '120'),
(99, 59, 3, 5, '120'),
(100, 60, 1, 5, '120'),
(101, 60, 2, 5, '120'),
(102, 60, 3, 5, '120'),
(103, 117, 1, 0, '300'),
(104, 118, 1, 4, '4'),
(105, 118, 1, 4, '4'),
(106, 119, 3, 5, ''),
(107, 119, 3, 5, ''),
(108, 119, 3, 5, ''),
(109, 120, 3, 5, ''),
(110, 121, 1, 9, '2'),
(111, 123, 3, 5, '110'),
(112, 123, 2, 5, '110'),
(113, 124, 1, 9, '10'),
(114, 125, 3, 5, '2'),
(115, 126, 2, 2, '10'),
(116, 126, 1, 2, '10'),
(117, 128, 10, 24, '600'),
(118, 128, 9, 60, '600'),
(119, 128, 8, 21, '600'),
(120, 130, 10, 24, '15'),
(121, 130, 9, 60, '10'),
(122, 131, 1, 9, '600'),
(123, 131, 8, 21, '600'),
(124, 136, 10, 24, '600'),
(125, 136, 9, 60, '600');

-- --------------------------------------------------------

--
-- Table structure for table `question_bank`
--

CREATE TABLE `question_bank` (
  `id` int(11) NOT NULL,
  `section_id` int(11) DEFAULT NULL,
  `sub_section_id` int(11) DEFAULT NULL,
  `level_id` int(11) DEFAULT NULL,
  `question` text NOT NULL,
  `question_image` text,
  `question_type` int(11) NOT NULL DEFAULT '1'
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `question_bank`
--

INSERT INTO `question_bank` (`id`, `section_id`, `sub_section_id`, `level_id`, `question`, `question_image`, `question_type`) VALUES
(7, 3, 20, 1, '<p>If one-third of one-fourth of a number is 15, then three-tenth of that number is:</p>', NULL, 1),
(8, 3, 20, 1, 'In 100 m race, A covers the distance in 36 seconds and B in 45 seconds. In this race A beats B by:', NULL, 1),
(9, 3, 20, 1, 'if in a game of 80, P can give 16 points to Q and R can give 20 points to P, then in a game of 150, how many points can R give to Q?', NULL, 1),
(10, 3, 20, 1, 'The sum of ages of 5 children born at the intervals of 3 years each is 50 years. What is the age of the youngest child?', NULL, 1),
(11, 3, 20, 1, 'Find the odd man out. 1, 3, 9, 12, 19, 29', NULL, 1),
(12, 2, 12, 1, 'In each question below, there is a sentence of which some parts have been jumbled up. Rearrange these parts which are labelled P, Q, R and S to produce the correct sentence. Choose the proper sequence. When he P : did not know Q : he was nervous and R : heard the hue and cry at midnight S : what to do The Proper sequence should be:', NULL, 1),
(13, 2, 12, 1, 'In each question below, there is a sentence of which some parts have been jumbled up. Rearrange these parts which are labelled P, Q, R and S to produce the correct sentence. Choose the proper sequence.  It has been established that P : Einstein was Q : although a great scientist R : weak in arithmetic S : right from his school days The Proper sequence should be:', NULL, 1),
(14, 2, 12, 1, 'In each question below, there is a sentence of which some parts have been jumbled up. Rearrange these parts which are labelled P, Q, R and S to produce the correct sentence. Choose the proper sequence.  Then P : it struck me Q : of course R : suitable it was S : how eminently The Proper sequence should be:', NULL, 1),
(15, 2, 12, 1, 'In each question below, there is a sentence of which some parts have been jumbled up. Rearrange these parts which are labelled P, Q, R and S to produce the correct sentence. Choose the proper sequence.    I read an advertisement that said P : posh, air-conditioned Q : gentleman of taste R : are available for S : fully furnished rooms The Proper sequence should be:', NULL, 1),
(16, 2, 12, 1, 'In each question below, there is a sentence of which some parts have been jumbled up. Rearrange these parts which are labelled P, Q, R and S to produce the correct sentence. Choose the proper sequence.  Since the beginning of history P : have managed to catch Q : the Eskimos and Red Indians R : by a very difficulty method S : a few specimens of this aquatic animal The Proper sequence should be:', NULL, 1),
(17, 1, 8, 1, 'Antonym of Foremost', NULL, 1),
(18, 1, 8, 1, 'Antonym of Protects', NULL, 1),
(19, 1, 8, 1, 'Antonym of Beautiful', NULL, 1),
(20, 1, 8, 1, 'Synonym of Fostering', NULL, 1),
(21, 1, 8, 2, '<p>Synonym of Propel</p>', NULL, 1),
(22, 1, 1, 1, '<p>a</p>', NULL, 1),
(23, 1, 1, 1, '<p>a</p>\r\n<p>a</p>', 'question-images/1.jpg', 1),
(24, 1, 1, 1, '<p>a</p>\r\n<p>a</p>', 'question-images/1.jpg', 1),
(25, 1, 1, 1, '<p>\'a,e,i,o,u\' is vowels</p>', NULL, 3),
(131, 8, 39, 1, 'In an acoustics class, 120 students are male and 100 students are female. 25% of the male students and 20% of the female students are engineering students.20% of the male engineering students and 25% of the female engineering students passed the final exam.\nWhat percentage of engineering students passed the exam?', NULL, 1),
(132, 8, 39, 1, '8 is 4% of?aa, and 4 is 8% of?bb.?cc?equals?b/ab/a. What is the value of?cc?', NULL, 1),
(133, 8, 39, 1, 'In what ratio must rice at Rs 9.30 per Kg be mixed with rice at Rs 10.80 per Kg so that the mixture be worth Rs 10 per Kg?', NULL, 1),
(134, 8, 39, 1, 'If we write down all the natural numbers from 259 to 492 side by side get a very large natural number?259260261....491492259260261....491492.\nHow many 8\"s will be used to write this large natural number?', NULL, 1),
(135, 8, 39, 1, 'How many combinations of students are possible if the group is to consist of an equal number of freshmen, sophomores, and juniors?', NULL, 1),
(136, 8, 39, 1, 'Two brother?XX?and?YY?appeared for an exam. Let?AA?be the event that?XX?is selected and?BB?is the event that?YY?is selected.\nThe probability of?AA?is?1717?and that of?BB?is?2929. Find the probability that both of them are selected.', NULL, 1),
(137, 8, 39, 1, 'Two numbers are respectively?20%20%?and?50%50%?more than a third number. The ratio of the two numbers is:', NULL, 1),
(138, 8, 39, 1, 'Two trains starting at the same time from 2 stations 200 km apart and going in opposite direction cross each other at a distance of 110 km from one of the stations. What is the ratio of their speeds?', NULL, 1),
(139, 8, 39, 1, 'A cone and a hemisphere have equal bases and equal volumes. Find the ratio of their heights.', NULL, 1),
(140, 8, 39, 1, 'The sequences?x1,x2.....x1,x2.....?and?y1,y2.....y1,y2.....are in arithmetic progressions such that?x1+y1=100x1+y1=100?and?x22?x21=y99?y100x22?x21=y99?y100?.?Find the sum of the first 100 terms of the progression,?(x1+y1),(x2+y2).....(x1+y1),(x2+y2).....', NULL, 1),
(141, 8, 39, 1, 'How many kilograms of sugar costing Rs. 9 per kg must be mixed with 27kg of sugar costing Rs.7 per kg so that there may be gain of 10% by selling the mixture at Rs.9.24 per kg?', NULL, 1),
(142, 8, 39, 1, 'When a student weighing 45 kgs left a class, the average weight of the remaining 59 students increased by 200 g. What is the average weight of the remaining 59 students?', NULL, 1),
(143, 8, 39, 1, 'What is the minimum number of square marbles required to tile a floor of length 5 metres 78 cm and width 3 metres 74 cm?', NULL, 1),
(144, 8, 39, 1, 'A vendor sells 60 percent of apples he had and throws away 15 percent of the remainder. Next day he sells 50 percent of the remainder and throws away the rest.\nWhat percent of his apples does the vendor throw?', NULL, 1),
(145, 8, 39, 1, 'In how many ways can?55?different toys be packed in?33?identical boxes such that no box is empty, if any of the boxes may hold all of the toys?', NULL, 1),
(146, 8, 39, 1, 'A bag contains 3 white balls and 2 black balls. Another bag contains 2 white and 4 black balls. A bag and a ball are picked random. The probability that the ball will be white is:', NULL, 1),
(147, 8, 39, 1, 'If 20 men or 24 women or 40 boys can do a job in 12 days working for 8 hours a day, how many men working with 6 women and 2 boys take to do a job four times as big working for 5 hours a day for 12 days?', NULL, 1),
(148, 8, 39, 1, 'If the wheel of a bicycle makes 560 revolutions in travelling 1.1 km, what is its radius?', NULL, 1),
(149, 8, 39, 1, 'In a cricket match, Team?AA?scored 232 runs without losing a wicket. The score consisted of byes, wides and runs scored by two opening batsmen: Ram and Shyam. The runs scored by the two batsmen are 26 times wides. There are 8 more byes than wides. If the ratio of the runs scored by Ram and Shyam is?6:76:7, then the runs scored by Ram is:', NULL, 1),
(150, 8, 39, 1, 'A shepherd has 1 million sheep at the beginning of Year ?2000. The numbers grow by?xx?during the year. A famine hits his village in the next year and many of his sheep die. The sheep population decreases by?yy?during 2001 and at the beginning of 2002 the shepherd finds that he is left with 1 million sheep. Which of the following is correct?', NULL, 1),
(151, 8, 39, 1, 'Twenty six men -?1,2,3,....25?and?26?participate in 10km running race on a circular track of length 100m. All of them start at the same time, from the same point and run in the same direction. Their speeds, taken in the order, are in increasing?APAP. The time taken by 26 to meet 1, for the first time after they start is 20 sec and the time taken by 13 to complete the race is 52 minutes and 5 seconds. Find the time taken (in seconds), for all the twenty six men to meet for the first time at the starting point.', NULL, 1),
(152, 9, 38, 1, 'What is garbage collection in the context of Java?', NULL, 1),
(153, 9, 38, 1, '?Which of these field declarations are legal within the body of an interface?', NULL, 1),
(154, 9, 38, 1, 'public class Increment {\n public static void main(String args[]) {\n  int g = 3;\n  System.out.print(++g * 8);\n }\n}\nWhat will be the output of the above code?', NULL, 1),
(155, 9, 38, 1, 'public class Test {\n public static void main(String args[]) {\n  int arr[] = new int[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 };\n  int n = 6;\n  n = arr[arr[n] / 2];\n  System.out.println(arr[n] / 2);\n\n }\n}\nWhat will be the output of the above code?', NULL, 1),
(156, 9, 38, 1, 'public class Test {\n public static void main(String args[]) {\n  int arr [] = new int[10];\n  for (int i = 0; i < 10; ++i) {\n   arr[i] = i;\n   System.out.print(arr[i] + \" \");\n   i++;\n  }\n }\n}\nWhat will be the output of the above code?', NULL, 1),
(157, 9, 38, 1, 'public class Test {\n public static void main(String args[]) {\n  StringBuffer sbf = new StringBuffer(\"Hello\");\n  sbf.replace(1, 3, \"Java\");\n  System.out.println(sbf);\n }\n}\nWhat will be the output of the above code?', NULL, 1),
(158, 9, 38, 1, 'Which of these method of class String is used to obtain length of String object?', NULL, 1),
(159, 9, 38, 1, 'Which of the following class/es is/are related to all the exceptions, that can used to catch all exceptions in catch block?', NULL, 1),
(160, 9, 38, 1, 'The process of defining a method in a subclass having same method signature as a method present in its superclass is called as :', NULL, 1),
(161, 9, 38, 1, 'Which of these keywords can be used to prevent a method from being overriden?', NULL, 1),
(162, 9, 38, 1, 'Which of these is correct way of calling a constructor having no parameters, of superclass A by a subclass B?', NULL, 1),
(163, 9, 38, 1, 'Which of these class relies upon its subclasses to complete implementation of its methods?', NULL, 1),
(164, 9, 38, 1, 'Method signature consists of', NULL, 1),
(165, 9, 38, 1, 'public class Test {\n public static void main(String args[]) {\n  sum(10);\n  sum(10, 20, 30, 40);\n  sum(10, 20);\n  sum();\n\n }\n\n public static int sum(int... x) {\n  return 10;\n }\n}\nIn the above code, which call to sum() method is appropriate?', NULL, 1),
(166, 9, 38, 1, 'public class Test {\n public static void main(String args[]) {\n  Equality obj = new Equality();\n  obj.x = 5;\n  obj.y = 5;\n  System.out.println(obj.isEqual());\n }\n}\n\nclass Equality {\n int x;\n int y;\n\n boolean isEqual() {\n  return (x == y);\n }\n}\nWhat is the output of above program?', NULL, 1),
(167, 9, 38, 1, 'Which among the following is not a necessary condition for constructors?', NULL, 1),
(168, 9, 38, 1, 'Which problem may arise if we use abstract class functions for polymorphism?', NULL, 1),
(169, 9, 38, 1, 'Which among the following best describes encapsulation?', NULL, 1),
(170, 9, 38, 1, 'If data members are private, what can we do to access them from the class object?', NULL, 1),
(171, 9, 38, 1, 'Encapsulation and abstraction differ as:', NULL, 1),
(172, 9, 38, 1, 'Multilevel inheritance allows _________________ in the program.', NULL, 1),
(173, 9, 38, 1, 'Which among the following is not a method of Throwable class?', NULL, 1),
(174, 9, 38, 1, 'Which of these method can be used to make the main thread to be executed last among all the threads?', NULL, 1),
(175, 9, 38, 1, 'Which of these method is used to find out that a thread is still running or not?', NULL, 1),
(176, 9, 38, 1, 'Which of these method waits for the thread to treminate?', NULL, 1),
(177, 9, 38, 1, 'Which of these statement is incorrect?', NULL, 1),
(178, 9, 38, 1, 'What is multithreaded programming?', NULL, 1),
(179, 9, 38, 1, 'Which of these methods deletes all the elements from invoking collection?', NULL, 1),
(180, 9, 38, 1, 'What is Collection in Java?', NULL, 1),
(181, 9, 38, 1, 'Which of these interface must contain a unique element?', NULL, 1),
(182, 9, 38, 1, 'public class Boxer1 \n{\n    Integer i;\n    int x;\n   public Boxer1(int y) \n   {\n        x = i+y;\n        System.out.println(x);\n   }\n   public static void main(String[] args) \n   {\n       new Boxer1 (new Integer(4));\n   }\n}', NULL, 1),
(183, 9, 38, 1, 'Which of these methods is used to compare a specific region inside a string with another specific region in another string?', NULL, 1),
(184, 9, 38, 1, 'Which of these class is used to create an object whose character sequence is mutable?', NULL, 1),
(185, 9, 38, 1, 'Which of these method wakes up all the threads?', NULL, 1),
(186, 9, 38, 1, 'Which of the following is used for implementing inheritance through class?', NULL, 1),
(187, 9, 38, 1, 'public class Test {\n public static void main(String args[]) {\n  int a = 1;\n  int b = 2;\n  int c;\n  int d;\n  c = ++b;\n  d = a++;\n  c++;\n  b++;\n  ++a;\n  System.out.println(a + \" \" + b + \" \" + c + \" \"+ d);\n }\n}\nWhat will be the output of the above code?', NULL, 1),
(188, 9, 38, 1, 'Which one of the following is a valid declaration of a boolean?', NULL, 1),
(189, 9, 38, 1, 'public class Test {\n private static int[] x = new int[0];\n\n public static void main(String[] args) {\n  System.out.println(x[0]);\n }\n}\nWhat will be the output of the above code?', NULL, 1),
(190, 9, 38, 1, 'The wrapping up of data and functions into a single unit is called', NULL, 1),
(191, 9, 38, 1, 'In Java byte, int, short and long all of these are ', NULL, 1),
(192, 9, 38, 1, 'Implicit type casting in Java takes place when', NULL, 1),
(193, 9, 38, 1, 'public class Test {\n\n static void test(float x) {\n  System.out.println(\"float\");\n }\n\n static void test(double x) {\n  System.out.println(\"double\");\n }\n\n public static void main(String[] args) {\n  test(99.9);\n }\n}\nWhat is the output of the above code', NULL, 1),
(194, 9, 38, 1, 'public class Test {\n\n public static void main(String[] args) {\n  int i = 010;\n  int j = 07;\n  \n  System.out.println(i);\n  System.out.println(j);\n }\n}\nWhat is the output of the above code', NULL, 1),
(195, 9, 38, 1, 'public class Test {\n\n public static void main(String[] args) {\n  int i = 0, y = 0, z = 0;\n  \n  i = (++i + y--) * z++;\n  \n  System.out.println(i);\n }\n}\nWhat is the output of the above code', NULL, 1),
(196, 9, 38, 1, 'Which of the following is valid?', NULL, 1),
(197, 9, 38, 1, 'public class Test {\n\n public static void main(String[] args) {\n  int[] i = {120,200,016,021};\n  for(int j=0;j<i.length;j++) {\n   System.out.println(i[j]+\" \");\n  }\n  \n  \n }\n}\nWhat is the output of the above code', NULL, 1),
(198, 9, 38, 1, 'Which of these constructors is used to create an empty String object?', NULL, 1),
(199, 9, 38, 1, 'What is it called if an object has its own lifecycle and there is no owner?', NULL, 1),
(200, 9, 38, 1, 'Thread priority in Java is?', NULL, 1),
(201, 9, 38, 1, 'Which of these can be used to get the Object from Set', NULL, 1),
(202, 9, 38, 1, 'What is the out put\n\nclass TestA {\n\n     public static void main(String[] args) {\n\n          System.out.println(6++);\n\n     }\n\n}', NULL, 1),
(203, 9, 38, 1, 'What is the output\nclass TestA {\n\n     public static void main(String[] args) {        \n          int a = 5;\n          int b = 4;\n          System.out.println(\"Prod is \"+a*b);\n     }\n\n}', NULL, 1),
(204, 9, 38, 1, 'Which is not Object class method', NULL, 1),
(205, 9, 38, 1, 'Which methods we need to override to compare custom objects', NULL, 1),
(206, 9, 38, 1, 'In which package does Object class is present', NULL, 1),
(207, 9, 38, 1, 'Which statement is wrong', NULL, 1),
(208, 9, 38, 1, 'What is the out put\nclass TestA {\n     public static void main(String[] args) {\n          String a = \"priya\";\n          String b = \"priya\";\n       System.out.println(a==b);\n     }\n}', NULL, 1),
(209, 9, 38, 1, 'What is the output\nclass TestA {\n     public static void main(String[] args) {  \n          int a[] = new int[3];\n          System.out.println(a[2]);\n     }\n}', NULL, 1),
(210, 9, 38, 1, 'When is method binding done for overloading?', NULL, 1),
(211, 9, 38, 1, 'class Test\n{\n    public static void main (String[] args)\n    {\n        try\n        {\n            int a = 0;\n            System.out.println (\"a = \" + a);\n            int b = 20 / a;\n            System.out.println (\"b = \" + b);\n        }\n \n        catch(ArithmeticException e)\n        {\n            System.out.println (\"Divide by zero error\");\n        }\n \n        finally\n        {\n            System.out.println (\"inside the finally block\");\n        }\n    }\n}', NULL, 1),
(212, 10, 40, 1, 'Which of the following is a way to build dynamic sql statements?', NULL, 1),
(213, 10, 40, 1, '_________ is a spatial data type.', NULL, 1),
(214, 10, 40, 1, '___________removes all rows from a table without logging the individual row deletions.', NULL, 1),
(215, 10, 40, 1, 'Which of the following statement is true?', NULL, 1),
(216, 10, 40, 1, 'With SQL, how do you select all the records from a table named ?Persons? where the value of the column ?FirstName? ends with an ?a??', NULL, 1),
(217, 10, 40, 1, 'The UNION SQL clause can be used with _____________', NULL, 1),
(218, 10, 40, 1, 'How can you change ?Hansen? into ?Nilsen? in the ?LastName? column in the Persons table?', NULL, 1),
(219, 10, 40, 1, 'Find the names of these cities with temperature and condition whose condition is neither sunny nor cloudy.', NULL, 1),
(220, 10, 40, 1, 'What type of join is needed when you wish to include rows that do not have matching values?', NULL, 1),
(221, 10, 40, 1, 'What type of join is needed when you wish to return rows that do have matching values?', NULL, 1),
(222, 10, 40, 1, 'Which of the following is a correlated subquery?', NULL, 1),
(223, 10, 40, 1, 'Which of the following is not a limitation of view?', NULL, 1),
(224, 10, 40, 1, 'Which of the following statement is true?', NULL, 1),
(225, 10, 40, 1, 'Syntax for creating views is __________', NULL, 1),
(226, 10, 40, 1, '___________ is stored only in the Master database.', NULL, 1),
(227, 10, 40, 1, 'Which of the following is not a limitation of view?', NULL, 1),
(228, 10, 40, 1, '?You can delete a view with ___________ command.', NULL, 1),
(229, 10, 40, 1, 'Aggregate functions are functions that take a ___________ as input and return a single value.', NULL, 1),
(230, 10, 40, 1, 'Which of the following is not an aggregate function?', NULL, 1),
(231, 10, 40, 1, 'How can you change \"Hansen\" into \"Nilsen\" in the \"LastName\" column in the Persons table?', NULL, 1),
(232, 10, 40, 1, 'If we want to grant  \"select\" privilege on Emp table? from Scott user to ?User?, which one of following is correct statement ?', NULL, 1),
(233, 10, 40, 1, 'Which of  the following is correct selects all Employees with a Emp_Add containing the pattern ?er? ? ', NULL, 1),
(234, 10, 40, 1, 'What will be output of the following\n\n SELECT ROUND(12345, -2), ROUND(12.345,2),ROUND(12.345,3) \nFROM Dual;\n', NULL, 1),
(235, 10, 40, 1, 'SELECT * FROM EMP E1,EMP E2 WHERE E1.JOB=E2.JOB;\nWhat type of joining we are using here ?\n', NULL, 1);

-- --------------------------------------------------------

--
-- Table structure for table `question_bank_test`
--

CREATE TABLE `question_bank_test` (
  `id` int(11) NOT NULL,
  `section_id` int(11) DEFAULT NULL,
  `sub_section_id` int(11) DEFAULT NULL,
  `level_id` int(11) DEFAULT NULL,
  `question` text NOT NULL,
  `question_image` text,
  `question_type` int(11) NOT NULL DEFAULT '1'
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `question_bank_test`
--

INSERT INTO `question_bank_test` (`id`, `section_id`, `sub_section_id`, `level_id`, `question`, `question_image`, `question_type`) VALUES
(1, 2, NULL, 0, 'In an acoustics class, 120 students are male and 100 students are female. 25% of the male students and 20% of the female students are engineering students.20% of the male engineering students and 25% of the female engineering students passed the final exam.\nWhat percentage of engineering students passed the exam?', NULL, 1),
(2, 2, NULL, 0, '8 is 4% of?aa, and 4 is 8% of?bb.?cc?equals?b/ab/a. What is the value of?cc?', NULL, 1),
(3, 2, NULL, 0, 'In what ratio must rice at Rs 9.30 per Kg be mixed with rice at Rs 10.80 per Kg so that the mixture be worth Rs 10 per Kg?', NULL, 1),
(4, 2, NULL, 0, 'If we write down all the natural numbers from 259 to 492 side by side get a very large natural number?259260261....491492259260261....491492.\nHow many 8\"s will be used to write this large natural number?', NULL, 1),
(5, 2, NULL, 0, 'How many combinations of students are possible if the group is to consist of an equal number of freshmen, sophomores, and juniors?', NULL, 1),
(6, 2, NULL, 0, 'Two brother?XX?and?YY?appeared for an exam. Let?AA?be the event that?XX?is selected and?BB?is the event that?YY?is selected.\nThe probability of?AA?is?1717?and that of?BB?is?2929. Find the probability that both of them are selected.', NULL, 1),
(7, 2, NULL, 0, 'Two numbers are respectively?20%20%?and?50%50%?more than a third number. The ratio of the two numbers is:', NULL, 1),
(8, 2, NULL, 0, 'Two trains starting at the same time from 2 stations 200 km apart and going in opposite direction cross each other at a distance of 110 km from one of the stations. What is the ratio of their speeds?', NULL, 1),
(9, 2, NULL, 0, 'A cone and a hemisphere have equal bases and equal volumes. Find the ratio of their heights.', NULL, 1),
(10, 2, NULL, 0, 'The sequences?x1,x2.....x1,x2.....?and?y1,y2.....y1,y2.....are in arithmetic progressions such that?x1+y1=100x1+y1=100?and?x22?x21=y99?y100x22?x21=y99?y100?.?Find the sum of the first 100 terms of the progression,?(x1+y1),(x2+y2).....(x1+y1),(x2+y2).....', NULL, 1),
(11, 2, NULL, 0, 'How many kilograms of sugar costing Rs. 9 per kg must be mixed with 27kg of sugar costing Rs.7 per kg so that there may be gain of 10% by selling the mixture at Rs.9.24 per kg?', NULL, 1),
(12, 2, NULL, 0, 'When a student weighing 45 kgs left a class, the average weight of the remaining 59 students increased by 200 g. What is the average weight of the remaining 59 students?', NULL, 1),
(13, 2, NULL, 0, 'What is the minimum number of square marbles required to tile a floor of length 5 metres 78 cm and width 3 metres 74 cm?', NULL, 1),
(14, 2, NULL, 0, 'A vendor sells 60 percent of apples he had and throws away 15 percent of the remainder. Next day he sells 50 percent of the remainder and throws away the rest.\nWhat percent of his apples does the vendor throw?', NULL, 1),
(15, 2, NULL, 0, 'In how many ways can?55?different toys be packed in?33?identical boxes such that no box is empty, if any of the boxes may hold all of the toys?', NULL, 1),
(16, 2, NULL, 0, 'A bag contains 3 white balls and 2 black balls. Another bag contains 2 white and 4 black balls. A bag and a ball are picked random. The probability that the ball will be white is:', NULL, 1),
(17, 2, NULL, 0, 'If 20 men or 24 women or 40 boys can do a job in 12 days working for 8 hours a day, how many men working with 6 women and 2 boys take to do a job four times as big working for 5 hours a day for 12 days?', NULL, 1),
(18, 2, NULL, 0, 'If the wheel of a bicycle makes 560 revolutions in travelling 1.1 km, what is its radius?', NULL, 1),
(19, 2, NULL, 0, 'In a cricket match, Team?AA?scored 232 runs without losing a wicket. The score consisted of byes, wides and runs scored by two opening batsmen: Ram and Shyam. The runs scored by the two batsmen are 26 times wides. There are 8 more byes than wides. If the ratio of the runs scored by Ram and Shyam is?6:76:7, then the runs scored by Ram is:', NULL, 1),
(20, 2, NULL, 0, 'A shepherd has 1 million sheep at the beginning of Year ?2000. The numbers grow by?xx?during the year. A famine hits his village in the next year and many of his sheep die. The sheep population decreases by?yy?during 2001 and at the beginning of 2002 the shepherd finds that he is left with 1 million sheep. Which of the following is correct?', NULL, 1),
(21, 2, NULL, 0, 'Twenty six men -?1,2,3,....25?and?26?participate in 10km running race on a circular track of length 100m. All of them start at the same time, from the same point and run in the same direction. Their speeds, taken in the order, are in increasing?APAP. The time taken by 26 to meet 1, for the first time after they start is 20 sec and the time taken by 13 to complete the race is 52 minutes and 5 seconds. Find the time taken (in seconds), for all the twenty six men to meet for the first time at the starting point.', NULL, 1),
(22, NULL, NULL, 0, 'What is garbage collection in the context of Java?', NULL, 1),
(23, NULL, NULL, 0, '?Which of these field declarations are legal within the body of an interface?', NULL, 1),
(24, NULL, NULL, 0, 'What is garbage collection in the context of Java?', NULL, 1),
(25, NULL, NULL, 0, '?Which of these field declarations are legal within the body of an interface?', NULL, 1),
(26, NULL, NULL, 0, 'public class Increment {\n public static void main(String args[]) {\n  int g = 3;\n  System.out.print(++g * 8);\n }\n}\nWhat will be the output of the above code?', NULL, 1),
(27, NULL, NULL, 0, 'public class Test {\n public static void main(String args[]) {\n  int arr[] = new int[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 };\n  int n = 6;\n  n = arr[arr[n] / 2];\n  System.out.println(arr[n] / 2);\n\n }\n}\nWhat will be the output of the above code?', NULL, 1),
(28, NULL, NULL, 0, 'public class Test {\n public static void main(String args[]) {\n  int arr [] = new int[10];\n  for (int i = 0; i < 10; ++i) {\n   arr[i] = i;\n   System.out.print(arr[i] + \" \");\n   i++;\n  }\n }\n}\nWhat will be the output of the above code?', NULL, 1),
(29, NULL, NULL, 0, 'public class Test {\n public static void main(String args[]) {\n  StringBuffer sbf = new StringBuffer(\"Hello\");\n  sbf.replace(1, 3, \"Java\");\n  System.out.println(sbf);\n }\n}\nWhat will be the output of the above code?', NULL, 1),
(30, NULL, NULL, 0, 'Which of these method of class String is used to obtain length of String object?', NULL, 1),
(31, NULL, NULL, 0, 'Which of the following class/es is/are related to all the exceptions, that can used to catch all exceptions in catch block?', NULL, 1),
(32, NULL, NULL, 0, 'The process of defining a method in a subclass having same method signature as a method present in its superclass is called as :', NULL, 1),
(33, NULL, NULL, 0, 'Which of these keywords can be used to prevent a method from being overriden?', NULL, 1),
(34, NULL, NULL, 0, 'Which of these is correct way of calling a constructor having no parameters, of superclass A by a subclass B?', NULL, 1),
(35, NULL, NULL, 0, 'Which of these class relies upon its subclasses to complete implementation of its methods?', NULL, 1),
(36, NULL, NULL, 0, 'Method signature consists of', NULL, 1),
(37, NULL, NULL, 0, 'public class Test {\n public static void main(String args[]) {\n  sum(10);\n  sum(10, 20, 30, 40);\n  sum(10, 20);\n  sum();\n\n }\n\n public static int sum(int... x) {\n  return 10;\n }\n}\nIn the above code, which call to sum() method is appropriate?', NULL, 1),
(38, NULL, NULL, 0, 'public class Test {\n public static void main(String args[]) {\n  Equality obj = new Equality();\n  obj.x = 5;\n  obj.y = 5;\n  System.out.println(obj.isEqual());\n }\n}\n\nclass Equality {\n int x;\n int y;\n\n boolean isEqual() {\n  return (x == y);\n }\n}\nWhat is the output of above program?', NULL, 1),
(39, NULL, NULL, 0, 'Which among the following is not a necessary condition for constructors?', NULL, 1),
(40, NULL, NULL, 0, 'Which problem may arise if we use abstract class functions for polymorphism?', NULL, 1),
(41, NULL, NULL, 0, 'Which among the following best describes encapsulation?', NULL, 1),
(42, NULL, NULL, 0, 'If data members are private, what can we do to access them from the class object?', NULL, 1),
(43, NULL, NULL, 0, 'Encapsulation and abstraction differ as:', NULL, 1),
(44, NULL, NULL, 0, 'Multilevel inheritance allows _________________ in the program.', NULL, 1),
(45, NULL, NULL, 0, 'Which among the following is not a method of Throwable class?', NULL, 1),
(46, NULL, NULL, 0, 'Which of these method can be used to make the main thread to be executed last among all the threads?', NULL, 1),
(47, NULL, NULL, 0, 'Which of these method is used to find out that a thread is still running or not?', NULL, 1),
(48, NULL, NULL, 0, 'Which of these method waits for the thread to treminate?', NULL, 1),
(49, NULL, NULL, 0, 'Which of these statement is incorrect?', NULL, 1),
(50, NULL, NULL, 0, 'What is multithreaded programming?', NULL, 1),
(51, NULL, NULL, 0, 'Which of these methods deletes all the elements from invoking collection?', NULL, 1),
(52, NULL, NULL, 0, 'What is Collection in Java?', NULL, 1),
(53, NULL, NULL, 0, 'Which of these interface must contain a unique element?', NULL, 1),
(54, NULL, NULL, 0, 'public class Boxer1 \n{\n    Integer i;\n    int x;\n   public Boxer1(int y) \n   {\n        x = i+y;\n        System.out.println(x);\n   }\n   public static void main(String[] args) \n   {\n       new Boxer1 (new Integer(4));\n   }\n}', NULL, 1),
(55, NULL, NULL, 0, 'Which of these methods is used to compare a specific region inside a string with another specific region in another string?', NULL, 1),
(56, NULL, NULL, 0, 'Which of these class is used to create an object whose character sequence is mutable?', NULL, 1),
(57, NULL, NULL, 0, 'Which of these method wakes up all the threads?', NULL, 1),
(58, NULL, NULL, 0, 'Which of the following is used for implementing inheritance through class?', NULL, 1),
(59, NULL, NULL, 0, 'public class Test {\n public static void main(String args[]) {\n  int a = 1;\n  int b = 2;\n  int c;\n  int d;\n  c = ++b;\n  d = a++;\n  c++;\n  b++;\n  ++a;\n  System.out.println(a + \" \" + b + \" \" + c + \" \"+ d);\n }\n}\nWhat will be the output of the above code?', NULL, 1),
(60, NULL, NULL, 0, 'Which one of the following is a valid declaration of a boolean?', NULL, 1),
(61, NULL, NULL, 0, 'public class Test {\n private static int[] x = new int[0];\n\n public static void main(String[] args) {\n  System.out.println(x[0]);\n }\n}\nWhat will be the output of the above code?', NULL, 1),
(62, NULL, NULL, 0, 'The wrapping up of data and functions into a single unit is called', NULL, 1),
(63, NULL, NULL, 0, 'In Java byte, int, short and long all of these are ', NULL, 1),
(64, NULL, NULL, 0, 'Implicit type casting in Java takes place when', NULL, 1),
(65, NULL, NULL, 0, 'public class Test {\n\n static void test(float x) {\n  System.out.println(\"float\");\n }\n\n static void test(double x) {\n  System.out.println(\"double\");\n }\n\n public static void main(String[] args) {\n  test(99.9);\n }\n}\nWhat is the output of the above code', NULL, 1),
(66, NULL, NULL, 0, 'public class Test {\n\n public static void main(String[] args) {\n  int i = 010;\n  int j = 07;\n  \n  System.out.println(i);\n  System.out.println(j);\n }\n}\nWhat is the output of the above code', NULL, 1),
(67, NULL, NULL, 0, 'public class Test {\n\n public static void main(String[] args) {\n  int i = 0, y = 0, z = 0;\n  \n  i = (++i + y--) * z++;\n  \n  System.out.println(i);\n }\n}\nWhat is the output of the above code', NULL, 1),
(68, NULL, NULL, 0, 'Which of the following is valid?', NULL, 1),
(69, NULL, NULL, 0, 'public class Test {\n\n public static void main(String[] args) {\n  int[] i = {120,200,016,021};\n  for(int j=0;j<i.length;j++) {\n   System.out.println(i[j]+\" \");\n  }\n  \n  \n }\n}\nWhat is the output of the above code', NULL, 1),
(70, NULL, NULL, 0, 'Which of these constructors is used to create an empty String object?', NULL, 1),
(71, NULL, NULL, 0, 'What is it called if an object has its own lifecycle and there is no owner?', NULL, 1),
(72, NULL, NULL, 0, 'Thread priority in Java is?', NULL, 1),
(73, NULL, NULL, 0, 'Which of these can be used to get the Object from Set', NULL, 1),
(74, NULL, NULL, 0, 'What is the out put\n\nclass TestA {\n\n     public static void main(String[] args) {\n\n          System.out.println(6++);\n\n     }\n\n}', NULL, 1),
(75, NULL, NULL, 0, 'What is the output\nclass TestA {\n\n     public static void main(String[] args) {        \n          int a = 5;\n          int b = 4;\n          System.out.println(\"Prod is \"+a*b);\n     }\n\n}', NULL, 1),
(76, NULL, NULL, 0, 'Which is not Object class method', NULL, 1),
(77, NULL, NULL, 0, 'Which methods we need to override to compare custom objects', NULL, 1),
(78, NULL, NULL, 0, 'In which package does Object class is present', NULL, 1),
(79, NULL, NULL, 0, 'Which statement is wrong', NULL, 1),
(80, NULL, NULL, 0, 'What is the out put\nclass TestA {\n     public static void main(String[] args) {\n          String a = \"priya\";\n          String b = \"priya\";\n       System.out.println(a==b);\n     }\n}', NULL, 1),
(81, NULL, NULL, 0, 'What is the output\nclass TestA {\n     public static void main(String[] args) {  \n          int a[] = new int[3];\n          System.out.println(a[2]);\n     }\n}', NULL, 1),
(82, NULL, NULL, 0, 'When is method binding done for overloading?', NULL, 1),
(83, NULL, NULL, 0, 'class Test\n{\n    public static void main (String[] args)\n    {\n        try\n        {\n            int a = 0;\n            System.out.println (\"a = \" + a);\n            int b = 20 / a;\n            System.out.println (\"b = \" + b);\n        }\n \n        catch(ArithmeticException e)\n        {\n            System.out.println (\"Divide by zero error\");\n        }\n \n        finally\n        {\n            System.out.println (\"inside the finally block\");\n        }\n    }\n}', NULL, 1);

-- --------------------------------------------------------

--
-- Table structure for table `question_levels`
--

CREATE TABLE `question_levels` (
  `id` int(11) NOT NULL,
  `level` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `question_levels`
--

INSERT INTO `question_levels` (`id`, `level`) VALUES
(1, 'Easy'),
(2, 'Moderate'),
(3, 'Difficult');

-- --------------------------------------------------------

--
-- Table structure for table `section`
--

CREATE TABLE `section` (
  `id` int(11) NOT NULL,
  `section_name` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `section`
--

INSERT INTO `section` (`id`, `section_name`) VALUES
(1, 'English'),
(2, 'Analytical Reasoning'),
(3, 'Quantitative Aptitude and Statistics'),
(4, 'Code Test'),
(5, 'html'),
(6, 'css'),
(7, 'javascript'),
(8, 'Aptitude'),
(9, 'Java'),
(10, 'SQL'),
(11, 'C');

-- --------------------------------------------------------

--
-- Table structure for table `section_category`
--

CREATE TABLE `section_category` (
  `id` int(11) NOT NULL,
  `category` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `section_category`
--

INSERT INTO `section_category` (`id`, `category`) VALUES
(1, 'Grammer'),
(2, 'Comprehension'),
(3, 'Vocabulary'),
(4, 'Pictorial'),
(5, 'Sequence and Relations'),
(6, 'Verbal'),
(7, 'Basic Mathematics'),
(8, 'Applied Mathematics'),
(9, 'Engineering Mathematics');

-- --------------------------------------------------------

--
-- Table structure for table `special_section_question`
--

CREATE TABLE `special_section_question` (
  `id` int(11) NOT NULL,
  `section_id` int(11) NOT NULL,
  `sub_section_id` int(11) NOT NULL,
  `question-detail` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- --------------------------------------------------------

--
-- Table structure for table `student_answers`
--

CREATE TABLE `student_answers` (
  `id` int(11) NOT NULL,
  `student_id` int(11) NOT NULL,
  `question_id` int(11) NOT NULL,
  `answer_id` int(11) NOT NULL,
  `correct_ans` int(11) DEFAULT NULL,
  `mcq_test_id` int(11) NOT NULL,
  `section_id` int(11) NOT NULL,
  `time_taken` text,
  `test_attempt` int(11) NOT NULL DEFAULT '0',
  `marked_review` int(11) NOT NULL DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `student_answers`
--

INSERT INTO `student_answers` (`id`, `student_id`, `question_id`, `answer_id`, `correct_ans`, `mcq_test_id`, `section_id`, `time_taken`, `test_attempt`, `marked_review`) VALUES
(58, 3, 8, 21, 1, 1, 3, '3', 0, 0),
(59, 3, 7, 18, 0, 1, 3, '2', 0, 0),
(311, 2, 17, 58, 1, 1, 1, '3', 1, 0),
(312, 2, 19, 67, 1, 1, 1, '3', 1, 0),
(313, 2, 18, 63, 1, 1, 1, '3', 1, 0),
(314, 2, 12, 39, 0, 1, 2, '3', 1, 0),
(315, 2, 13, 43, 0, 1, 2, '4', 1, 0),
(316, 2, 8, 21, 1, 1, 3, '3', 1, 0),
(317, 2, 7, 18, 0, 1, 3, '4', 1, 0),
(318, 2, 18, 63, 1, 1, 1, '3', 2, 0),
(319, 2, 19, 67, 1, 1, 1, '3', 2, 0),
(320, 2, 17, 58, 1, 1, 1, '7', 2, 0),
(321, 2, 13, 42, 1, 1, 2, '2', 2, 0),
(322, 2, 12, 39, 0, 1, 2, '3', 2, 0),
(323, 2, 8, 23, 0, 1, 3, '4', 2, 0),
(324, 2, 7, 18, 0, 1, 3, '4', 2, 0),
(325, 2, 17, 58, 1, 2, 1, '6', 1, 0),
(326, 2, 18, 63, 1, 2, 1, '2', 1, 0),
(327, 2, 13, 42, 1, 2, 2, '3', 1, 0),
(328, 2, 12, 38, 0, 2, 2, '2', 1, 0),
(329, 2, 8, 21, 1, 2, 3, '4', 1, 0),
(330, 2, 7, 18, 0, 2, 3, '4', 1, 0),
(331, 2, 18, 0, 0, 1, 1, '120', 3, 0),
(332, 2, 18, 62, 0, 1, 1, '2', 4, 0),
(333, 2, 19, 67, 1, 1, 1, '3', 4, 0),
(334, 2, 17, 58, 1, 1, 1, '3', 4, 0),
(335, 2, 12, 38, 0, 1, 2, '15', 4, 0),
(336, 2, 13, 42, 1, 1, 2, '4', 4, 0),
(337, 2, 8, 21, 1, 1, 3, '3', 4, 0),
(338, 2, 7, 18, 0, 1, 3, '4', 4, 0),
(339, 2, 17, 0, 0, 118, 1, '4', 1, 0),
(340, 2, 17, 59, 0, 1, 1, '12', 5, 0),
(341, 2, 19, 66, 0, 1, 1, '3', 5, 0),
(342, 2, 18, 62, 0, 1, 1, '3', 5, 0),
(343, 2, 12, 37, 1, 1, 2, '3', 5, 0),
(344, 2, 13, 42, 1, 1, 2, '3', 5, 0),
(345, 2, 8, 21, 1, 1, 3, '4', 5, 0),
(346, 2, 7, 17, 0, 1, 3, '3', 5, 0),
(347, 2, 17, 58, 1, 1, 1, '3', 6, 0),
(348, 2, 18, 62, 0, 1, 1, '3', 6, 0),
(349, 2, 19, 66, 0, 1, 1, '3', 6, 0),
(350, 2, 12, 37, 1, 1, 2, '4', 6, 0),
(351, 2, 13, 42, 1, 1, 2, '4', 6, 0),
(352, 2, 8, 42, 0, 1, 3, '120', 6, 0),
(353, 2, 19, 66, 0, 1, 0, '135', 7, 0),
(354, 2, 17, 0, 0, 1, 1, '120', 8, 0),
(355, 2, 18, 0, 0, 1, 1, '120', 9, 0),
(356, 2, 17, 0, 0, 123, 2, 'NaN', 1, 0),
(357, 2, 0, 0, 0, 123, 1, 'NaN', 1, 0),
(358, 2, 8, 23, 0, 123, 1, '', 2, 0),
(359, 2, 7, 0, 0, 123, 1, '', 2, 0),
(360, 2, 12, 38, 0, 123, 2, '', 2, 0),
(361, 2, 13, 42, 1, 123, 2, '', 2, 0),
(362, 2, 8, 0, 0, 123, 1, 'NaN', 3, 0),
(363, 2, 7, 18, 0, 123, 1, '', 3, 0),
(364, 2, 13, 42, 1, 123, 2, '', 3, 0),
(365, 2, 17, 58, 1, 1, 1, '4', 10, 0),
(366, 2, 19, 66, 0, 1, 1, '3', 10, 0),
(367, 2, 18, 63, 1, 1, 1, '3', 10, 0),
(368, 2, 12, 37, 1, 1, 2, '3', 10, 0),
(369, 2, 13, 42, 1, 1, 2, '4', 10, 0),
(370, 2, 7, 18, 0, 1, 3, '4', 10, 0),
(371, 2, 8, 22, 0, 1, 3, '3', 10, 0),
(372, 2, 17, 0, 0, 1, 1, '120', 11, 0),
(373, 2, 19, 0, 0, 1, 1, '120', 12, 0),
(374, 2, 17, 0, 0, 1, 1, '10', 13, 0),
(375, 2, 17, 0, 0, 1, 1, '10', 14, 0),
(376, 2, 19, 0, 0, 1, 1, '10', 15, 0),
(377, 2, 7, 18, 0, 123, 1, '', 4, 0),
(378, 2, 8, 22, 0, 123, 1, '', 4, 0),
(379, 2, 13, 42, 1, 123, 2, '', 4, 0),
(380, 2, 12, 38, 0, 123, 2, '', 4, 0),
(381, 2, 7, 0, 0, 123, 1, 'NaN', 5, 0),
(382, 2, 12, 0, 0, 123, 2, 'NaN', 5, 0),
(383, 2, 8, 0, 0, 123, 1, 'NaN', 6, 0),
(384, 2, 13, 0, 0, 123, 2, 'NaN', 6, 0),
(385, 2, 18, 0, 0, 124, 1, '2', 1, 0),
(386, 2, 18, 0, 0, 124, 1, '2', 2, 0),
(387, 2, 18, 0, 0, 124, 1, '2', 3, 0),
(388, 2, 18, 0, 0, 124, 1, '2', 4, 0),
(389, 2, 18, 0, 0, 124, 1, '1', 5, 0),
(390, 2, 17, 0, 0, 124, 1, '1', 5, 0),
(391, 2, 7, 18, 0, 125, 1, 'NaN', 1, 0),
(392, 2, 8, 22, 0, 125, 2, 'NaN', 1, 0),
(393, 2, 12, 39, 0, 126, 1, 'NaN', 1, 0),
(394, 2, 17, 58, 1, 126, 2, '7', 1, 0),
(395, 2, 18, 58, 0, 126, 2, '2', 1, 0),
(396, 2, 13, 42, 1, 126, 1, '', 2, 0),
(397, 2, 12, 42, 0, 126, 1, 'NaN', 2, 0),
(398, 2, 17, 58, 1, 126, 2, '2', 2, 0),
(399, 2, 18, 62, 0, 126, 2, '6', 2, 0),
(400, 2, 13, 43, 0, 126, 1, '', 3, 0),
(401, 2, 12, 43, 0, 126, 1, 'NaN', 3, 0),
(402, 2, 17, 58, 1, 126, 2, '5', 3, 0),
(403, 2, 18, 58, 0, 126, 2, '4', 3, 0),
(404, 2, 13, 43, 0, 126, 1, '', 4, 0),
(405, 2, 12, 38, 0, 126, 1, 'NaN', 4, 0),
(406, 2, 18, 63, 1, 126, 2, '2', 4, 0),
(407, 2, 17, 58, 1, 126, 3, '7', 4, 0),
(408, 2, 214, 833, 0, 128, 1, '', 1, 0),
(409, 2, 218, 833, 0, 128, 1, '', 1, 0),
(410, 2, 220, 833, 0, 128, 1, '', 1, 0),
(411, 2, 217, 852, 0, 128, 1, '', 1, 0),
(412, 2, 213, 835, 1, 128, 1, '', 1, 0),
(413, 2, 215, 852, 0, 128, 1, '', 1, 0),
(414, 2, 219, 852, 0, 128, 1, '', 1, 0),
(415, 2, 216, 852, 0, 128, 1, '', 1, 0),
(416, 2, 212, 852, 0, 128, 1, '', 1, 0),
(417, 2, 221, 869, 1, 128, 1, '', 1, 0),
(418, 2, 161, 627, 0, 128, 2, '', 1, 0),
(419, 2, 152, 591, 0, 128, 2, '', 1, 0),
(420, 2, 160, 623, 1, 128, 2, '', 1, 0),
(421, 2, 156, 607, 0, 128, 2, '', 1, 0),
(422, 2, 157, 611, 0, 128, 2, '', 1, 0),
(423, 2, 155, 603, 0, 128, 2, '', 1, 0),
(424, 2, 158, 615, 0, 128, 2, '', 1, 0),
(425, 2, 159, 619, 1, 128, 2, '', 1, 0),
(426, 2, 154, 599, 0, 128, 2, '', 1, 0),
(427, 2, 153, 595, 1, 128, 2, '', 1, 0),
(428, 2, 134, 519, 0, 128, 3, '', 1, 0),
(429, 2, 136, 527, 0, 128, 3, '', 1, 0),
(430, 2, 137, 531, 0, 128, 3, '', 1, 0),
(431, 2, 132, 511, 1, 128, 3, '', 1, 0),
(432, 2, 138, 535, 0, 128, 3, '', 1, 0),
(433, 2, 133, 515, 1, 128, 3, '', 1, 0),
(434, 2, 139, 540, 0, 128, 3, '', 1, 0),
(435, 2, 135, 524, 0, 128, 3, '', 1, 0),
(436, 2, 131, 507, 0, 128, 3, '', 1, 0),
(437, 2, 140, 543, 0, 128, 4, '', 1, 0),
(438, 2, 215, 844, 0, 128, 1, '', 2, 0),
(439, 2, 212, 831, 0, 128, 1, '', 2, 0),
(440, 2, 217, 851, 0, 128, 1, '', 2, 0),
(441, 2, 216, 847, 0, 128, 1, '', 2, 0),
(442, 2, 220, 863, 0, 128, 1, '', 2, 0),
(443, 2, 221, 867, 0, 128, 1, '', 2, 0),
(444, 2, 214, 839, 0, 128, 1, '', 2, 0),
(445, 2, 218, 855, 0, 128, 1, '', 2, 0),
(446, 2, 213, 835, 1, 128, 1, '', 2, 0),
(447, 2, 219, 859, 0, 128, 1, '', 2, 0),
(448, 2, 160, 623, 1, 128, 2, '', 2, 0),
(449, 2, 153, 595, 1, 128, 2, '', 2, 0),
(450, 2, 161, 627, 0, 128, 2, '', 2, 0),
(451, 2, 156, 608, 0, 128, 2, '', 2, 0),
(452, 2, 154, 600, 1, 128, 2, '', 2, 0),
(453, 2, 158, 616, 0, 128, 2, '', 2, 0),
(454, 2, 152, 592, 1, 128, 2, '', 2, 0),
(455, 2, 218, 855, 0, 128, 1, '', 3, 0),
(456, 2, 213, 835, 1, 128, 1, '', 3, 0),
(457, 2, 214, 839, 0, 128, 1, '', 3, 0),
(458, 2, 219, 859, 0, 128, 1, '', 3, 0),
(459, 2, 221, 867, 0, 128, 1, '', 3, 0),
(460, 2, 220, 863, 0, 128, 1, '', 3, 0),
(461, 2, 216, 847, 0, 128, 1, '', 3, 0),
(462, 2, 212, 831, 0, 128, 1, '', 3, 0),
(463, 2, 215, 843, 0, 128, 1, '', 3, 0),
(464, 2, 217, 851, 0, 128, 1, '', 3, 0),
(465, 2, 158, 615, 0, 128, 2, '', 3, 0),
(466, 2, 154, 599, 0, 128, 2, '', 3, 0),
(467, 2, 157, 611, 0, 128, 2, '', 3, 0),
(468, 2, 152, 593, 0, 128, 2, '', 3, 0),
(469, 2, 153, 596, 0, 128, 2, '', 3, 0),
(470, 2, 161, 628, 0, 128, 2, '', 3, 0),
(471, 2, 156, 608, 0, 128, 2, '', 3, 0),
(472, 2, 160, 624, 0, 128, 2, '', 3, 0),
(473, 2, 155, 603, 0, 128, 2, '', 3, 0),
(474, 2, 159, 619, 1, 128, 2, '', 3, 0),
(475, 2, 140, 543, 0, 128, 3, '', 3, 0),
(476, 2, 131, 507, 0, 128, 3, '', 3, 0),
(477, 2, 137, 532, 1, 128, 3, '', 3, 0),
(478, 2, 136, 527, 0, 128, 3, '', 3, 0),
(479, 2, 139, 540, 0, 128, 3, '', 3, 0),
(480, 2, 132, 511, 1, 128, 3, '', 3, 0),
(481, 2, 134, 519, 0, 128, 3, '', 3, 0),
(482, 2, 135, 524, 0, 128, 3, '', 3, 0),
(483, 2, 133, 516, 0, 128, 3, '', 3, 0),
(484, 2, 138, 536, 0, 128, 3, '', 3, 0),
(485, 2, 214, 840, 0, 128, 1, '', 4, 0),
(486, 2, 212, 831, 0, 128, 1, '', 4, 0),
(487, 2, 221, 867, 0, 128, 1, '', 4, 0),
(488, 2, 217, 852, 0, 128, 1, '', 4, 0),
(489, 2, 216, 847, 0, 128, 1, '', 4, 0),
(490, 2, 213, 836, 0, 128, 1, '', 4, 0),
(491, 2, 220, 864, 1, 128, 1, '', 4, 0),
(492, 2, 215, 843, 0, 128, 1, '', 4, 0),
(493, 2, 218, 855, 0, 128, 1, '', 4, 0),
(494, 2, 219, 859, 0, 128, 1, '', 4, 0),
(495, 2, 158, 616, 0, 128, 2, '', 4, 0),
(496, 2, 155, 603, 0, 128, 2, '', 4, 0),
(497, 2, 161, 628, 0, 128, 2, '', 4, 0),
(498, 2, 157, 612, 1, 128, 2, '', 4, 0),
(499, 2, 160, 624, 0, 128, 2, '', 4, 0),
(500, 2, 154, 599, 0, 128, 2, '', 4, 0),
(501, 2, 152, 591, 0, 128, 2, '', 4, 0),
(502, 2, 153, 595, 1, 128, 2, '', 4, 0),
(503, 2, 156, 607, 0, 128, 2, '', 4, 0),
(504, 2, 159, 620, 0, 128, 2, '', 4, 0),
(505, 2, 133, 515, 1, 128, 3, '', 4, 0),
(506, 2, 139, 540, 0, 128, 3, '', 4, 0),
(507, 2, 136, 528, 1, 128, 3, '', 4, 0),
(508, 2, 131, 507, 0, 128, 3, '', 4, 0),
(509, 2, 132, 513, 0, 128, 3, '', 4, 0),
(510, 2, 137, 532, 1, 128, 3, '', 4, 0),
(511, 2, 140, 544, 1, 128, 3, '', 4, 0),
(512, 2, 138, 536, 0, 128, 3, '', 4, 0),
(513, 2, 135, 523, 0, 128, 3, '', 4, 0),
(514, 2, 134, 520, 0, 128, 3, '', 4, 0),
(515, 2, 213, 836, 0, 128, 1, '', 5, 0),
(516, 2, 159, 620, 0, 128, 2, '', 5, 0),
(517, 2, 138, 535, 0, 128, 3, '', 5, 0),
(518, 2, 218, 855, 0, 128, 1, '', 6, 0),
(519, 2, 219, 860, 0, 128, 1, '', 6, 0),
(520, 2, 214, 839, 0, 128, 1, '', 6, 0),
(521, 2, 212, 832, 0, 128, 1, '', 6, 0),
(522, 2, 216, 847, 0, 128, 1, '', 6, 0),
(523, 2, 217, 851, 0, 128, 1, '', 6, 0),
(524, 2, 221, 867, 0, 128, 1, '', 6, 0),
(525, 2, 220, 863, 0, 128, 1, '', 6, 0),
(526, 2, 215, 843, 0, 128, 1, '', 6, 0),
(527, 2, 213, 836, 0, 128, 1, '', 6, 0),
(528, 2, 215, 843, 0, 128, 1, '', 7, 0),
(529, 2, 217, 851, 0, 128, 1, '', 7, 0),
(530, 2, 214, 840, 0, 128, 1, '', 7, 0),
(531, 2, 220, 863, 0, 128, 1, '', 7, 0),
(532, 2, 216, 848, 1, 128, 1, '', 7, 0),
(533, 2, 213, 836, 0, 128, 1, '', 7, 0),
(534, 2, 221, 867, 0, 128, 1, '', 7, 0),
(535, 2, 219, 859, 0, 128, 1, '', 7, 0),
(536, 2, 218, 855, 0, 128, 1, '', 7, 0),
(537, 2, 212, 831, 0, 128, 1, '', 7, 0),
(538, 2, 217, 851, 0, 128, 1, '', 8, 0),
(539, 2, 216, 847, 0, 128, 1, '', 8, 0),
(540, 2, 219, 860, 0, 128, 1, '', 8, 0),
(541, 2, 218, 855, 0, 128, 1, '', 8, 0),
(542, 2, 215, 843, 0, 128, 1, '', 8, 0),
(543, 2, 212, 831, 0, 128, 1, '', 8, 0),
(544, 2, 214, 840, 0, 128, 1, '', 8, 0),
(545, 2, 221, 868, 0, 128, 1, '', 8, 0),
(546, 2, 220, 864, 1, 128, 1, '', 8, 0),
(547, 2, 213, 836, 0, 128, 1, '', 8, 0),
(548, 2, 155, 603, 0, 128, 2, '', 8, 0),
(549, 2, 152, 591, 0, 128, 2, '', 8, 0),
(550, 2, 157, 611, 0, 128, 2, '', 8, 0),
(551, 2, 159, 620, 0, 128, 2, '', 8, 0),
(552, 2, 156, 607, 0, 128, 2, '', 8, 0),
(553, 2, 161, 628, 0, 128, 2, '', 8, 0),
(554, 2, 158, 616, 0, 128, 2, '', 8, 0),
(555, 2, 160, 624, 0, 128, 2, '', 8, 0),
(556, 2, 153, 596, 0, 128, 2, '', 8, 0),
(557, 2, 154, 599, 0, 128, 2, '', 8, 0),
(558, 2, 135, 524, 0, 128, 3, '', 8, 0),
(559, 2, 140, 543, 0, 128, 3, '', 8, 0),
(560, 2, 131, 508, 0, 128, 3, '', 8, 0),
(561, 2, 134, 521, 1, 128, 3, '', 8, 0),
(562, 2, 137, 532, 1, 128, 3, '', 8, 0),
(563, 2, 133, 516, 0, 128, 3, '', 8, 0),
(564, 2, 138, 536, 0, 128, 3, '', 8, 0),
(565, 2, 132, 511, 1, 128, 3, '', 8, 0),
(566, 2, 136, 527, 0, 128, 3, '', 8, 0),
(567, 2, 139, 540, 0, 128, 3, '', 8, 0),
(568, 2, 214, 840, 0, 128, 1, '', 9, 0),
(569, 2, 217, 851, 0, 128, 1, '', 9, 0),
(570, 2, 215, 844, 0, 128, 1, '', 9, 0),
(571, 2, 212, 832, 0, 128, 1, '', 9, 0),
(572, 2, 221, 867, 0, 128, 1, '', 9, 0),
(573, 2, 220, 864, 1, 128, 1, '', 9, 0),
(574, 2, 218, 855, 0, 128, 1, '', 9, 0),
(575, 2, 216, 847, 0, 128, 1, '', 9, 0),
(576, 2, 213, 835, 1, 128, 1, '', 9, 0),
(577, 2, 219, 860, 0, 128, 1, '', 9, 0),
(578, 2, 216, 847, 0, 128, 1, '', 10, 0),
(579, 2, 213, 835, 1, 128, 1, '', 11, 0),
(580, 2, 219, 859, 0, 128, 1, '', 11, 0),
(581, 2, 216, 847, 0, 128, 1, '', 11, 0),
(582, 2, 220, 864, 1, 128, 1, '', 11, 0),
(583, 2, 218, 856, 0, 128, 1, '', 11, 0),
(584, 2, 217, 851, 0, 128, 1, '', 11, 0),
(585, 2, 214, 839, 0, 128, 1, '', 11, 0),
(586, 2, 215, 843, 0, 128, 1, '', 11, 0),
(587, 2, 212, 831, 0, 128, 1, '', 11, 0),
(588, 2, 221, 867, 0, 128, 1, '', 11, 0),
(589, 2, 216, 848, 1, 128, 1, '', 12, 0),
(590, 2, 219, 859, 0, 128, 1, '', 12, 0),
(591, 2, 212, 831, 0, 128, 1, '', 12, 0),
(592, 2, 213, 835, 1, 128, 1, '', 12, 0),
(593, 2, 218, 855, 0, 128, 1, '', 12, 0),
(594, 2, 221, 867, 0, 128, 1, '', 12, 0),
(595, 2, 220, 864, 1, 128, 1, '', 12, 0),
(596, 2, 217, 851, 0, 128, 1, '', 12, 0),
(597, 2, 215, 843, 0, 128, 1, '', 12, 0),
(598, 2, 214, 840, 0, 128, 1, '', 12, 0),
(599, 2, 161, 628, 0, 128, 2, '', 12, 0),
(600, 2, 155, 603, 0, 128, 2, '', 12, 0),
(601, 2, 158, 616, 0, 128, 2, '', 12, 0),
(602, 2, 156, 606, 1, 128, 2, '', 12, 0),
(603, 2, 154, 599, 0, 128, 2, '', 12, 0),
(604, 2, 160, 623, 1, 128, 2, '', 12, 0),
(605, 2, 157, 611, 0, 128, 2, '', 12, 0),
(606, 2, 152, 592, 1, 128, 2, '', 12, 0),
(607, 2, 153, 595, 1, 128, 2, '', 12, 0),
(608, 2, 159, 619, 1, 128, 2, '', 12, 0),
(609, 2, 138, 536, 0, 128, 3, '', 12, 0),
(610, 2, 136, 527, 0, 128, 3, '', 12, 0),
(611, 2, 132, 512, 0, 128, 3, '', 12, 0),
(612, 2, 135, 523, 0, 128, 3, '', 12, 0),
(613, 2, 137, 531, 0, 128, 3, '', 12, 0),
(614, 2, 139, 540, 0, 128, 3, '', 12, 0),
(615, 2, 140, 543, 0, 128, 3, '', 12, 0),
(616, 2, 134, 519, 0, 128, 3, '', 12, 0),
(617, 2, 133, 515, 1, 128, 3, '', 12, 0),
(618, 2, 131, 508, 0, 128, 3, '', 12, 0),
(619, 2, 217, 851, 0, 136, 1, '', 1, 0),
(620, 2, 220, 863, 0, 136, 1, '', 1, 0),
(621, 2, 212, 831, 0, 136, 1, '', 1, 0),
(622, 2, 218, 855, 0, 136, 1, '', 1, 0),
(623, 2, 219, 859, 0, 136, 1, '', 1, 0),
(624, 2, 221, 867, 0, 136, 1, '', 1, 0),
(625, 2, 214, 839, 0, 136, 1, '', 1, 0),
(626, 2, 215, 843, 0, 136, 1, '', 1, 0),
(627, 2, 213, 835, 1, 136, 1, '', 1, 0),
(628, 2, 216, 847, 0, 136, 1, '', 1, 0),
(629, 2, 161, 627, 0, 136, 2, '', 1, 0),
(630, 2, 153, 595, 1, 136, 2, '', 1, 0),
(631, 2, 155, 603, 0, 136, 2, '', 1, 0),
(632, 2, 160, 623, 1, 136, 2, '', 1, 0),
(633, 2, 157, 611, 0, 136, 2, '', 1, 0),
(634, 2, 159, 620, 0, 136, 2, '', 1, 0),
(635, 2, 156, 615, 0, 136, 2, '', 1, 0),
(636, 2, 158, 615, 0, 136, 2, '', 1, 0),
(637, 2, 154, 598, 0, 136, 2, 'NaN', 1, 0),
(638, 2, 215, 843, 0, 128, 1, '', 13, 0),
(639, 2, 216, 847, 0, 128, 1, '', 13, 0),
(640, 2, 212, 832, 0, 128, 1, '', 13, 0),
(641, 2, 220, 864, 1, 128, 1, '', 13, 0),
(642, 2, 221, 868, 0, 128, 1, '', 13, 0),
(643, 2, 217, 852, 0, 128, 1, '', 13, 0),
(644, 2, 218, 856, 0, 128, 1, '', 13, 0),
(645, 2, 214, 840, 0, 128, 1, '', 13, 0),
(646, 2, 213, 836, 0, 128, 1, '', 13, 0),
(647, 2, 219, 860, 0, 128, 1, '', 13, 0),
(648, 2, 155, 603, 0, 128, 2, '', 13, 0),
(649, 2, 153, 596, 0, 128, 2, '', 13, 0),
(650, 2, 157, 596, 0, 128, 2, 'NaN', 13, 0),
(651, 2, 219, 0, 0, 128, 1, 'NaN', 14, 0),
(652, 2, 161, 0, 0, 128, 2, 'NaN', 14, 0),
(653, 2, 131, 507, 0, 128, 3, 'NaN', 14, 0),
(654, 2, 138, 536, 0, 128, 3, 'NaN', 14, 0),
(655, 2, 132, 511, 1, 128, 3, 'NaN', 14, 0),
(656, 2, 136, 527, 0, 128, 3, 'NaN', 14, 0),
(657, 2, 133, 515, 1, 128, 3, 'NaN', 14, 0),
(658, 2, 135, 523, 0, 128, 3, 'NaN', 14, 0),
(659, 2, 140, 543, 0, 128, 3, 'NaN', 14, 0),
(660, 2, 137, 531, 0, 128, 3, 'NaN', 14, 0),
(661, 2, 139, 540, 0, 128, 3, 'NaN', 14, 0),
(662, 2, 134, 519, 0, 128, 3, 'NaN', 14, 0),
(663, 2, 212, 0, 0, 128, 1, 'NaN', 15, 0),
(664, 2, 212, 832, 0, 128, 1, '', 16, 0),
(665, 2, 216, 847, 0, 128, 1, '', 17, 0),
(666, 2, 221, 868, 0, 128, 1, '', 17, 0),
(667, 2, 217, 851, 0, 128, 1, '', 18, 0),
(668, 2, 220, 864, 1, 128, 1, '', 19, 0),
(669, 2, 221, 868, 0, 128, 1, '', 19, 0),
(670, 2, 214, 839, 0, 128, 1, '', 20, 0),
(671, 2, 216, 848, 1, 128, 1, '', 20, 0),
(672, 2, 220, 864, 1, 128, 1, '', 20, 0),
(673, 2, 219, 859, 0, 128, 1, '', 20, 0),
(674, 2, 220, 863, 0, 128, 1, '', 21, 0),
(675, 2, 221, 867, 0, 128, 1, '', 21, 0),
(676, 2, 221, 867, 0, 128, 1, '8', 22, 0),
(677, 2, 216, 848, 1, 128, 1, '16', 22, 0),
(678, 2, 212, 832, 0, 128, 1, '2', 22, 0),
(679, 2, 219, 859, 0, 128, 1, '2', 22, 0),
(680, 2, 217, 852, 0, 128, 1, '1', 22, 0),
(681, 2, 215, 843, 0, 128, 1, '2', 22, 0),
(682, 2, 214, 840, 0, 128, 1, '3', 22, 0),
(683, 2, 218, 855, 0, 128, 1, '2', 22, 0),
(684, 2, 220, 863, 0, 128, 1, '3', 22, 0),
(685, 2, 213, 835, 1, 128, 1, '2', 22, 0),
(686, 2, 154, 599, 0, 128, 2, '6', 22, 0),
(687, 2, 155, 603, 0, 128, 2, '4', 22, 0),
(688, 2, 161, 628, 0, 128, 2, '2', 22, 0),
(689, 2, 156, 607, 0, 128, 2, '17', 22, 0),
(690, 2, 152, 591, 0, 128, 2, '3', 22, 0),
(691, 2, 153, 595, 1, 128, 2, '24', 22, 0),
(692, 2, 158, 616, 0, 128, 2, '2', 22, 0),
(693, 2, 157, 610, 0, 128, 2, '31', 22, 0),
(694, 2, 160, 623, 1, 128, 2, '35', 22, 0),
(695, 2, 159, 620, 0, 128, 2, '3', 22, 0),
(696, 2, 131, 508, 0, 128, 3, '7', 22, 0),
(697, 2, 133, 516, 0, 128, 3, '14', 22, 0),
(698, 2, 134, 519, 0, 128, 3, '17', 22, 0),
(699, 2, 132, 511, 1, 128, 3, '55', 22, 0),
(700, 2, 139, 539, 1, 128, 3, '2', 22, 0),
(701, 2, 138, 535, 0, 128, 3, '3', 22, 0),
(702, 2, 140, 543, 0, 128, 3, '28', 22, 0),
(703, 2, 135, 523, 0, 128, 3, '2', 22, 0),
(704, 2, 136, 527, 0, 128, 3, '33', 22, 0),
(705, 2, 137, 532, 1, 128, 3, '2', 22, 0),
(706, 2, 220, 865, 0, 128, 1, '5', 23, 0),
(707, 2, 213, 836, 0, 128, 1, '54', 23, 0),
(708, 2, 217, 852, 0, 128, 1, '2', 23, 0),
(709, 2, 219, 860, 0, 128, 1, '6', 23, 0),
(710, 2, 212, 832, 0, 128, 1, '3', 23, 0),
(711, 2, 221, 868, 0, 128, 1, '2', 23, 0),
(712, 2, 216, 847, 0, 128, 1, '4', 23, 0),
(713, 2, 215, 845, 0, 128, 1, '2', 23, 0),
(714, 2, 218, 856, 0, 128, 1, '1', 23, 0),
(715, 2, 214, 839, 0, 128, 1, '2', 23, 0),
(716, 2, 156, 608, 0, 128, 2, '2', 23, 0),
(717, 2, 153, 597, 0, 128, 2, '2', 23, 0),
(718, 2, 158, 616, 0, 128, 2, '11', 23, 0),
(719, 2, 155, 603, 0, 128, 2, '2', 23, 0),
(720, 2, 159, 620, 0, 128, 2, '4', 23, 0),
(721, 2, 154, 599, 0, 128, 2, '21', 23, 0),
(722, 2, 160, 624, 0, 128, 2, '4', 23, 0),
(723, 2, 152, 592, 1, 128, 2, '27', 23, 0),
(724, 2, 157, 611, 0, 128, 2, '30', 23, 0),
(725, 2, 161, 628, 0, 128, 2, '2', 23, 0),
(726, 2, 136, 526, 0, 128, 3, '8', 23, 0),
(727, 2, 139, 540, 0, 128, 3, '2', 23, 0),
(728, 2, 133, 515, 1, 128, 3, '12', 23, 0),
(729, 2, 132, 512, 0, 128, 3, '15', 23, 0),
(730, 2, 134, 519, 0, 128, 3, '18', 23, 0),
(731, 2, 138, 535, 0, 128, 3, '21', 23, 0),
(732, 2, 140, 543, 0, 128, 3, '24', 23, 0),
(733, 2, 137, 532, 1, 128, 3, '2', 23, 0),
(734, 2, 131, 507, 0, 128, 3, '4', 23, 0),
(735, 2, 135, 524, 0, 128, 3, '34', 23, 0),
(736, 2, 212, 832, 0, 128, 10, '2', 24, 0),
(737, 2, 215, 844, 0, 128, 10, '5', 24, 0),
(738, 2, 213, 835, 1, 128, 10, '2', 24, 0),
(739, 2, 221, 867, 0, 128, 10, '2', 24, 0),
(740, 2, 220, 864, 1, 128, 10, '1', 24, 0),
(741, 2, 218, 855, 0, 128, 10, '2', 24, 0),
(742, 2, 214, 839, 0, 128, 10, '2', 24, 0),
(743, 2, 217, 851, 0, 128, 10, '4', 24, 0),
(744, 2, 219, 860, 0, 128, 10, '2', 24, 0),
(745, 2, 216, 847, 0, 128, 10, '2', 24, 0),
(746, 2, 158, 616, 0, 128, 9, '4', 24, 0),
(747, 2, 153, 596, 0, 128, 9, '10', 24, 0),
(748, 2, 156, 607, 0, 128, 9, '2', 24, 0),
(749, 2, 154, 600, 1, 128, 9, '16', 24, 0),
(750, 2, 152, 592, 1, 128, 9, '20', 24, 0),
(751, 2, 161, 627, 0, 128, 9, '24', 24, 0),
(752, 2, 155, 603, 0, 128, 9, '28', 24, 0),
(753, 2, 160, 623, 1, 128, 9, '31', 24, 0),
(754, 2, 157, 611, 0, 128, 9, '37', 24, 0),
(755, 2, 159, 620, 0, 128, 9, '3', 24, 0),
(756, 2, 134, 519, 0, 128, 8, '7', 24, 0),
(757, 2, 139, 540, 0, 128, 8, '9', 24, 0),
(758, 2, 133, 515, 1, 128, 8, '3', 24, 0),
(759, 2, 136, 527, 0, 128, 8, '3', 24, 0),
(760, 2, 135, 523, 0, 128, 8, '18', 24, 0),
(761, 2, 132, 511, 1, 128, 8, '22', 24, 0),
(762, 2, 138, 535, 0, 128, 8, '62', 24, 0),
(763, 2, 140, 543, 0, 128, 8, '27', 24, 0),
(764, 2, 137, 531, 0, 128, 8, '30', 24, 0),
(765, 2, 131, 507, 0, 128, 8, '33', 24, 0),
(766, 2, 217, 851, 0, 128, 10, '5', 25, 0),
(767, 2, 221, 867, 0, 128, 10, '2', 25, 0),
(768, 2, 220, 863, 0, 128, 10, '1', 25, 0),
(769, 2, 216, 847, 0, 128, 10, '2', 25, 0),
(770, 2, 218, 855, 0, 128, 10, '11', 25, 0),
(771, 2, 213, 835, 1, 128, 10, '2', 25, 0),
(772, 2, 219, 859, 0, 128, 10, '1', 25, 0),
(773, 2, 215, 843, 0, 128, 10, '2', 25, 0),
(774, 2, 212, 832, 0, 128, 10, '9', 25, 0),
(775, 2, 214, 840, 0, 128, 10, '7', 25, 0),
(776, 2, 216, 847, 0, 128, 10, '3', 26, 0),
(777, 2, 218, 855, 0, 128, 10, '3', 26, 0),
(778, 2, 215, 843, 0, 128, 10, '2', 26, 0),
(779, 2, 214, 839, 0, 128, 10, '1', 26, 0),
(780, 2, 213, 835, 1, 128, 10, '3', 26, 0),
(781, 2, 221, 867, 0, 128, 10, '3', 26, 0),
(782, 2, 212, 831, 0, 128, 10, '2', 26, 0),
(783, 2, 220, 863, 0, 128, 10, '2', 26, 0),
(784, 2, 217, 851, 0, 128, 10, '2', 26, 0),
(785, 2, 220, 864, 1, 128, 10, '129', 27, 0),
(786, 1011, 213, 836, 0, 128, 10, '3', 1, 0),
(787, 1011, 212, 832, 0, 128, 10, '5', 1, 0),
(788, 1011, 221, 868, 0, 128, 10, '3', 1, 0),
(789, 1011, 220, 864, 1, 128, 10, '45', 1, 0),
(790, 1011, 215, 844, 0, 128, 10, '13', 2, 0),
(791, 1011, 215, 844, 0, 128, 10, '5', 3, 0),
(792, 1011, 212, 832, 0, 128, 10, '7', 3, 0),
(793, 1011, 215, 844, 0, 128, 10, '9', 4, 0),
(794, 1011, 216, 848, 1, 128, 10, '9', 4, 0),
(795, 1011, 131, 509, 1, 128, 8, '59', 4, 0),
(796, 1011, 216, 848, 1, 128, 10, '20', 5, 0),
(797, 1011, 214, 839, 0, 128, 10, '17', 6, 0),
(798, 1011, 212, 832, 0, 128, 10, '2', 6, 0),
(799, 1011, 218, 856, 0, 128, 10, '4', 6, 0),
(800, 1011, 213, 863, 0, 128, 10, '2', 6, 0),
(801, 1011, 215, 844, 0, 128, 10, '3', 6, 0),
(802, 1011, 216, 863, 0, 128, 10, '1', 6, 0),
(803, 1011, 217, 852, 0, 128, 10, '5', 6, 0),
(804, 1011, 219, 863, 0, 128, 10, '1', 6, 0),
(805, 1011, 221, 863, 0, 128, 10, '2', 6, 0),
(806, 1011, 220, 863, 0, 128, 10, '1', 6, 0),
(807, 1011, 153, 595, 1, 128, 9, '11', 6, 0),
(808, 1011, 154, 598, 0, 128, 9, '15', 6, 0),
(809, 1011, 160, 623, 1, 128, 9, '4', 6, 0),
(810, 1011, 156, 607, 0, 128, 9, '24', 6, 0),
(811, 1011, 152, 593, 0, 128, 9, '2', 6, 0),
(812, 1011, 159, 619, 1, 128, 9, '30', 6, 0),
(813, 1011, 157, 610, 0, 128, 9, '3', 6, 0),
(814, 1011, 161, 628, 0, 128, 9, '41', 6, 0),
(815, 1011, 158, 616, 0, 128, 9, '2', 6, 0),
(816, 1011, 155, 603, 0, 128, 9, '6', 6, 0),
(817, 1011, 131, 507, 0, 128, 8, '61', 6, 0),
(818, 1011, 140, 544, 1, 128, 8, '66', 6, 0),
(819, 1011, 132, 512, 0, 128, 8, '2', 6, 0),
(820, 1011, 133, 516, 0, 128, 8, '112', 6, 0),
(821, 1011, 135, 524, 0, 128, 8, '73', 6, 0),
(822, 1011, 139, 540, 0, 128, 8, '76', 6, 0),
(823, 1011, 136, 527, 0, 128, 8, '3', 6, 0),
(824, 1011, 138, 516, 0, 128, 8, '3', 6, 0),
(825, 1011, 137, 516, 0, 128, 8, '121', 6, 0),
(826, 1011, 134, 516, 0, 128, 8, '2', 6, 0),
(827, 1011, 19, 66, 0, 1, 1, '7', 1, 0),
(828, 1011, 17, 58, 1, 1, 1, '10', 1, 0),
(829, 1011, 13, 43, 0, 1, 2, '5', 1, 0),
(830, 1011, 12, 39, 0, 1, 2, '3', 1, 0),
(831, 1011, 8, 22, 0, 1, 3, '28', 1, 0),
(832, 1011, 7, 18, 0, 1, 3, '18', 1, 0),
(833, 1011, 17, 58, 1, 1, 1, '5', 2, 0),
(834, 1011, 19, 58, 0, 1, 1, '10', 2, 0),
(835, 1011, 13, 42, 1, 1, 2, '4', 2, 0),
(836, 1011, 8, 23, 0, 1, 3, '4', 2, 0),
(837, 1011, 7, 18, 0, 1, 3, '14', 2, 0),
(838, 1011, 18, 63, 1, 1, 1, '3', 3, 0),
(839, 1011, 17, 59, 0, 1, 1, '10', 3, 0),
(840, 1011, 12, 39, 0, 1, 2, '9', 3, 0),
(841, 1011, 13, 43, 0, 1, 2, '3', 3, 0),
(842, 1011, 7, 19, 0, 1, 3, '18', 3, 0),
(843, 1011, 8, 21, 1, 1, 3, '34', 3, 0),
(844, 1011, 18, 62, 0, 1, 1, '3', 4, 0),
(845, 1011, 17, 59, 0, 1, 1, '3', 4, 0),
(846, 1011, 19, 67, 1, 1, 1, '3', 4, 0),
(847, 1011, 12, 39, 0, 1, 2, '3', 4, 0),
(848, 1011, 13, 43, 0, 1, 2, '3', 4, 0),
(849, 1011, 8, 22, 0, 1, 3, '3', 4, 0),
(850, 1011, 7, 18, 0, 1, 3, '10', 4, 0);

-- --------------------------------------------------------

--
-- Table structure for table `student_register`
--

CREATE TABLE `student_register` (
  `id` int(11) NOT NULL,
  `first_name` text NOT NULL,
  `last_name` text NOT NULL,
  `email` text NOT NULL,
  `contact_no` text NOT NULL,
  `state` text NOT NULL,
  `city` text NOT NULL,
  `dob` text NOT NULL,
  `gender` enum('1','2') NOT NULL COMMENT '1 => male, 2 => female',
  `tenth_passing_year` text NOT NULL,
  `tenth_percentage` text NOT NULL,
  `twelveth_passing_year` text NOT NULL,
  `twelveth_percentage` text NOT NULL,
  `degree` text NOT NULL,
  `degree_university` text,
  `degree_percentage` text NOT NULL,
  `degree_passing_year` text NOT NULL,
  `pg_college` text,
  `pg_passing_year` text,
  `pg_branch` text,
  `pg_university` text,
  `pg_percentage` text,
  `pg_degree` text,
  `year_gap` text,
  `stream` text NOT NULL,
  `work_location` text NOT NULL,
  `username` text,
  `password` text NOT NULL,
  `profile_image` text,
  `is_active` int(11) NOT NULL DEFAULT '0'
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `student_register`
--

INSERT INTO `student_register` (`id`, `first_name`, `last_name`, `email`, `contact_no`, `state`, `city`, `dob`, `gender`, `tenth_passing_year`, `tenth_percentage`, `twelveth_passing_year`, `twelveth_percentage`, `degree`, `degree_university`, `degree_percentage`, `degree_passing_year`, `pg_college`, `pg_passing_year`, `pg_branch`, `pg_university`, `pg_percentage`, `pg_degree`, `year_gap`, `stream`, `work_location`, `username`, `password`, `profile_image`, `is_active`) VALUES
(1, '', '', '', '', '', '', '', '1', '', '', '', '', '', NULL, '', '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, '', '', NULL, '', NULL, 0),
(2, 'c', 'c', '.a.2345@a1234.com', '8878100065', 'a', 'a', '2020-01-14', '2', '2010', '60.%', '2012', '60.%', 'a', NULL, '50.%', '2017', NULL, NULL, NULL, NULL, NULL, NULL, NULL, '', 'a', NULL, 'a', 'uploads/1.jpg', 0),
(3, 'd', 'l', 'd@d.com', '8878100065', '', '', '', '2', '', '', '', '', '', NULL, '', '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, '', '', NULL, '123123', NULL, 0),
(4, 'e', 'e', 'd@gmail.com', '8878100065', 'a', 'a', '1993-01-01', '1', '2017', '50', '2019', '50', 'be', NULL, '60', '2020', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'cse', 'a', NULL, '123123', NULL, 0),
(6, 'Deepak', 'Lohani', 'dlohani@gmail.com', '8878100065', '', '', '', '1', '', '', '', '', '', NULL, '', '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, '', '', NULL, '123', NULL, 0),
(7, 'dee', 'll', 'dee@gmail.com', '8878100065', '', '', '', '2', '', '', '', '', '', NULL, '', '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, '', '', NULL, '1', NULL, 0),
(1005, 'Deepak', 'Deepak', 'dlohani1@gmail.com', '8878100065', 's', 's', '1993-01-01', '1', '2011', '82', '2013', '60', 'BE', NULL, '60', '2017', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'CSE', 's', NULL, '123', NULL, 0),
(1006, 'abc', 'def', 'd1@gmail.com', '8878100065', '', '', '', '1', '', '', '', '', '', NULL, '', '', NULL, NULL, NULL, NULL, NULL, NULL, NULL, '', '', NULL, '1', NULL, 0),
(1007, 'ab', 'bb', 'abb@gmail.com', '8878100065', 'KA', 'Bengaluru', '1993-01-01', '1', '2011', '33', '2012', '33', ' BE', NULL, '45', '2016', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'CSE', 'Bengaluru', NULL, '', NULL, 0),
(1008, 'nmmm', 'dfdf', 'mm@mm.com', '8878100065', 'KA', 'Bengaluru', '1993-01-01', '1', '2011', '45', '2013', '45', ' BE', NULL, '56', '2018', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'CSE', 'Bengaluru', NULL, '', 'uploads/1.jpg', 0),
(1009, 'aaa', 'bbb', 'abb@gmail.com', '8878100065', 'KA', 'b', '1993-01-01', '1', '2012', '33', '2011', '33', 'BE', NULL, '45', '2033', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'CSE', 'b', NULL, 'v5jJEs', NULL, 0),
(1010, 'dda', 'dddf', 'd1@gmail.com', '8878100065', 'KA', 'B', '1993-01-01', '1', '2011', '34', '2013', '43', 'BE', NULL, '45', '2015', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'CSE', 'B', NULL, 'HIsJBl', NULL, 0),
(1011, 'a', 'a', 'a@a.com', '8878100065', 'KA', 'Bengaluru', '1993-01-01', '1', '2009', '45', '2011', '45', 'BE', NULL, '56', '2015', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'CSE', 'Bengaluru', NULL, 'a', 'uploads/1.jpg', 0),
(1012, 'dd', 'aa', 'a@a.com', '8878100065', 'KA', 'Bengaluru', '1993-01-01', '1', '2009', '33', '2011', '45', 'BE', NULL, '54', '2018', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'CSE', 'Bengaluru', NULL, 'cU62i9', NULL, 0),
(1013, 'dd', 'll', 'b@a.com', '8878100065', 'KA', 'Bengaluru', '1993-01-01', '1', '2011', '45', '2013', '32', 'BE', NULL, '35', '2014', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'CSE', 'Bengaluru', NULL, 'mgWcPa', NULL, 0),
(1014, 'new', 'new', 'dl@gmail.com', '8878100065', 'KA', 'B', '1993-01-01', '1', '2011', '65', '2013', '78', 'BE', NULL, '67', '2015', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'CSE', 'B', '7h6T2y09', 'CLgDkVch', NULL, 0),
(1017, 'a', 'a', 'dfddd@gmail.com', '8878100065', 'aa', 'aa', '1993-01-01', '1', '2019', '33', '2017', '56', 'd', NULL, '45', '2017', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'dd', 'aaa', 'DTUP', '1682', NULL, 0),
(1018, 'b', 'b1', 'b1@gmail.com', '8319660236', 'a', 'a', '1993-01-01', '1', '2017', '56', '2018', '78', 'a', NULL, '78', '2018', NULL, NULL, NULL, NULL, NULL, NULL, NULL, 'cse', 'a', '9IO5', '4921', NULL, 0),
(1019, 'adeaa', 'dfdf', 'df@gmail.com', '8878100065', 'afdaf', 'adf', '1993-01-01', '1', '2014', '54', '2016', '67', 'dd', 'adfed', '45', '2016', 'ad', '2014', 'afa', 'afaf', '34', 'dfaf', 'on', 'daa', 'afad', 'K36F', '2013', NULL, 0),
(1020, 'dfd', 'aad', 'da@daa.com', '8319660236', 'aa', 'dd', '1993-01-01', '1', '2017', '45', '2016', '45', 'dd', 'aad', '45', '2017', 'aa', '2018', 'dd', '2', '34', 'aad', 'on', 'aa', 'aa', 'DKEU', '1937', NULL, 0),
(1021, 'ad', 'afdadf', 'aaa@gmail.com', '8878100065', 'a', 'a', '1993-01-01', '1', '2014', '56', '2016', '56', 'aa', 'aa', '67', '2018', 'daf', '2019', 'aa', '2', '87', 'afa', 'on', 'aa', 'a', 'CLA5', '2995', NULL, 0);

-- --------------------------------------------------------

--
-- Table structure for table `sub_section`
--

CREATE TABLE `sub_section` (
  `id` int(11) NOT NULL,
  `section_id` int(11) NOT NULL,
  `sub_section_name` text NOT NULL,
  `section_category_id` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `sub_section`
--

INSERT INTO `sub_section` (`id`, `section_id`, `sub_section_name`, `section_category_id`) VALUES
(1, 1, 'Articles', NULL),
(2, 1, 'Prepositions', NULL),
(3, 1, 'Tense', NULL),
(4, 1, 'Gerund', NULL),
(5, 1, 'Sentence Correction', NULL),
(6, 1, 'Speech', NULL),
(7, 1, 'Reading Comprehension', NULL),
(8, 1, 'Synonyms & Antonyms', NULL),
(9, 1, 'Vocabulary', NULL),
(10, 1, 'Spelling', NULL),
(11, 1, 'Sequencing', NULL),
(12, 2, 'Series', NULL),
(13, 2, 'Coding - Decoding', NULL),
(14, 2, 'Flowchart', NULL),
(15, 2, 'Visual Reasoning', NULL),
(16, 2, 'Data Sufficiency', NULL),
(17, 2, 'Case Puzzles', NULL),
(18, 2, 'Assumptions & Arguments', NULL),
(19, 2, 'Statement & Conclusions', NULL),
(20, 3, 'Algebra', NULL),
(21, 3, 'Ratio & Proportions', NULL),
(22, 3, 'Profit & Loss', NULL),
(23, 3, 'SI & CI', NULL),
(24, 3, 'Geometry', NULL),
(25, 3, 'Speed & Distance', NULL),
(26, 3, 'Mathematical Modeling', NULL),
(27, 3, 'Data Interpretation', NULL),
(28, 3, 'Time and Work', NULL),
(29, 3, 'Mean, Median, Mode', NULL),
(30, 3, 'Venn Diagram', NULL),
(31, 4, 'C, C++, OOPS Concepts', NULL),
(32, 4, 'Data Structures', NULL),
(33, 4, 'DBMS concepts', NULL),
(34, 4, 'Operating System Concepts', NULL),
(35, 4, 'Design and Analysis of Algorithms', NULL),
(36, 4, 'Networking Concepts', NULL),
(37, 4, 'Computer Architecture', NULL),
(38, 9, 'TEST', 2),
(39, 8, 'test', 2),
(40, 10, 'test', 2);

--
-- Indexes for dumped tables
--

--
-- Indexes for table `answers`
--
ALTER TABLE `answers`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `answers_test`
--
ALTER TABLE `answers_test`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `drive-details`
--
ALTER TABLE `drive-details`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `mcq-code-test`
--
ALTER TABLE `mcq-code-test`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `mcq_code`
--
ALTER TABLE `mcq_code`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `mcq_code_test`
--
ALTER TABLE `mcq_code_test`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `mcq_test`
--
ALTER TABLE `mcq_test`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `mcq_test_pattern`
--
ALTER TABLE `mcq_test_pattern`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `mcq_test_question`
--
ALTER TABLE `mcq_test_question`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `mcq_time`
--
ALTER TABLE `mcq_time`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `question_bank`
--
ALTER TABLE `question_bank`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `question_bank_test`
--
ALTER TABLE `question_bank_test`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `question_levels`
--
ALTER TABLE `question_levels`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `section`
--
ALTER TABLE `section`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `section_category`
--
ALTER TABLE `section_category`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `special_section_question`
--
ALTER TABLE `special_section_question`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `student_answers`
--
ALTER TABLE `student_answers`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `student_register`
--
ALTER TABLE `student_register`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `sub_section`
--
ALTER TABLE `sub_section`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `answers`
--
ALTER TABLE `answers`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=926;
--
-- AUTO_INCREMENT for table `answers_test`
--
ALTER TABLE `answers_test`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=629;
--
-- AUTO_INCREMENT for table `drive-details`
--
ALTER TABLE `drive-details`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;
--
-- AUTO_INCREMENT for table `mcq-code-test`
--
ALTER TABLE `mcq-code-test`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=15;
--
-- AUTO_INCREMENT for table `mcq_code`
--
ALTER TABLE `mcq_code`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=117;
--
-- AUTO_INCREMENT for table `mcq_code_test`
--
ALTER TABLE `mcq_code_test`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;
--
-- AUTO_INCREMENT for table `mcq_test`
--
ALTER TABLE `mcq_test`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=137;
--
-- AUTO_INCREMENT for table `mcq_test_pattern`
--
ALTER TABLE `mcq_test_pattern`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=66;
--
-- AUTO_INCREMENT for table `mcq_test_question`
--
ALTER TABLE `mcq_test_question`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=836;
--
-- AUTO_INCREMENT for table `mcq_time`
--
ALTER TABLE `mcq_time`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=126;
--
-- AUTO_INCREMENT for table `question_bank`
--
ALTER TABLE `question_bank`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=236;
--
-- AUTO_INCREMENT for table `question_bank_test`
--
ALTER TABLE `question_bank_test`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=84;
--
-- AUTO_INCREMENT for table `question_levels`
--
ALTER TABLE `question_levels`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;
--
-- AUTO_INCREMENT for table `section`
--
ALTER TABLE `section`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=12;
--
-- AUTO_INCREMENT for table `section_category`
--
ALTER TABLE `section_category`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=10;
--
-- AUTO_INCREMENT for table `special_section_question`
--
ALTER TABLE `special_section_question`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;
--
-- AUTO_INCREMENT for table `student_answers`
--
ALTER TABLE `student_answers`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=851;
--
-- AUTO_INCREMENT for table `student_register`
--
ALTER TABLE `student_register`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=1022;
--
-- AUTO_INCREMENT for table `sub_section`
--
ALTER TABLE `sub_section`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=41;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
